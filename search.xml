<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo添加徽标</title>
      <link href="2022/03/13/hexo%E7%BE%8E%E5%8C%96/hexo%E6%B7%BB%E5%8A%A0%E5%BE%BD%E6%A0%87/"/>
      <url>2022/03/13/hexo%E7%BE%8E%E5%8C%96/hexo%E6%B7%BB%E5%8A%A0%E5%BE%BD%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="github徽标"><a href="#github徽标" class="headerlink" title="github徽标"></a>github徽标</h1><ol><li><p>github 徽标可以直接通过 <a href="https://shields.io/">shields.io</a> 在线生成。</p></li><li><p>理论上可以放在页面的任何地方。教程案例是添加在页脚。</p></li><li><p>工具网站包括：</p><ul><li><p><a href="https://shields.io/">徽标生成网站:shields</a></p></li><li><p><a href="https://simpleicons.org/">图标查询网站:simpleicons</a></p></li><li><p><a href="http://tool.ggo.net/htmlpack/">html 压缩网站:htmlpack</a></p></li><li><p>转义字符查询</p><p>预览效果</p></li></ul></li></ol><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><ol><li>通过 <a href="https://shields.io/">shields.io</a> 在线生成。<ul><li>label: 标签，徽标左侧内容</li><li>message: 信息，徽标右侧内容</li><li>color: 色值，支持支持十六进制、rgb、rgba、hsl、hsla 和 css 命名颜色。十六进制记得删除前面的 #号</li></ul></li><li>输入相关信息后，点击 <code>make badge</code> 即可得到徽标的 URL。可以用 img 标签引用，写法简单。不过正式写法建议用 object 标签引用，写法示例如下。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- label=Frame，Message=Hexo，color=blue --&gt;</span></span><br><span class="line">https://img.shields.io/badge/Frame-Hexo-blue</span><br><span class="line"><span class="comment">&lt;!-- 在页面上可以使用img标签来引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Frame-Hexo-blue&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 部分属性例如link需要用object标签来引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;https://img.shields.io/badge/Frame-Hexo-blue?link=https://hexo.io&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>拓展写法示例</li></ol><h1 id="tabset"><a href="#tabset" class="headerlink" title="{.tabset}"></a>{.tabset}</h1><h2 id="填写说明"><a href="#填写说明" class="headerlink" title="填写说明"></a>填写说明</h2><div class="tabs" id="test1"><ul class="nav-tabs"></ul><div class="tab-contents"></div></div>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R-studio数据恢复软件使用教程</title>
      <link href="2022/03/08/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/R-studio%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>2022/03/08/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/R-studio%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>R-STUDIO是一套功能强大、经济高效的磁盘恢复软件。最初由R-ToolsTechnology.Inc.研发，面向有经验的数据恢复专业人员，R-Studio已通过重新设计，成为可升级、用户友好型一体化数据恢复工具。通过将最先进的文件恢复和磁盘修复技术与直观的用户界面进行联合，R-Studio可为企业和专业级数据您复专家提供所需工具，而对入门级用户也不会造成使用方面的阻碍。</p><p>【使用场景】</p><ol><li>系统装错盘</li><li>SD卡误删除</li><li>U盘显示需格式化</li><li>文件误删除</li></ol><p>R-Studio 是功能超强的数据、反删除工具，采用全新恢复技术，为使用 FAT12/16/32、NTFS、NTFS5(Windows 2000系统)和 Ext2FS(Linux系统)分区的磁盘提供完整数据维护解决方案！同时提供对本地和网络磁盘的支持，此外大量参数设置让高级用户获得最佳恢复效果。具体功能有：采用 Windows<a href="https://so.csdn.net/so/search?q=%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8&spm=1001.2101.3001.7020">资源管理器</a>操作界面；通过网络恢复远程数据(远程计算机可运行Win95/98/ME/NT/2000/XP、Linux、UNIX 系统)；支持 FAT12/16/32、NTFS、NTFS5 和 Ext2FS文件系统等</p><p><a href="https://imgtu.com/i/bcekut"><img src="https://s1.ax1x.com/2022/03/08/bcekut.png" alt="bcekut.png"></a></p><p>R-Studio可以通过对整个磁盘的扫描，利用智能检索技术搜索到的数据来确定现存的和曾经存在过的分区以及它的文件系统格式。运行R-Studio后，程序可以自动识别到硬盘，读取其分区表并列举出现存的分区。<br>第一步：R-studio软件的主界面如图;选择需要恢复数据的盘符。</p><p><a href="https://imgtu.com/i/bcem4g"><img src="https://s1.ax1x.com/2022/03/08/bcem4g.png" alt="bcem4g.png"></a></p><p>第二步：点击开始扫描后，R-Studio弹出扫描设置窗口</p><p><a href="https://imgtu.com/i/bceK3j"><img src="https://s1.ax1x.com/2022/03/08/bceK3j.png" alt="bceK3j.png"></a></p><p>第三步：根据磁盘的文件系统相应选择即可，这样可以加快分析速度，扫描时，将扫描信息保存一下是一个好习惯，以后可以直接打开，无需再次扫描，选择保存位置的时候，不要选择待恢复数据的硬盘上的分区，这里以D盘为例</p><p><a href="https://imgtu.com/i/bceMgs"><img src="https://s1.ax1x.com/2022/03/08/bceMgs.png" alt="bceMgs.png"></a></p><p>下图是刚扫描完的信息，左边绿色的表示扫描到的优质的分区结构，橘黄色表示次要可能的分区结构</p><p><a href="https://imgtu.com/i/bce3D0"><img src="https://s1.ax1x.com/2022/03/08/bce3D0.png" alt="bce3D0.png"></a></p><p>R-Studio目录列表中可以看到完整的文件夹结构，红色带x和问号的文件夹是以前人为或系统删除过的内容</p><p><a href="https://imgtu.com/i/bceJET"><img src="https://s1.ax1x.com/2022/03/08/bceJET.png" alt="bceJET.png"></a></p><p>第四步：打开左边的文件目录表，然后把需要恢复的文件一一勾取上</p><p><a href="https://imgtu.com/i/bcewvR"><img src="https://s1.ax1x.com/2022/03/08/bcewvR.png" alt="bcewvR.png"></a></p><p>第五步：选择设置导出数据存放目的地，其他选项默认即可。注意！不可将数据存放到待恢复的数据硬盘上</p><p><a href="https://imgtu.com/i/bceR8H"><img src="https://s1.ax1x.com/2022/03/08/bceR8H.png" alt="bceR8H.png"></a></p><p><strong>注：本文不提供软件下载链接，有需要可自行在网络上查找</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加小客服功能</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E5%B0%8F%E5%AE%A2%E6%9C%8D%E5%8A%9F%E8%83%BD/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E5%B0%8F%E5%AE%A2%E6%9C%8D%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>先去<a href="https://dashboard.daocloud.io/">DaoVoice</a>官网注册账号</p><p>在<code>~\Butterfly\layout\includes</code>文件夹下创建<code>addons\daovoice.pug</code>，并将以下代码放入<strong>将xxxxx改为自己的应用id</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  body</span><br><span class="line">    script.</span><br><span class="line">      (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/xxxxxxxx.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">      daovoice(&#x27;init&#x27;, &#123;</span><br><span class="line">      app_id: &quot;xxxxxxxx&quot;</span><br><span class="line">      &#125;);</span><br><span class="line">      daovoice(&#x27;update&#x27;);</span><br><span class="line">12345678</span><br></pre></td></tr></table></figure><p>然后我们打开<code>./layout/index.pug</code>文件，在里面加入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.daovoice.enable</span><br><span class="line">  include includes/addons/daovoice.pug</span><br></pre></td></tr></table></figure><p>在主题配置文件下添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Daovoice实时客服功能</span></span><br><span class="line"><span class="attr">daovoice:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加樱花飘落背景</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%A8%B1%E8%8A%B1%E9%A3%98%E8%90%BD%E8%83%8C%E6%99%AF/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%A8%B1%E8%8A%B1%E9%A3%98%E8%90%BD%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd theme/Butterfly/source/js</span><br><span class="line">wget https:<span class="comment">//yremp.live/wp-content/uploads/resource/js/sakura.js</span></span><br></pre></td></tr></table></figure><p>把下载好的Js文件放在<code>theme/Butterfly/source/js</code>文件夹下 <code>/Butterfly/layout/includes</code>文件夹下找到<code>head.pug</code>文件，在最后引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.sakura.enable</span><br><span class="line">  script(src=<span class="string">&quot;/js/sakura.js&quot;</span>)</span><br></pre></td></tr></table></figure><p>在主题的主配置文件加入<code>Butterfly/_config.yml</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 页面樱花飘落动效</span><br><span class="line"><span class="attr">sakura</span>:</span><br><span class="line">  enable: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加页脚跳动的♥</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E9%A1%B5%E8%84%9A%E8%B7%B3%E5%8A%A8%E7%9A%84%E2%99%A5/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E9%A1%B5%E8%84%9A%E8%B7%B3%E5%8A%A8%E7%9A%84%E2%99%A5/</url>
      
        <content type="html"><![CDATA[<p>编辑博客根目录<code>themes/Butterfly/layout/includes/footer.pug</code>文件，将</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;theme.footer.owner.since&#125;</span> - <span class="subst">$&#123;nowYear&#125;</span> By <span class="subst">$&#123;config.author&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;theme.footer.owner.since&#125;</span> - <span class="subst">$&#123;nowYear&#125;</span> &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt;  <span class="subst">$&#123;config.author&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;nowYear&#125;</span> By <span class="subst">$&#123;config.author&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;nowYear&#125;</span> &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; <span class="subst">$&#123;config.author&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>编辑<code>butterfly.yml</code>文件</p><p>在<code>inject-&gt;head</code>下面添加如下内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- <span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加访客地图</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E8%AE%BF%E5%AE%A2%E5%9C%B0%E5%9B%BE/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E8%AE%BF%E5%AE%A2%E5%9C%B0%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>前往 <a href="https://clustrmaps.com/">clustrmaps</a> 网站注册一个帐号</p><p>找到 <code>Free Tools</code> 下面的 <code>Website Widget</code>, 点击 <code>Get Map Widget</code></p><p>输入你的博客网址，点击 <code>Next</code></p><p>根据你自己的喜好选择样式 <code>Map widget</code> 或 <code>Globe Widget</code></p><p>找到如下代码，记住 <code>src (****** 的部分)</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> id=<span class="string">&quot;clstr_globe&quot;</span> src=<span class="string">&quot;**********************&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>在 <code>themes/butterfly/layout/includes/widget/</code> 文件夹新建 <code>card_map.pug</code> 文件，文件内容如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.card-widget.card-map</span><br><span class="line">  .card-content</span><br><span class="line">    .item-headline</span><br><span class="line">      i.fa.fa-globe-asia(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">      span= _p(<span class="string">&#x27;aside.card_map&#x27;</span>)</span><br><span class="line">    script#clstr_globe(type=<span class="string">&quot;text/javascript&quot;</span> defer=<span class="string">&quot;defer&quot;</span> src=<span class="string">&quot;此处填入你自己的代码&quot;</span>)</span><br></pre></td></tr></table></figure><p>编辑 <code>themes/butterfly/layout/includes/widget/index.pug</code> 文件，在你想要显示的位置插入以下代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.aside.card_map</span><br><span class="line">        !=partial(<span class="string">&#x27;includes/widget/card_map&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bypcrj"><img src="https://s1.ax1x.com/2022/03/07/bypcrj.png" alt="index.pug"></a></p><blockquote><p> 注意格式</p></blockquote><p>编辑 <code>butterfly/_config.yml</code> 文件，在 <code>card_webinfo</code> 下面添加一行 <code>card_map: true</code></p><p><a href="https://imgtu.com/i/bypLZR"><img src="https://s1.ax1x.com/2022/03/07/bypLZR.png" alt="_config.yml"></a></p><p>编辑 <code>themes/Butterfly/languages/zh-CN.yml</code> 文件 (请根据你的网站语言选择)，找到 <code>aside</code> 下对应格式添加 <code>card_map: 访客地图</code> (后面的文本可自定义)</p><p><a href="https://imgtu.com/i/by9CsH"><img src="https://s1.ax1x.com/2022/03/07/by9CsH.png" alt="zh-CN.yml"></a></p><p>如果不想显示，直接把 <code>butterfly/_config.yml</code> 文件的 <code>card_map: true</code> 改为 <code>card_map: false</code> 即可</p>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo引入样式文件</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><code>spinner-boxbutterfly</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- <span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/zyoushuo/Blog@latest/hexo/css/loading_style_1.css&quot;</span> &gt;</span></span></span><br></pre></td></tr></table></figure><p>gear风格样式文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- <span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/zyoushuo/Blog@latest/hexo/css/loading_style_2.css&quot;</span> &gt;</span></span></span><br></pre></td></tr></table></figure><p>将上面两行代码加到主题目录<code>_config _yml</code>下的<code>inject</code>中</p><p>引入到页面</p><p>找到 <code>themes/butterfly/layout/includes/</code>下的文件<code>layout.pug</code>,将代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.preloader</span><br><span class="line">      !=partial(<span class="string">&#x27;includes/loading/loading&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.preloader</span><br><span class="line">      !=partial(<span class="string">&#x27;includes/loading/loaded.ejs&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>开启加载</p><p>主题目录<code>_config _yml</code>中的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preloader: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">preloader:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  <span class="attr">layout</span>: gear # gear, spinner-box 两种样式</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo加载动画修改</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<p>添加配置文件</p><p>在目录<code>themes/butterfly/layout/includes/loading</code>下添加<code>loaded.ejs</code>文件，代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.preloader.enable) &#123; %&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;loader&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &lt;% if(theme.preloader.layout == &#x27;gear&#x27; ) &#123;%&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer_box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loader_overlay&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loader_cogs&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loader_cogs__top&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;top_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;top_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;top_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;top_hole&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loader_cogs__left&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;left_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;left_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;left_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;left_hole&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;loader_cogs__bottom&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;bottom_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;bottom_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;bottom_part&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;bottom_hole&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>loading...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  &lt;% &#125; else if(theme.preloader.layout == &#x27;spinner-box&#x27;) &#123; %&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading-left-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading-right-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;spinner-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;configure-border-1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;configure-core&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;configure-border-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;configure-core&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading-word&quot;</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">var</span> endLoading = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">document</span>.body.style.overflow = <span class="string">&#x27;auto&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;loader&#x27;</span>).classList.add(<span class="string">&quot;loading&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>,endLoading);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加日历插件</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%97%A5%E5%8E%86%E6%8F%92%E4%BB%B6/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%97%A5%E5%8E%86%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="安装-hexo-generator-calendar-插件"><a href="#安装-hexo-generator-calendar-插件" class="headerlink" title="安装 hexo-generator-calendar 插件"></a>安装 <code>hexo-generator-calendar</code> 插件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save git:<span class="comment">//github.com/howiefh/hexo-generator-calendar.git</span></span><br></pre></td></tr></table></figure><p>下载 <code>calendar.js</code> 和 <code>languages.js</code> 文件，保存到 <code>themes/Butterfly/source/js/</code> 目录</p><ul><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/calendar.js">calendar.js</a> 下载地址</li><li><a href="https://github.com/pengloo53/Hexo-theme-light_cn/blob/master/source/js/languages.js">languages.js</a> 下载地址</li></ul><p>编辑 <code>calendar.js</code> 文件，在文件最后<code>&#125;(jQuery));</code> 之前添加:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#calendar&#x27;</span>).aCalendar(<span class="string">&#x27;zh-CN&#x27;</span>);<span class="comment">//&#x27;zh-CN&#x27;请根据自己博客的语言选择</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="具体位置参考下图："><a href="#具体位置参考下图：" class="headerlink" title="具体位置参考下图："></a>具体位置参考下图：</h2><p>编辑 <code>butterfly.yml</code> 文件, 在 <code>inject-&gt;bottom</code> 下面添加如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/calendar.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">- <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/languages.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>新建 <code>calendar.styl</code> 文件，保存到 <code>themes/Butterfly/source/css/_layout/</code> 目录下,内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#calendar</span><br><span class="line">  a</span><br><span class="line">    text-decoration none</span><br><span class="line"></span><br><span class="line">.cal-head</span><br><span class="line">  margin-bottom: 15px</span><br><span class="line">  position relative</span><br><span class="line">  height 20px</span><br><span class="line">  padding 8px 6px 2px 6px</span><br><span class="line"></span><br><span class="line">.cal-prev,.cal-next</span><br><span class="line">  position absolute</span><br><span class="line">  top 9px</span><br><span class="line">  width 16px</span><br><span class="line">  height 18px</span><br><span class="line">  padding 3px 4px</span><br><span class="line">  border 1px solid transparent</span><br><span class="line">  color #<span class="number">333</span></span><br><span class="line">  outline <span class="number">0</span></span><br><span class="line"></span><br><span class="line">.cal-prev</span><br><span class="line">  left 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">    border-right 9px solid #<span class="number">333</span></span><br><span class="line"></span><br><span class="line">.cal-next</span><br><span class="line">  right 8px</span><br><span class="line">  &amp;:before</span><br><span class="line">    border-left 9px solid #<span class="number">333</span></span><br><span class="line"></span><br><span class="line">.cal-prev:before,.cal-next:before</span><br><span class="line">  content <span class="string">&#x27;&#x27;</span></span><br><span class="line">  display block</span><br><span class="line">  width <span class="number">0</span></span><br><span class="line">  height <span class="number">0</span></span><br><span class="line">  border-top 5px solid transparent</span><br><span class="line">  border-bottom 5px solid transparent</span><br><span class="line"></span><br><span class="line">.cal-title</span><br><span class="line">  width 100px</span><br><span class="line">  margin <span class="number">0</span> auto</span><br><span class="line">  color #<span class="number">333</span></span><br><span class="line">  font bold 14px/18px Arial</span><br><span class="line">  text-align center</span><br><span class="line">  a</span><br><span class="line">    border 1px solid transparent</span><br><span class="line">    color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal,</span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  border 1px solid #d1d1d1</span><br><span class="line"></span><br><span class="line">.cal</span><br><span class="line">  <span class="attr">display</span>: table</span><br><span class="line">  border-collapse separate</span><br><span class="line">  border-spacing <span class="number">0</span></span><br><span class="line">  border-width 1px <span class="number">0</span> <span class="number">0</span> 1px</span><br><span class="line">  table-layout fixed</span><br><span class="line">  width <span class="number">100</span>%</span><br><span class="line">  margin <span class="number">0</span></span><br><span class="line">  th</span><br><span class="line">    background #9f9f9f</span><br><span class="line">    color #fff</span><br><span class="line">    border-width <span class="number">0</span> 1px 1px <span class="number">0</span></span><br><span class="line">    font-weight <span class="number">700</span></span><br><span class="line">  td</span><br><span class="line">    border-width <span class="number">0</span> 1px 1px <span class="number">0</span></span><br><span class="line">  tbody</span><br><span class="line">    a</span><br><span class="line">      background-color #007acc</span><br><span class="line">      color #fff</span><br><span class="line">      display block</span><br><span class="line">      font-weight <span class="number">700</span></span><br><span class="line">    .cal-today</span><br><span class="line">      background-color #66ecfd</span><br><span class="line">      color #fff</span><br><span class="line">  .cal-gray</span><br><span class="line">    color #bbb8b8</span><br><span class="line"></span><br><span class="line">[data-theme=<span class="string">&#x27;dark&#x27;</span>] .cal .cal-gray</span><br><span class="line">  color #<span class="number">505050</span></span><br><span class="line"></span><br><span class="line">.cal th,</span><br><span class="line">.cal td</span><br><span class="line">  font-weight normal</span><br><span class="line">  line-height <span class="number">2.5625</span></span><br><span class="line">  padding <span class="number">0</span></span><br><span class="line">  text-align center</span><br><span class="line"></span><br><span class="line">[data-theme=<span class="string">&#x27;dark&#x27;</span>] .cal .cal-foot</span><br><span class="line">  color #9f9f9f</span><br><span class="line"></span><br><span class="line">.cal .cal-foot</span><br><span class="line">  color #2ca6cb</span><br><span class="line"></span><br><span class="line">.cal-title a:hover,</span><br><span class="line">.cal-prev:hover,</span><br><span class="line">.cal-next:hover,</span><br><span class="line">.cal .cal-foot:hover,</span><br><span class="line">.cal .cal-foot:focus,</span><br><span class="line">.cal tbody a:hover,</span><br><span class="line">.cal tbody a:focus</span><br><span class="line">  background-color #<span class="number">686868</span></span><br><span class="line">  color #fff</span><br><span class="line">  cursor pointer</span><br></pre></td></tr></table></figure><p>在 <code>themes/Butterfly/layout/includes/widget/</code> 文件夹新建 <code>card_calendar.pug</code> 文件，文件内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.card-widget.card-calendar</span><br><span class="line">  .card-content</span><br><span class="line">    .item-headline</span><br><span class="line">      i.far.fa-calendar-alt(aria-hidden=<span class="string">&quot;true&quot;</span>)</span><br><span class="line">      span= _p(<span class="string">&#x27;aside.card_calendar&#x27;</span>)</span><br><span class="line">    div.widget-wrap</span><br><span class="line">    div#calendar.widget</span><br></pre></td></tr></table></figure><p>编辑 <code>themes/Butterfly/layout/includes/widget/index.pug</code>     文件，在你想要显示的位置插入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.aside.card_calendar</span><br><span class="line">        !=partial(<span class="string">&#x27;includes/widget/card_calendar&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><h2 id="具体位置参考下图：-1"><a href="#具体位置参考下图：-1" class="headerlink" title="具体位置参考下图："></a>具体位置参考下图：</h2><p><a href="https://imgtu.com/i/bspCwt"><img src="https://s1.ax1x.com/2022/03/07/bspCwt.png" alt="index.pug"></a></p><blockquote><p> 注意格式，放置位置，会影响顺序排版！</p></blockquote><p>编辑 <code>butterfly.yml</code> 文件，在 <code>card_webinfo</code> 下面添加一行 <code>card_calendar: true</code></p><p><a href="https://imgtu.com/i/bspmOs"><img src="https://s1.ax1x.com/2022/03/07/bspmOs.png" alt="butterfly.yml"></a></p><p>编辑 <code>themes/Butterfly/languages/zh-CN.yml</code> 文件 (请根据你的网站语言选择)，找到 <code>aside</code>  , 在下面添加一行 <code>card_calendar: 日历</code> (后面的文本可自定义)</p><p><a href="https://imgtu.com/i/bspW7t"><img src="https://s1.ax1x.com/2022/03/07/bspW7t.png" alt="zh-CN.yml"></a></p><p>如果不想显示，直接把 <code>butterfly.yml</code> 文件的 <code>card_calendar: true</code> 改为 <code>card_calendar: false</code> 即可</p>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加看板娘</title>
      <link href="2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
      <url>2022/03/07/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
      
        <content type="html"><![CDATA[<h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><blockquote><p>由于<a href="https://so.csdn.net/so/search?q=hexo&spm=1001.2101.3001.7020">hexo</a>官方版的板娘不能说话，不能换装，功能较少</p><p>所以这里使用<a href="https://github.com/stevenjoezhang/live2d-widget">张书樵</a>的魔改项目</p></blockquote><p>先到<code>~\Butterfly\source</code>文件夹下执行，确保<code>clone</code>下的项目文件夹为<code>live2d-widget</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/stevenjoezhang/live2d-widget.git</span><br></pre></td></tr></table></figure><p>进入<code>live2d-widget</code>文件夹，将里面<code>autoload.js</code>文件的第一行改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">&quot;/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><p>在主题配置文的件<code>CDN_USE</code>的中添加<code>/live2d-widget/autoload.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># CDN</span><br><span class="line"># 網站必須</span><br><span class="line"># 可根據需要自行添加js/css</span><br><span class="line"><span class="attr">CDN_USE</span>:</span><br><span class="line">  css:</span><br><span class="line">    - <span class="regexp">/css/i</span>ndex.css</span><br><span class="line">    - https:<span class="comment">//cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/flink.min.css</span></span><br><span class="line">    - https:<span class="comment">//cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</span></span><br><span class="line">  js:</span><br><span class="line">    - https:<span class="comment">//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js #/js/third-party/jquery.min.js</span></span><br><span class="line">    - <span class="regexp">/js/u</span>tils.js</span><br><span class="line">    - <span class="regexp">/js/m</span>ain.js</span><br><span class="line">    - <span class="regexp">/live2d-widget/</span>autoload.js</span><br></pre></td></tr></table></figure><p>在主题配置文件下添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><blockquote><p>由<a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang</a> 魔改项目 </p><p>最简单引用方式在<code>Butterfly/_config.yml</code>中<code>inject</code>添加</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">   head:</span><br><span class="line">     - <span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">   bottom:</span></span><br><span class="line"><span class="xml">     - <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加浏览器恶搞</title>
      <link href="2022/03/06/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%81%B6%E6%90%9E/"/>
      <url>2022/03/06/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%81%B6%E6%90%9E/</url>
      
        <content type="html"><![CDATA[<p>在<code>~\Butterfly\source\js</code>文件夹下添加<code>crash_cheat.js</code>文件</p><p>填入以下内容<strong>记得要修改你喜欢的标题</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> OriginTitle = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/joke.ico&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;看不见我🙈~看不见我🙈~&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/favicon.ico&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27; ( ๑•̀ㅂ•́) ✧被发现了～&#x27;</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.title = OriginTitle;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在<code>~\Butterfly\layout\includes\layout.pug</code>中添加以下代码来引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script(type=&#x27;text/javascript&#x27;, src=&#x27;/js/crash_cheat.js&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="2022/03/04/%E6%9D%82%E8%AE%B0/%E6%9D%82%E8%AE%B0/"/>
      <url>2022/03/04/%E6%9D%82%E8%AE%B0/%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么硬盘分区的大小总是和分区时输入的大小相差了一点？"><a href="#为什么硬盘分区的大小总是和分区时输入的大小相差了一点？" class="headerlink" title="为什么硬盘分区的大小总是和分区时输入的大小相差了一点？"></a>为什么硬盘分区的大小总是和分区时输入的大小相差了一点？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-03-04</span><br></pre></td></tr></table></figure><p>这是因为系统与厂家算的方法不一样导致的，如果要分成整数，可以按这个公式来</p><p>这里我们把要分区的整数GB设置为“N”，则正确的计算公式应为：</p><p><strong>(N-1)*4+1024*n</strong></p><p>根据此公式算得结果单位为MB。例如，你想要得到一个2GB的分区，套用公式就应为：</p><p><strong>(2-1)*4+1024*2=2052MB</strong></p><h1 id="拓展坞有什么用"><a href="#拓展坞有什么用" class="headerlink" title="拓展坞有什么用"></a>拓展坞有什么用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020-03-06</span><br></pre></td></tr></table></figure><p>先说结论：拓展坞能解决磁盘空间不够的情况，不能直接影响机器性能。</p><p>扩展坞，又称为拓展坞，其百度百科的定义是：</p><blockquote><p>扩展坞（Docking station），又称端口复制器（Port Replicator），是专为笔记本电脑设计的一种外置设备。通过复制甚至扩展笔记型计算机的端口，可使笔记本电脑与多个配件或外置设备（如电源适配器、网线、鼠标、外置键盘、打印机及外置显示器）方便的一站式连接。<br>来源：<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%E6%89%A9%E5%B1%95%E5%9D%9E/9493210?fr=aladdin">扩展坞_百度百科</a></p></blockquote><p>拓展坞只是为了拓展电脑上的接口而存在啊，比如你买了套USB接口的键盘、鼠标和硬盘或者想外接个HDMI的显示屏，然后发现电脑上的接口不够用，这时候就可以用到拓展坞。能通过拓展坞外面挂硬盘扩大磁盘空间不假，但具体剪片丝不丝滑不只是硬盘大小能直接决定的啊。macbook air 性能赶不上同期的macbook pro是事实，不只是硬盘差距。</p><p><a href="https://imgtu.com/i/bB8IoT"><img src="https://s1.ax1x.com/2022/03/06/bB8IoT.jpg" alt="拓展坞可支持接口"></a></p><p>不过，扩展坞可不是万能的，其本质上是基于笔记本上的 UBS-C 本身所支持的能力分解为多个不同类型的接口。</p><p>例如：</p><ul><li>如果笔记本上的 UBS-C 不支持 USB 协议，那么无法通过扩展坞进行数据传输，即外接键鼠、U 盘等；</li><li>如果笔记本上的 UBS-C 不支持 DP 协议，那么无法通过扩展坞进行显示扩展，即外接显示器、投影仪等；</li><li>如果笔记本上的 UBS-C 不支持 PD 协议，那么无法通过扩展坞对笔记本进行充电。</li></ul><p>所以，重点在于笔记本上的 UBS-C 所支持的能力如何。一般情况下，在笔记本的宣传介绍页是会表明的，如果是全功能 Type-C 那么该接口就是以上提及的都支持，如果没有写明或不太明确的话可以咨询一下客服。</p><p>此外，还有一个比较高端的接口类型，就是雷电接口。雷电和 USB 一样，实际只是一种通信协议，但雷电所支持的能力非常强大，雷电 3/4 的总带宽高达 40Gbps，能够通过雷电扩展坞视频输出双 4K60Hz 或 8K30Hz，这些都不是 DP 协议所不能支持的。</p><h1 id="如何将一个系统里的文件无损转移到另一个分区的系统？"><a href="#如何将一个系统里的文件无损转移到另一个分区的系统？" class="headerlink" title="如何将一个系统里的文件无损转移到另一个分区的系统？"></a>如何将一个系统里的文件无损转移到另一个分区的系统？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020-03-06</span><br></pre></td></tr></table></figure><p>在PE或者设置–更新和安全–高级重启–立即重启中选择启动CMD来操作</p><p>两个方案，前提：假设C盘为原来系统，D盘是空余空间，用于存放搬运过来的系统，E盘为其他剩余空间。</p><p>方案1：使用robocopy，命令如下：robocopy(空格)/e(空格)/xj(空格)/copyall(空格)C:(空格)D:(空格)/xd(空格)”System Volume Information”(空格)”$Recycle.Bin”</p><p>robocopy是可靠文件拷贝，xd参数是排除掉回收站和ntfs分区的记录文件。</p><p>复制完成后，再添加D盘的系统的启动：bcdboot(空格)d:\Windows(空格)/L(空格)zh-cn</p><p>方案2：用dism把C盘的系统打包成一个wim或者ESD映像文件，放在E盘，再解包到D盘。</p><p>简版捕获命令：dism(空格)/capture-image(空格)/imagefile:e:\system.wim(空格)/name:system(空格)/capturedir:c:</p><p>完成后，再释放到D盘，命令：dism(空格)/apply-image(空格)/imagefile:e:\system.wim(空格)/applydir:d:(空格)/index:1</p><p>最后还是添加D盘的启动：bcdboot(空格)d:\Windows(空格)/L(空格)zh-cn</p><p>这样，CD盘的系统就是完全一致的。(⊙﹏⊙)当然，这个时候可以让一个系统加入insider就ok了。可能D盘系统中office因为盘符变动而需要重新激活，系统是会保持的，office对分区变动敏感。</p><p>也可以在pe环境下，用分区工具进行分区克隆</p><h1 id="如何使用远程桌面？"><a href="#如何使用远程桌面？" class="headerlink" title="如何使用远程桌面？"></a>如何使用远程桌面？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-03-06</span><br></pre></td></tr></table></figure><h2 id="官方文档："><a href="#官方文档：" class="headerlink" title="官方文档："></a>官方文档：</h2><ol><li>设置你想要连接以使其允许远程连接的电脑：<ul><li>确保您拥有 Windows 10 专业版。 若要检查<code>win</code>此内容，请转到”开始”&gt;设置&gt;”&gt;”齿轮”  关于”并查找”<strong>版本”。</strong> 若要了解如何获取Windows 10 专业版，请转到<a href="https://support.microsoft.com/help/12384/">升级Windows 10 家庭版Windows 10 专业版。</a></li><li>准备就绪后，选择”从远程桌面 <code>win</code>&gt;设置&gt;”&gt;”齿轮” 启用远程<strong>桌面”。</strong></li><li>记下<strong>如何连接到此电脑</strong>下的此电脑的名称。 稍后将需要使用此名称。</li></ul></li><li>使用远程桌面连接到你设置的电脑：<ul><li><strong>在本地 Windows 电脑上：</strong> 在任务栏的搜索框中，键入“远程桌面连接”，然后选择“<strong>远程桌面连接</strong>”。 在“远程桌面连接”中，键入你想要连接的电脑的名称（从步骤 1），然后选择<strong>“连接”</strong>。</li><li><strong>在 Windows、Android 或 iOS 设备上：</strong> 打开远程桌面应用（可从 Microsoft Store、Google Play 和 Mac App Store 免费获得），然后添加要连接的 PC 的名称（从步骤 1 开始）。 选择你添加的远程电脑名称，然后等待连接完成。</li></ul></li></ol><p>文档地址：<a href="https://support.microsoft.com/zh-cn/windows/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2-5fe128d5-8fb1-7a23-3b8a-41e636865e8c">如何使用远程桌面 (microsoft.com)</a></p><h2 id="百度经验："><a href="#百度经验：" class="headerlink" title="百度经验："></a>百度经验：</h2><h3 id="方法一：通过运行命令远程连接"><a href="#方法一：通过运行命令远程连接" class="headerlink" title="方法一：通过运行命令远程连接"></a>方法一：通过运行命令远程连接</h3><ol><li>第一步在我们的电脑上按win+R键打开运行，输入“mstsc”，点击确定</li><li>第二步点击确定之后，可以看到已经打开了远程桌面连接，输入要连接的ip地址，也可以点击选项，输入详细信息，进行连接</li><li>第三步点击选项之后，输入ip地址，远程连接的计算机名称，点击连接</li><li>第四步可以看到已经在远程连接电脑了，只要远程连接的电脑设置了允许远程，就能连接到对方电脑桌面上</li></ol><h3 id="方法二：通过命令提示符远程连接"><a href="#方法二：通过命令提示符远程连接" class="headerlink" title="方法二：通过命令提示符远程连接"></a>方法二：通过命令提示符远程连接</h3><ol><li>第一步在我们的电脑上按win+R键打开运行，输入“cmd”</li><li>第二步在命令提示符中输入“mstsc /v: 192.168.1.1 /console”命令，按回车键，远程连接ip地址为192.168.1.1的电脑</li></ol><h1 id="如何进行远程连接？"><a href="#如何进行远程连接？" class="headerlink" title="如何进行远程连接？"></a>如何进行远程连接？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-03-06</span><br></pre></td></tr></table></figure><ol><li>右键此电脑，点击属性，点击高级系统设置，点击远程，勾选允许远程协助连接这台计算机(R)，勾选允许远程连接到此计算机(L)，勾选仅允许使用网络级别身份验证的远程桌面的计算机连接(建议)(N)</li></ol><blockquote><p>网络验证：</p><p>所谓网络级验证（network level authentication NLA）是提供给远程桌面连接的一种新安全验证机制，可以在终端桌面连接及登录画面出现前预先完成用户验证程序，由于提前验证部分仅需要使用到较少的网络资源，因此可以有效防范黑客与恶意程序的攻击，同时降低阻断服务攻击(Dos)的机会。</p></blockquote><ol start="2"><li>按下快捷键win+r,在电脑左下角会出现运行框</li><li>输入cmd,按回车就会出现命令提示框</li><li>输入ipconfig可以获得ip地址，被远程的电脑的IP地址既可以得到，ipv4的地址既是ip地址。</li><li>得到要连接的电脑的ip地址以后，在按快捷键win+r,输入mstsc，再按回车键就可以进入远程桌面连接。</li><li>出现远程连接界面以后，再输入要连接的电脑的ip地址。</li><li>然后输入要远程电脑的密码，就可以进入远程连接。</li></ol><h2 id="详细信息：远程桌面连接-百度百科"><a href="#详细信息：远程桌面连接-百度百科" class="headerlink" title="详细信息：远程桌面连接_百度百科"></a>详细信息：<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/669361?fr=aladdin">远程桌面连接_百度百科</a></h2><h1 id="加密狗是什么"><a href="#加密狗是什么" class="headerlink" title="加密狗是什么"></a>加密狗是什么</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-03-08</span><br></pre></td></tr></table></figure><p>加密狗，并不是狗的一种，而是软件保护行业的一个加密产品。加密狗通常插在计算机上，有并口和usb接口两种，<strong>其中usb接口加密狗，外形酷似U盘，又叫usb加密狗</strong>。</p><p>加密狗是外形酷似U盘的一种硬件设备，正名加密锁，后来发展成如今的一个软件保护的通俗行业名词，”加密狗”是一种插在计算机并行口上的软硬件结合的加密产品（新型加密狗也有usb口的）。一般都有几十或几百字节的非易失性存储空间可供读写，现在较新的狗内部还包含了单片机。软件开发者可以通过接口函数和软件狗进行数据交换（即对软件狗进行读写），来检查软件狗是否插在接口上；或者直接用软件狗附带的工具加密自己EXE文件（俗称”包壳”）。这样，软件开发者可以在软件中设置多处软件锁，利用软件狗做为钥匙来打开这些锁；如果没插软件狗或软件狗不对应，软件将不能正常执行。<br>　　加密狗通过在软件执行过程中和加密狗交换数据来实现加密的.加密狗内置单片机电路(也称CPU)，使得加密狗具有判断、分析的处理能力，增强了主动的反解密能力。这种加密产品称它为”智能型”加密狗.加密狗内置的单片机里包含有专用于加密的算法软件，该软件被写入单片机后，就不能再被读出。这样，就保证了加密狗硬件不能被复制。同时，加密算法是不可预知、不可逆的。加密算法可以把一个数字或字符变换成一个整数，如DogConvert(1)=12345、DogConvert(A)=43565。<br>　　加密狗是为软件开发商提供的一种智能型的软件保护工具，它包含一个安装在计算机并行口或 USB 口上的硬件，及一套适用于各种语言的接口软件和工具软件。加密狗基于硬件保护技术，其目的是通过对软件与数据的保护防止知识产权被非法使用。</p><p><strong>为什么要用到加密狗？</strong></p><p>之所以要用到加密狗，是因为要保护软件，防止软件被盗版，包括软件源代码不被反编译、不被随意篡改，不被逆向工程；同时也包括软件授权不被非法复制、或者被未经授权使用。</p><p><strong>加密狗拓展小知识：加密狗是什么原理？</strong></p><p>加密狗通常是在软件执行过程中与加密狗交换数据来实现软件加密的，通常，软件开发者在软件中设置软件锁，同时利用软件狗作为钥匙来打开这些软件锁。</p><p>如果没有插入加密狗或插入错误的加密狗，这个软件将不能正常执行，从而达到软件加密与授权保护，防止软件和数据的知识产权被非法使用。</p><p>加密狗通过在软件执行过程中和加密狗交换数据来实现加密的.加密狗内置单片机电路(也称CPU)，使得加密狗具有判断、分析的处理能力，增强了主动的反解密能力。这种加密产品称它为”智能型”加密狗.加密狗内置的单片机里包含有专用于加密的算法软件，该软件被写入单片机后，就不能再被读出。这样，就保证了加密狗硬件不能被复制。同时，加密算法是不可预知、不可逆的。加密算法可以把一个数字或字符变换成一个整数，如DogConvert(1)=12345、DogConvert(A)=43565。下面，我们举个例子说明单片机算法的使用。 比如一段程序中有这样一句：A=Fx(3)。程序要根据常量3来得到变量A的值。于是，我们就可以把原程序这样改写：A=Fx(DogConvert(1)-12342)。那么原程序中就不会出现常量3，而取之以DogConvert(1)-12342。这样，只有软件编写者才知道实际调用的常量是3。而如果没有加密狗，DogConvert函数就不能返回正确结果，结果算式A=Fx(DogConvert(1)-12342)结果也肯定不会正确。这种使盗版用户得不到软件使用价值的加密方式，要比一发现非法使用就警告、中止的加密方式更温和、更隐蔽、更令解密者难以琢磨。此外，加密狗还有读写函数可以用作对加密狗内部的存储器的读写。于是我们可以把上算式中的12342也写到狗的存储器中去，令A的值完全取决于DogConvert()和DogRead()函数的结果，令解密难上加难。不过，一般说来，加密狗单片机的算法难度要低于一些公开的加密算法，如DES等，因为解密者在触及加密狗的算法之前要面对许多难关.</p><h1 id="U盘加密狗怎么制作？"><a href="#U盘加密狗怎么制作？" class="headerlink" title="U盘加密狗怎么制作？"></a>U盘加密狗怎么制作？</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-03-08</span><br></pre></td></tr></table></figure><p>U盘等移动设备除了可以用来储存文件装系统以外还可以用来制作加密狗。本文为大家介绍如何制作Windows系统开机的加密狗。</p><p>U盘等移动设备除了可以用来储存文件装系统以外还可以用来制作加密狗。本文为大家介绍如何制作Windows系统开机的加密狗。它的作用是为了避免他人随便开启自己的电脑查看自己的私密信息除了设置个人密码外还可以通过简单的设置让电脑只有在插入自己的U盘后才能启动否则启动后即自动关机。</p><p>制作这样一个加密狗并不需要很复杂的过程也不像一位朋友所认为那样的需要什么英语基础什么的。照着下面几个步骤一分钟之内任何人都能做出一个属于自己的加密狗。</p><ol><li><p>插上自己的U盘或者其他移动存储设备</p></li><li><p>在U盘创建一个任意类型的文件文件名也任意。我这里为了后面方便讲解用了一个空白的文本文件取名为“加密”文件扩展名为“.txt”。文件就放在U盘根目录下U盘的驱动器盘符为J:</p></li><li><p>在电脑上任意位置新建一个文本文件在这个文本文件中输入如下内容 </p><p>if not exist J:加密.txt shutdown -s -t 10 -c “你无法使用该计算机”</p><p>这句话的意思是如果U盘中不存在加密.txt这个文件则在10秒后关闭该计算机并显示“你无法使用该计算机”这一提示信息。</p><p>语句中的10可以自己修改为其他如100提示语“你无法使用该计算机”也可改成其他语句。只要不改动整个语句的格式就可以了。</p><p>输入完成后将这个文本文件另存为一下名字依然任意文件扩展名为“.bat”。保存对话框中选择保存类型为所有文件所以在文件名后手工输入扩展名“.bat”。这里取名为26.bat </p></li><li><p>点击Windows开始菜单中的“运行”它的位置就在“所有程序”的右边。打开“开始菜单”就能看到它了。</p><p>在“打开”框中输入gpedit.msc点击确定按纽以打开组策略对话框。通过鼠标点击定位到如下路径：“本地计算机”策略→计算机机配置→Windows设置→脚本（启动/关机）然后在右边的框中选择“启动”项并将刚才建立的批处理文件添加到启动脚本列表中确定并退出就可以了。</p><p>这里添加的是前面制作的26.bat这个批处理文件。</p><p>到这里就大功告成了，这时，只有在开机时插入U盘才能启动计算机并进入系统，否则将出现提示并在指定时间内关闭计算机。这里需要提醒的一定要在显示出Windows的启动画面后再插入制作的加密狗在开机前就插上有可能造成部分电脑无法正常启动的情况。</p></li></ol><p><strong>U盘遗失情况下的解决办法 ：</strong></p><ol><li>如果时间足够多可以在运行中输入“shutdown -a”来解除关机指令 </li><li>备份你U盘中的文件到其它地方当U盘丢失时将你制作的加密.txt复制到新U盘一般情况下都OK。如果不OK请检查当前U盘分区是否和原U盘一样。 </li><li>将计算计启动到安全模式下将启动脚本删除，因为在安全模式下是不会加载开机脚本的。</li></ol><p>如果只是试着玩的朋友可以在成功以后将组策略中的启动脚本删除即可。这样就解除了加密狗的使用。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据恢复之ExFAT</title>
      <link href="2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/5.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BExFAT/"/>
      <url>2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/5.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BExFAT/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据恢复之NTFS</title>
      <link href="2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/4.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BNTFS/"/>
      <url>2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/4.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BNTFS/</url>
      
        <content type="html"><![CDATA[<p>NTFS文件系统与FAT文件系统一样，也是用族为基本单位对磁盘空间和文件存储进行管理的。一个文件总是占有若干个簇，即使在最后一个簇没有完全放满的情况下，也是占用了整个簇的空间，这也是造成磁盘空间浪费的主要原因。</p><p><a href="https://imgtu.com/i/LfBJqU"><img src="https://s1.ax1x.com/2022/04/23/LfBJqU.png" alt="NTFS结构介绍"></a></p><ol><li>在分区的第一个扇区（引导扇区DBR）后是15个扇区的NTLDR区域，这16个扇区共同构成$BOOT文件</li><li>上图的结构知识NTFS文件系统的示意图，并不完全成比例；</li><li>元文件在图中只体现了一部分，没有画完整，并且除了$B00T文件以外，其他元文件的位置不是固定的，例如$MFT文件也可以在$MFTMirr文件之后。</li><li>在 NTFS 文件系统所在分区的最后一个扇区是DBR的备份，但该扇区并不属于NTFS文件系统。</li><li>NTLDR后是主文件表区域，主文件表由文件记录构成，每个文件记暴点2个扇区</li><li>在NTFS文件系统中文件的文件名、扩展名等，包括文件的内容在NTFS中也称为属性，各种属性被放入文件记录中进行管理</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据恢复之FAT32</title>
      <link href="2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/3.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BFAT32/"/>
      <url>2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/3.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BFAT32/</url>
      
        <content type="html"><![CDATA[<p>FAT32文件系统：大于32MB小于32GB</p><table><thead><tr><th align="center">FAT32结构</th></tr></thead><tbody><tr><td align="center">MBR</td></tr><tr><td align="center">DBR及其保留扇区</td></tr><tr><td align="center">FAT1</td></tr><tr><td align="center">FAT2</td></tr><tr><td align="center">DATA</td></tr></tbody></table><ol><li>DBR及其保留扇区：DBR是DOS引导记录，也称为操作系统引导记录。</li><li>FAT1：FAT是文件分配表。FAT32有两份FAT表，FAT1是第一份，是主要FAT。</li><li>FAT2：FAT2是FAT32的第二份文件分配表，是FAT1的备份，也称为备份FAT。</li><li>DATA：DATA是数据区，是FAT32文件系统的主要区域，其中也包含目录区。</li></ol><h1 id="FAT32-DBR-解析"><a href="#FAT32-DBR-解析" class="headerlink" title="FAT32  DBR  解析"></a>FAT32  DBR  解析</h1><p>一、跳转指令<br>        跳转指令占用2字节，它将程序执行流程跳转到引导程序处。<br>二、OEM代号<br>        OEM代号占8字节，由厂商具体安排。<br>三、BPB参数</p><table><thead><tr><th align="center">字节偏移</th><th align="center">字段长度</th><th align="center">字段名</th><th align="center">字节偏移</th><th align="center">字段长度</th><th align="center">字段名</th></tr></thead><tbody><tr><td align="center"><strong>0X0B</strong></td><td align="center">2</td><td align="center">每扇区字节数</td><td align="center">0X28</td><td align="center">2</td><td align="center">标记</td></tr><tr><td align="center"><strong>0X0D</strong></td><td align="center">1</td><td align="center">每簇扇区数</td><td align="center">0X2A</td><td align="center">2</td><td align="center">版本</td></tr><tr><td align="center"><strong>0X0E</strong></td><td align="center">2</td><td align="center">保留扇区数</td><td align="center"><strong>0X2C</strong></td><td align="center">4</td><td align="center">根目录首簇号</td></tr><tr><td align="center"><strong>0X10</strong></td><td align="center">1</td><td align="center">FAT表个数</td><td align="center">0X30</td><td align="center">2</td><td align="center">文件系统信息扇簇号</td></tr><tr><td align="center">0X11</td><td align="center">2</td><td align="center">未用</td><td align="center"><strong>0X32</strong></td><td align="center">2</td><td align="center">DBR备份扇区数</td></tr><tr><td align="center">0X13</td><td align="center">2</td><td align="center">未用</td><td align="center">0X34</td><td align="center">12</td><td align="center">保留</td></tr><tr><td align="center">0X15</td><td align="center">1</td><td align="center">介质描述符</td><td align="center">0X40</td><td align="center">1</td><td align="center">BIOS驱动器号</td></tr><tr><td align="center">0X16</td><td align="center">2</td><td align="center">未用</td><td align="center">0X41</td><td align="center">1</td><td align="center">未用</td></tr><tr><td align="center">0X18</td><td align="center">2</td><td align="center">每磁道扇区数</td><td align="center">0X42</td><td align="center">1</td><td align="center">扩展引导标记</td></tr><tr><td align="center">0X1A</td><td align="center">2</td><td align="center">磁头数</td><td align="center">0X43</td><td align="center">4</td><td align="center">卷序列号</td></tr><tr><td align="center"><strong>0X1C</strong></td><td align="center">4</td><td align="center">隐藏扇区数</td><td align="center">0X47</td><td align="center">11</td><td align="center">卷标</td></tr><tr><td align="center"><strong>0X20</strong></td><td align="center">4</td><td align="center">扇区总数</td><td align="center">0X52</td><td align="center">8</td><td align="center">文件系统类型</td></tr><tr><td align="center"><strong>0X24</strong></td><td align="center">4</td><td align="center">每FAT扇区数</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>四、引导程序<br>        FAT32的DBR引导程序占用420字节。<br>五、结束标志<br>        DBR的结束标志与MBR的结束标志相同，都为“55AA”</p><p>FAT32文件提取</p><p>一、FAT即文件分配表，对于FAT文件系统来讲是至关重要的组成部分。</p><ol><li>FAT文件系统有两份FAT，FAT2为FAT1的备份。</li><li>FAT表由FAT表项构成的，FAT表项简称为FAT项。FAT32的每个FAT项对应4个字节</li><li>每个FAT项都有固定的编号，编号从0开始</li><li>FAT表前两个FAT项有专门用途，0号FAT项通常用来存放分区所在介质类型，例如硬盘的介质类型为“F8”；1号FAT项则用来存储文件系统的航脏标志</li><li>分区的数据区中每一个簇都会映射到FAT表中的唯一一个FAT项。因为0号FAT项和1号FAT项有特殊用途，所以数据区的第一个簇也就是编号为2号簇，这也就是没有0号策和1号族的原因</li><li>从Windows2000系统开始，系统能管理族大小可以达到128个扇区（64KB），32位的FAT项最多可管理67108863个族，那么理论上FAT32能够管理64*67108863=4294967232KB=4096GB=4TB。但这只是理论数值，实际上FAT32只能管理32GB的分区，原因是Windows系统用26位的寄存器寄存文件系统史族的个数，那么同时也就用26位的寄存器来寄存分区访问的扇区数，这样分区能够管理的扇区总数就是2的26次方，也就是67108864，换算后为32GB。</li></ol><p>短文件目录项</p><table><thead><tr><th>字节偏移</th><th>字段长度</th><th>字段内容及含义</th></tr></thead><tbody><tr><td>0X00</td><td>8</td><td>主文件名</td></tr><tr><td>0X08</td><td>3</td><td>文件的扩展名</td></tr><tr><td>0X0B</td><td>1</td><td>文件属性<br />00000000   （读/写）<br />00000001   （只读）<br />00000010   （隐藏）<br />00000100   （系统）<br />00001000   （卷标）<br />00010000   （子目录）<br />00100000   （存档）</td></tr><tr><td>0X0C</td><td>1</td><td>未用</td></tr><tr><td>0X0D</td><td>1</td><td>文件创建时间精确到10ms的值</td></tr><tr><td>0X0E</td><td>2</td><td>文件创建时间</td></tr><tr><td>0X10</td><td>2</td><td>文件创建日期</td></tr><tr><td>0X12</td><td>2</td><td>文件最近访问日期</td></tr><tr><td>0X14</td><td>2</td><td>文件起始簇号的高位</td></tr><tr><td>0X16</td><td>2</td><td>文件修改时间</td></tr><tr><td>0X18</td><td>2</td><td>问价修改日期</td></tr><tr><td>0X1A</td><td>2</td><td>文件的起始簇号</td></tr><tr><td>0X1C</td><td>4</td><td>文件大小（单位为字节）</td></tr></tbody></table><h1 id="FAT32-DBR-修复"><a href="#FAT32-DBR-修复" class="headerlink" title="FAT32  DBR  修复"></a>FAT32  DBR  修复</h1><p>在磁盘管理中看到FAT32的磁盘显示RAW，且打开的时候提示需要格式化</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>在MBR中以磁盘分区的隐藏扇区数向下跳转，到达DBR位置发现DBR的扇区全部为0，向下跳转6个扇区到达DBR备份。</p><p>将DBR备份 <kbd> Ctrl </kbd> +<kbd>C</kbd>复制,跳转到DBR位置<kbd>Ctrl</kbd>+<kbd>B</kbd>写入。DBR修复完成。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>修改FAT32DBR时需要修改的数据有<font color="#dd0000"> 隐藏扇区数，分区总大小，保留扇区数，FAT表大小，每扇区数</font></p><ol><li>新建一个FAT32文件系统将其DBR复制粘贴到被破坏FAT32的DBR处</li><li>计算保留扇区数<pre><code>从DBR处向下搜索“F8FFFF”到达FAT1FAT1所在的扇区号-DBR所在扇区号=保留扇区数大小</code></pre></li><li>计算FAT表大小<br>从FAT1向下搜索” “，到达FAT2<br>FAT2所在的扇区号-FAT1所在扇区号=FAT表大小</li><li>查看隐藏扇区数大小与分区大小<br>从MBR的分区表处查看分区的隐藏扇区数大小与分区大小</li><li>计算每族扇区数<br>数据区总扇区数/数据区总簇数=每簇扇区数<br>数据区总扇区数=分区大小-2*FAT表太小-保留扇区数大小-FDT占用的扇区数<br>数据区的总族数=512*FAT表大小/2</li><li>将计算的重要数据填入被破坏FAT32文件系统DBR中对应的位置</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据恢复之FAT16</title>
      <link href="2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/2.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BFAT16/"/>
      <url>2022/02/28/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/2.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BFAT16/</url>
      
        <content type="html"><![CDATA[<h1 id="FAT16介绍及结构"><a href="#FAT16介绍及结构" class="headerlink" title="FAT16介绍及结构"></a>FAT16介绍及结构</h1><p>FAT16大小最大只能支持2GB</p><p>FAT16结构</p><table><thead><tr><th align="center">MBR</th></tr></thead><tbody><tr><td align="center">DBR及其保留扇区</td></tr><tr><td align="center">FAT1</td></tr><tr><td align="center">FAT2</td></tr><tr><td align="center">FDT</td></tr><tr><td align="center">DATA</td></tr></tbody></table><p>MAR后为FAT16结构（DBR及其保留扇区至DATA）</p><ol><li>DBR及其保留扇区：DBR是DOS引导记录，也称为操作系统引导记录。</li><li>FAT1：FAT是文件分配表。FAT16有两份FAT表，FAT1是第一份，是主要FAT。</li><li>FAT2：FAT2是FAT16的第二份文件分配表是FAT1的备份，也称为备份FAT6</li><li>FDT：FDT是文件目录表，一般占用大小为32个扇区</li><li>DATA：DATA是数据区</li></ol><p>新建简单卷时，分配单元大小便为簇的大小，512为一个扇区一个簇，2048为两个扇区一个簇</p><h2 id="FAT16标识"><a href="#FAT16标识" class="headerlink" title="FAT16标识"></a>FAT16标识</h2><p>开头为EB 3C 90</p><p><strong>恢复步骤：</strong></p><p>MBR——隐藏扇区数——DBR——保留扇区数——FAT1——FAT表大小——FAT2——FAT表大小——FDT——32——DATA</p><h1 id="FAT16-DBR分析"><a href="#FAT16-DBR分析" class="headerlink" title="FAT16 DBR分析"></a>FAT16 DBR分析</h1><ol><li><p>跳转指令</p><p>跳转指令占用2字节，它将程序执行流程跳转到引导程序处</p></li><li><p>OEM代号</p><p>OEM代号占8位字节，由厂商具体安排</p></li><li><p>BPB参数</p><table><thead><tr><th>字节偏移</th><th>字段长度</th><th>字段名</th><th>字节偏移</th><th>字段长度</th><th>字段名</th></tr></thead><tbody><tr><td>*0x0B</td><td>2</td><td>每扇区字节数</td><td>0x1A</td><td>2</td><td>磁头数</td></tr><tr><td>**0x0D</td><td>1</td><td>每簇扇区数</td><td>**0x1C</td><td>4</td><td>隐藏扇区数</td></tr><tr><td>**0x0E</td><td>2</td><td>DBR保留扇区</td><td>**0x20</td><td>4</td><td>扇区总数(大于32MB)</td></tr><tr><td>*0x10</td><td>1</td><td>FAT表个数</td><td>0x24</td><td>1</td><td>BIOS 驱动器号</td></tr><tr><td>0x11</td><td>2</td><td>根目录最大容纳的目录项数</td><td>0x25</td><td>1</td><td>未使用</td></tr><tr><td>0x13</td><td>2</td><td>扇区总数(小于32MB)</td><td>0x26</td><td>1</td><td>扩展引导标记</td></tr><tr><td>0x15</td><td>1</td><td>介质描述符</td><td>0x27</td><td>4</td><td>卷系列号</td></tr><tr><td>**0x16</td><td>2</td><td>每FAT表包含的扇区数</td><td>0x2B</td><td>11</td><td>卷标</td></tr><tr><td>0x18</td><td>2</td><td>每磁道扇区数</td><td>*0x36</td><td>8</td><td>文件系统类型</td></tr></tbody></table></li></ol><p>*<em>*<em>表示非常重要，*表示比较重要</em></em></p><ol start="4"><li><p>引导程序</p><p>FAT16的DBR引导程序占用448字节</p></li><li><p>结束标志</p><p>DBR的结束标志与MBR的结束标志相同，都为”55AA”</p></li></ol><h1 id="FAT16文件提取"><a href="#FAT16文件提取" class="headerlink" title="FAT16文件提取"></a>FAT16文件提取</h1><p>   FAT即文件分配表，对于FAT文件系统来讲是至关重要的组成部分。</p><ol><li><p>FAT文件系统有两份FAT，FAT2为FAT1的备份</p></li><li><p>FAT表由FAT表项构成的，FAT表项简称为FAT项。FAT16的每个FAT项对应两个字节</p></li><li><p>每个FAT项都有固定的编号，编号从0开始</p></li><li><p>FAT表前两个FAT项有专门用途，0号FAT项通常用来存放分区所在介质类型（F8 FF），例如硬盘的介质类型为“F8“；1号FAT项则用来存储文件系统的航脏标志</p></li><li><p>分区的数据区中每一个都会映射到FAT表中的唯一一个FAT项。因为0号FAT项和1号FAT项有特殊用途，所以数据区的第一个签也就是编号为2号族，这也就是没有0号和1号的原因</p></li><li><p>16位的FAT项最多可管理65536个，当太少等于64个扇区时（相当于32KB），这样，16位FAT的系统最多只能管理32*65536=2097152=2048MB</p><p>一个扇区有512个字节，两个字节为一个簇，所以512/2=256簇，代表一个扇区可以存放256个簇，FAT表大小为256个扇区，所以256*256=65536</p><p>簇大小为64扇区时，一个扇区是512字节，两个扇区就是1kb了，64/2=32kb</p><p>65536*32=2097352kb       2097352/1024=2048MB</p><p>这也就是为什么FAT16最大只能容纳2GB的原因</p></li></ol><p>根目录(FDT)起始一般情况下为<code>D0 C2</code></p><p>短文件名目录项</p><table><thead><tr><th>字节偏移</th><th>字段长度</th><th>字段内容及含义</th></tr></thead><tbody><tr><td>0X00</td><td>8</td><td>主文件名</td></tr><tr><td>0X08</td><td>3</td><td>文件的扩展名</td></tr><tr><td>0X0B</td><td>1</td><td>文件属性<br />00000000    (读/写)<br />00000001    (只读)<br  />00000010    (隐藏)<br />00000100    (系统)<br />00001000    (卷标)<br />00010000    (子目录)<br />00100000    (存档)</td></tr><tr><td>0X0C</td><td>1</td><td>未用</td></tr><tr><td>0X0D</td><td>1</td><td>we年创建时间精确到10ms的值</td></tr><tr><td>0X0E</td><td>2</td><td>文件创建时间</td></tr><tr><td>0X10</td><td>2</td><td>文件创建日期</td></tr><tr><td>0X12</td><td>2</td><td>文件最近访问日期</td></tr><tr><td>0X14</td><td>2</td><td>未用</td></tr><tr><td>0X16</td><td>2</td><td>文件修改时间</td></tr><tr><td>0X16</td><td>2</td><td>文件修改日期</td></tr><tr><td>0X1A</td><td>2</td><td>文件的起始簇号</td></tr><tr><td>0X1C</td><td>4</td><td>文件大小（单位为字节）</td></tr></tbody></table><h2 id="FAT16文件提取过程"><a href="#FAT16文件提取过程" class="headerlink" title="FAT16文件提取过程"></a>FAT16文件提取过程</h2><ol><li>MBR查看隐藏扇区数</li><li>DBR查看每簇扇区数，保留扇区数，FAT表大小</li><li>FAT1——FAT2——FDT</li><li>FDT需要查看提取文件额起始簇号和文件大小</li><li>FDT——32个扇区到达DATA</li><li>(XX簇号 - 2号簇)*每簇扇区数</li><li>头尾选择，右键提取</li></ol><h1 id="FAT16文件删除与误格式化现象"><a href="#FAT16文件删除与误格式化现象" class="headerlink" title="FAT16文件删除与误格式化现象"></a>FAT16文件删除与误格式化现象</h1><p>删除的现象：FDT文件目录项首字节变为<code>E5</code>，文件底层内容没有改变</p><p>格式化的现象：格式化后FAT表被清空，FAT文件目录项也被清空，文件中的文件目录项还存在，底层文件也存在</p><h1 id="FAT16DBR修复"><a href="#FAT16DBR修复" class="headerlink" title="FAT16DBR修复"></a>FAT16DBR修复</h1><p>修改FAT16DBR时需要修改的数据有<strong>隐藏扇区数，分区总大小，保留扇区数，FAT表大小，每族扇区数</strong></p><ol><li><p>新建一个FAT16文件系统将其DBR复制粘贴到被破坏FAT16的DBR处</p></li><li><p>计算保留扇区数</p><p>从DBR处向下搜索“F8FFFF”，到达FAT1</p><p>FAT1所在的扇区号 - DBR所在扇区号 = 保留扇区数大小</p></li><li><p>计算FAT表大小</p><p>从FAT1向下搜索“F8FFFF“，到达FAT2</p><p>FAT2所在的扇区号 - FAT1所在扇区号 = FAT表大小</p></li><li><p>查看隐藏扇区数大小与分区大小</p><p>从MBR的分区表处查看分区的隐藏扇区数大小与分区大小</p></li><li><p>计算每簇扇区数</p><p>数据区总扇区数 / 数据区总簇数 = 每簇扇区数</p><p>数据区总扇区数 = 分区大小 -  2× FAT表大小 - 保留扇区数大小 - FDT占用的扇区数</p><p>数据区总簇数 = 512 * FAT表大小 / 2</p></li><li><p>将计算的重要数据填入被破坏FAT16文件系统DBR中对应的位置</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据存储</title>
      <link href="2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB10/"/>
      <url>2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB10/</url>
      
        <content type="html"><![CDATA[<h1 id="数据存储简介"><a href="#数据存储简介" class="headerlink" title="数据存储简介"></a>数据存储简介</h1><h2 id="爬虫的数据存储可分为如下两种方式："><a href="#爬虫的数据存储可分为如下两种方式：" class="headerlink" title="爬虫的数据存储可分为如下两种方式："></a>爬虫的数据存储可分为如下两种方式：</h2><p>文件存储：对于这种中小规模的爬虫而言，可以将爬虫结果汇合到一个文件进行持久化存储。</p><p>数据库存储：对于抓取的数据种类丰富、数量庞大的大规模爬虫来说，我们可以将这些爬虫结果存入数据库中，不仅方便存储，也方便进一步整理。</p><h2 id="Python中常用的数据库系统主要包括如下两种："><a href="#Python中常用的数据库系统主要包括如下两种：" class="headerlink" title="Python中常用的数据库系统主要包括如下两种："></a>Python中常用的数据库系统主要包括如下两种：</h2><p>MySQL:一种开源的关系型数据库，使用最常用的数据库管理语言（结构化查询语言SQL）进行数据库管理。它会将数据保存到不同的表中，不仅速度快，而且灵活性高</p><p>MongoDB:个基于分布式文件存储的数据库，是当前NoSQL（非关系型的数据库）数据库中比较热门的一种。它面向集合存储，易存储对象类型的数据，具有高性能、易部署、易使用等特点。</p><p>在实际使用中，上述两种数据库各有利整都能够用做数据存储，大家可以根据自己的需求进行相应的选择。</p><h1 id="MongoDB数据库简介"><a href="#MongoDB数据库简介" class="headerlink" title="MongoDB数据库简介"></a>MongoDB数据库简介</h1><p>MongoDB是一款基于分布式文件存储的NoSQL数据库，具有免费、操作简单、面向文档存储等强大特点，旨在为Web应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB功能特性：</p><p>模式自由、面向集合存储、自动分片、完整索引支持、快速更新、丰富的查询、复制与高可用性、高效传统存储方式</p><h2 id="比较MongoDB和MySQL的术语"><a href="#比较MongoDB和MySQL的术语" class="headerlink" title="比较MongoDB和MySQL的术语"></a>比较MongoDB和MySQL的术语</h2><p>MongoDB是一种非关系型数据库，它没有表的概念其数据库的基本组成单元是集合。</p><table><thead><tr><th>SQL术语/概念</th><th>MongDB术语/概念</th><th>解释/说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>coollection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>dollection</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>field</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接/MongoDB不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主键，MongoDB自动将_id字段设置为主键</td></tr></tbody></table><p>在MongoDB中最基本的概念就是<code>数据库</code>、<code>集合</code>和<code>文档</code>，它们是MongoDB的三个组成元素。</p><p><strong>数据库（DataBase）：表示一个集合的物理容器。</strong></p><p>一个MongoDB中可以建立多个数据库，默认的数据库为“db”，它存储在data目录中。</p><p><strong>文档（Document）：一组由键/值对组成的对象对应着关系型数据库的行。</strong></p><p>文档中的键/值对是有顺序的，文档中的值不仅可以是字符串类型，而且可以是其它数据类型。</p><p><strong>集合（Collection）：集合就是一组文档，类似于关系数据库中的表</strong></p><p>集合没有固定的结构，这意味着可以往集合中插入不同格式和类型的数据。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像识别与文字处理</title>
      <link href="2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB9/"/>
      <url>2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB9/</url>
      
        <content type="html"><![CDATA[<h1 id="OCR技术简介"><a href="#OCR技术简介" class="headerlink" title="OCR技术简介"></a>OCR技术简介</h1><p>在机器视觉领域，字符识别扮演着重要的角色，它可以利用计算机自动识别字符</p><p>机器视觉是人工智能领域一个正在快速发展的分支用机器代替人眼来做测量和判断。</p><p>光学字符识别（OpticalCharacterRecognition，OCR）是指对包含文本资料的图像文件进行分析识别处理，获取文字及版面信息的技术。</p><p>输入图像—&gt;预处理—&gt;版面分析—&gt;字符切割—&gt;字符识别—&gt;版面恢复—&gt;后处理—&gt;输入结果</p><p>1.图像输入<br>针对不同格式的图像，有着不同的存储格式和压输方式。目前，用于存取圆像的开源项目有OpenCV和Cxlmage等，</p><p>2.预处理<br>预处理主要包括二值化、噪声去除和倾斜较正。</p><p>3.版面分析<br>将文档图片分段落、分行的过程叫作版面分析。由于实际文档的多样性和复杂性，目前没有一个固定的，最好的切割模型。</p><p>4.字符切割<br>由于拍照条件的限制，经常会造成字符粘连、断笔等情况，因此极大地限制了识别系统的性能。此时，就需要文字识别软件具备字符切制功能。</p><p>5.字符识别<br>很早的时候就有模板匹配，后来是以特征提取为主。由于文字的位移、笔画的粗细、断笔、粘连、旋转等因素的影响，极大地增加了提取的难度。</p><p>6.版面恢复<br>通常，人类希望识别后的文字，仍然按照原文档图片那样排列着、保持段落不变、位置不变、顺序不变，之后输出到Word文档或PDF文档，这个过程就叫作版面恢复。</p><p>7.后处理、核对<br>不同的语言环境中，语言的逻辑顺序是不同的。因此，需要根据语言特征的上下文，对识别后的结果进行校正，这个过程就是后处理</p><h1 id="Tesseract引l擎的下载和安装"><a href="#Tesseract引l擎的下载和安装" class="headerlink" title="Tesseract引l擎的下载和安装"></a>Tesseract引l擎的下载和安装</h1><p>Tesseract是一个开源的OCR库，它是公认最优秀、最精确的开源OCR系统，具有精准度高、灵活性高等特点。</p><p>Tesseract支持60种以上的语言，它提供了一个引擎和命今行工具。要想在Windows系统下使用Tesseract，需要先安装Tesseract-OCR引擎。</p><p>下载安装可<a href="https://www.baidu.com/">百度</a>自行搜索</p><h1 id="pytesseract和PIL库概述"><a href="#pytesseract和PIL库概述" class="headerlink" title="pytesseract和PIL库概述"></a>pytesseract和PIL库概述</h1><h2 id="pytesseract库简介"><a href="#pytesseract库简介" class="headerlink" title="pytesseract库简介"></a>pytesseract库简介</h2><p>Python提供了一个支持Tesseract-OCR引擎的pytesseract库，可以通过import语句引入使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import pytesserac</span><br></pre></td></tr></table></figure><p>pytesseract是一款用于OCR的Python工具，可以从图片中识别出和“读取”其中嵌入的文字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_to_string(image,lang=None,boxes=False,config=None）</span><br></pre></td></tr></table></figure><p>参数如下<br>image—表示图像。<br>lang—表示语言，默认使用英文。<br>config—若设置此参数，则配置会添加到命令中。</p><h2 id="PIL库简介"><a href="#PIL库简介" class="headerlink" title="PIL库简介"></a>PIL库简介</h2><p>PIL是Python最常用的图像处理库，它不仅提供了广泛的文件格式支持，而且具有强大的图片处理功能。</p><p>PIL库中一个非常重要的类是Image类，该类定义在与它同名的模块中。</p><p>创建Image类对象的方式有很多种，包括从文件中读取得到，或从其它图像经过处理得到，或者创建全新的</p><table><thead><tr><th>方法或函数</th><th>描述</th></tr></thead><tbody><tr><td>new()函数</td><td>用于创建一个新图像</td></tr><tr><td>open()函数</td><td>可以打开并识别给定的图像文件</td></tr><tr><td>save()方法</td><td>以特定的图片格式保存图片</td></tr><tr><td>point()方法</td><td>可以对图像的像素值进行变换</td></tr></tbody></table><p><strong>new函数：用于创建一个新图像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Image.new(mode,size,color=O)</span><br></pre></td></tr></table></figure><p>参数如下：</p><p>mode  —表示模式。<br>size      —表示大小。<br>color    —若省略了color参数，则图像被填充成全黑；若color参数的值为None，则图像不被初始化。</p><p><strong>open函数：可以打开并识别给定的图像文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open(fp,mode=&quot;r&quot;)参数如下：</span><br></pre></td></tr></table></figure><p>fp      —字符串形式的文件名称。</p><p>size   —可以省略，但只能设置为“r”</p><p><strong>save方法：以特定的图片格式保存图片</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save(self,fp,format=None,**params）</span><br></pre></td></tr></table></figure><p>大多数情况下，可以省略图片的格式。这时，该方法会根据文件的扩展名来选择相应的图片格式</p><p><strong>point方法：对图像的像素值进行变换</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">point(self,lut,mode=None)</span><br></pre></td></tr></table></figure><p>在大多数场合中，可以使用函数（带一个参数）作为参数传递给point方法，图像的每个像素都会使用这个函数进行变换。</p><h1 id="处理规范格式的文字"><a href="#处理规范格式的文字" class="headerlink" title="处理规范格式的文字"></a>处理规范格式的文字</h1><p>图像中的文字最好是比较干净，且格式规范的。</p><ol><li>使用一个标准的字体，不包含手写字体、草书，或者十分花哨的字体。</li><li>经过复印或拍照，字体仍然很清晰，没有多余的痕迹或污点。</li><li>排列整齐，没有至至斜斜的文字。</li><li>文字没有超出图片的范围，没有残缺不全，或者紧紧地贴在图片的边缘。</li></ol><p>对图片进行间值过滤和降噪处理<br>大多数的情况下，网络上看到的图片是带有背景颜色的</p><p>对图片进行间值过滤和降噪处理<br>遇到上述这类问题，可以预先过滤掉图片中的渐变背景色，留下图像中的文字，从而增加图像的清晰度，便于文本的识别与读取。例如，通过间值过滤器处理图片</p><p>识别图像的中文字符<br>默认情况下，pytesseract只能识别英文字符，为了让其支持中文，需要显式地指明使用中文字库</p><h1 id="处理验证"><a href="#处理验证" class="headerlink" title="处理验证"></a>处理验证</h1><h2 id="验证码分类"><a href="#验证码分类" class="headerlink" title="验证码分类"></a>验证码分类</h2><p>验证码是一种区分用户是计算机和人的公共全自动程序，能够有效阻止自动脚本反复提交垃圾数据，成为了很多网站通行的方式。</p><p>常见的验证码可归类为如下四种：</p><ol><li>手机短信验证码</li><li>图片验证码</li><li>语音验证码</li><li>智力测试答题验证码</li></ol><p>简单识别图形验证码<br>事实上，大多数网站生成的图片验证码都具有以下几个特性：</p><blockquote><p>服务器动态生成的图片。虽然验证码图片对应的节点属性src跟普通的图片不太一样，但是可以和其它图片一样进行下载和处理。<br>验证码的答案存储在服务器端的数据库中。<br>很多验证码都有时间限制，若太长时间没有解决，则会失效。</p></blockquote><p>通常情况下，验证码的处理思路为：</p><p>图片处理：将网站的验证码图片下载到硬盘中，使用PIL库处理干净（如图片降噪、图片切割等）。</p><p>识别图片：Tesaa术识别图片中的文字。</p><p>输出结果：回符合网站要求的识别结果。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取动态内容</title>
      <link href="2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB8/"/>
      <url>2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB8/</url>
      
        <content type="html"><![CDATA[<h1 id="动态网页内容"><a href="#动态网页内容" class="headerlink" title="动态网页内容"></a>动态网页内容</h1><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h2><p>在网站设计中，纯释HTML格式的网页通常被称为“静态网页“。静态网页是标准的HTML文件，它的文件扩展名是.htm、.html，可以包含文本、图像、声音、FLASH动画等。</p><h2 id="动态网页"><a href="#动态网页" class="headerlink" title="动态网页"></a>动态网页</h2><p>本章所指的动态网页是指在网页中依赖javaScript脚本动态加载数据的网页。与传统单页面表单事件不同，使用了JavaScript脚本的网页能够在URL不变的情况下改变网页的内容。</p><p>动态网页上使用的技术主要包括以下几种：</p><ol><li>JavaScript</li><li>JQuery</li><li>AJAX</li><li>DHTML</li></ol><p>javaScripi是网络上最常用的、支持者最多的客户端脚本语言，它可以收集用户的跟踪数据，不需要重载页面直接提交表单，在页面嵌入多媒体文件，甚至运行网页游戏</p><p>lavaScript可以在网页源代码的<scrip>标签里看到</p><p>jQuery是一个十分常见的化优秀的javaScipt也是一个快速、简洁的javaScript框架，它封装了JavaScript常用的功能代码，提供了简便的JavaScript设计模式，优化HTML文档操作、事件处理等。</p><p>70%最流行的网站和约30%的其他网站都在使用iQuery。一个网站使用jQuery的特征，就是源代码中包含了iQuery人口。</p><p>如果在个网站上看到了jQuery.那么采集这个网站上的数据时要格外<br>小心。jQuery可以动态创建HTML内容，只有在JavaScript代码执行<br>之后才会显示。如果用传统的方法采集页面内容，就只能获得JavaScript代码执行之前页面上的内容。这样的结果不是一个实时的结果，我们大家现在看很多的网站、网页数据都是实时在新，我们当然也希望获取的数据是最新的。</p><p>用户与网站服务器通信的唯一方式，就是发出HTTP请求获取新页面、如果提交表单之后，或者从服务器获取信息之后，网站的页面不需要重新刷新，那么当前访问的网站就在用AJAX技术</p><p>AJAX（Asynehronours JavaScript and XML.异步JavaSript和XML）其实并不是一门语言，而是用来完成网络任务（可以认为它与网络数据采集差不多）的一系列技术。AJAX能够使网站不需要使用单独的页面请求就可以和网络服务器进行交互（收发信息）。</p><p>与AJAX样，动态HTML（DynamicHTMLDHTML）也是一系列用于解决网络问题的技术集合。DHTML是用客户端语言改变页面的HTML元素（HTML、CS.或者二者皆被改变）。例如，页面上的按钮只有当用户移动鼠标之后才出现，背景色可能每次点击都会改变，或者用一个AAX请求触发页面加载一段新内容。网页是否属于DHTML.关键要看有没有JavaScript控制HTML和CSS元索</p><p>那些使用了AAX或DHTML技术改变或加载内容的页面，可能有一些采集手段。但是，<br>用Python解决这个间题只有两种途径：<br>（1）直接从javaScript代码中采集内容（费时费力）。<br>（2）用Python的第三方库运行javaScript，直接采集在浏览器中看的页面。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存储过程与触发器</title>
      <link href="2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB7/"/>
      <url>2022/02/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB7/</url>
      
        <content type="html"><![CDATA[<h1 id="并发下载"><a href="#并发下载" class="headerlink" title="并发下载"></a>并发下载</h1><h2 id="多线程爬虫流程"><a href="#多线程爬虫流程" class="headerlink" title="多线程爬虫流程"></a>多线程爬虫流程</h2><p>由于外部网终不稳定，在使用单线程爬取网页数据时，如果有一个网页响应速度慢或者卡住，整个程序都要等待下去，这显然是无效率的.因此，可以使用多线程、多进程、协程技术实现并发下载网页</p><p>那么，在Python中多线程、多进程和协程应该如何选择呢？<br>一般来说，多进程适用于cpu密集型的代码，例如各种循环处理大量的密集并行计算等。多线程适用于I/0密集型的代码，例如文件处理、网络交互等。协程无须通过操作系统调度，没有进程、线程之间的切换和创建等开销，适用于大量不需要CPU的操作，例如网络I/0等。<br>实际上，限制爬虫程序发展的瓶颈就在于网络I/0，原因是网络10的速度赶不上CPU的处理速度.结合多线程、多进程和协程的特点和用途，我们一般采用多线程和协程技术来实现爬虫程序</p><p>多线程爬虫将多线程技术运用在采集网页信息和解析网页内容上。</p><p>多线程爬虫流程如下：</p><ol><li>首先有一个网址列表，是要爬取数据的网页列表。</li><li>同时启动多个线程抓取网页内容，一般启动固定数量的线程。</li><li>将抓取到的网页源码存储在一个列表里。</li><li>同时使用多个线程对网页源码表里的网页内容进行解析。</li><li>将解析之后的数据存储起来。</li></ol><h1 id="Queue（列队）模块简介"><a href="#Queue（列队）模块简介" class="headerlink" title="Queue（列队）模块简介"></a>Queue（列队）模块简介</h1><h2 id="使用queue模块实现多线程爬虫"><a href="#使用queue模块实现多线程爬虫" class="headerlink" title="使用queue模块实现多线程爬虫"></a>使用queue模块实现多线程爬虫</h2><p>queue模块是Python内置的标准模块，可以直接通过importqueue引用，在Queue模块中提供了三种同步的、线程安全的队列。</p><p><code>Queue</code>  <code>LifoQueue</code>  <code>PriorityQueue</code></p><p>共中，ifoQueue和priorityQueue都是Queue的子类。这些队列的唯一区别是元素取出的顺序不同</p><p>Queue类表示一个基本的FIFO（FirstInFirstOut）队列，即先进先出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">queue.Queue(maxsizc=0）</span><br></pre></td></tr></table></figure><p>其中，maxsize参数是个整数，它规定了队列的长度。一旦达到上限，再添加数据会导致阻塞，直到队列中的数据被消费掉。如果maxsize小于或者等于0，表示队列大小没有限制。maxsize的默认值为0。</p><p>LifoQueue类表示<code>后进先出</code>队列（LastinFirstOut），与楼类似都是后进入的元素先出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qucue.LifoQueue（maxsize=0）</span><br></pre></td></tr></table></figure><p>其中，maxsize参数的含义与Queue类相同。</p><p>PriorityQueue类表示优先级队列，按级别顺序取出元素，级别最低的最先取出。优先级队列中的元素一般采取元组（优先级别，数据）的形式来存储。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qucue.PriorityQueue (maxsize=0）</span><br></pre></td></tr></table></figure><p>其中，maxsize参数的含义与前两个类相同</p><p>除此之外，在Queue模块中还定义了2个异常类。</p><ol><li>Empty：当从空队列中取数据时，可抛出此异常</li><li>Full：当向一个满队列中存数据时，可抛出此异常。</li></ol><h1 id="Queue类概述"><a href="#Queue类概述" class="headerlink" title="Queue类概述"></a>Queue类概述</h1><p>Queue类是Python标准库中的线程安全的队列实现，它提供了一个适用于多线程编程的先进先出的数据结构一队列，用于生产者和消费者线程之间的信息传递。</p><p>List，Dict等数据存储类型都是非线程安全的。在多线程中，为了防止共享资源的数据不同步问题，对资源加锁是个重要的环节。Queue类中实现了所有的锁逻辑，能够满足多线程的需求，所以在满足使用条件的情况下，建议使用队列。</p><p>Queue类提供了数据存储和管理的常用方法。<br>queue.Queue（maxsize）<br>用于创建队列，maxsize规定了队列的长度。一旦达到上限，再添加数据会导致阻塞，直到队列中的数据被消耗掉。如果maxsize小于或者等于0，表示队列大小没有限制。maxsize的默认值为0。</p><p>Queue类提供了数据存储和管理的常用方法。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>empty()</td><td>如果队列为空，返回True，否则返回False</td></tr><tr><td>full()</td><td>如果队列已满则返回True，否则返回False</td></tr><tr><td>get()</td><td>从队头获取并删除第一个元素</td></tr><tr><td>put()</td><td>在队尾添加一个元素</td></tr><tr><td>get_nowait()</td><td>立即取出一个元素，不等待，相当于get(False)</td></tr><tr><td>put_nowait()</td><td>立即放入一个元素，不等待，相当于put(item,False)</td></tr><tr><td>join()</td><td>阻塞当前线程，直到队列里的所有元素都已被处理</td></tr></tbody></table><h2 id="Queue类提供了数据存储和管理的常用方法"><a href="#Queue类提供了数据存储和管理的常用方法" class="headerlink" title="Queue类提供了数据存储和管理的常用方法"></a>Queue类提供了数据存储和管理的常用方法</h2><p>get（block=Ture.timeout=None）<br>从队头获取并删除第一个元素。它有两个可选元素。<br>（1）block：默认值为Ture</p><p>当前线程：当值为False时，即当前线程：当值为假时，即当队列为空时，阻塞当前线程；当值为False时，即当队列为空时，不阻塞线程，而是抛出Empty异常。</p><p>（2）timeount设置阻塞的最大时长，默认为None。</p><p>当block值为True时，tmeout为None，则表示无限期阻塞线程，直到队列中有一个可用元素；timeout为正数，表示阻塞的最大等待时长，如果超出时长队列中还没有元素，则抛出Empty异常</p><p>put (time,block=True.timeout=None）<br>在队列添加一个元素Put有3个参数，依次介绍如<br>item必需的参数，表示添加元素的值。</p><p>block：可选参数，默认值为True，表示当队列已满阻塞当前线程。如果取值为False，则当队列已满时抛出Ful异常。</p><p>timeout：可选参数，默认为None。</p><p>当blodk参数值为True时，timeout表示阻塞的时长：当timeout为None时，表示无限期阻塞线程，直到队列中空出一个数据单元：如果timeout为正数，则表示阻塞的最大等待时长，如果超出最大时长还没有可用数据单元出现，则引发Full异常。</p><h1 id="协程爬虫的流程分析"><a href="#协程爬虫的流程分析" class="headerlink" title="协程爬虫的流程分析"></a>协程爬虫的流程分析</h1><p>所谓协程，就是同时开启多个任务，但一次只顺序执行一个。等到所执行的任务遭遇阻塞，就切换到下一个任务继续执行，以期节省下阻塞所占用的时间。</p><p>单进程下，协程和多线程区别并没有很大，相较之下，协程更节省资源、效率更高、并且更安全。</p><p>多进程下，多线程可以利用多核资源，这是单进程的协程模型做不到的。</p><p>由于协程的切换不像多线程调度那样耗费资源，所以不用严格限制协程的数量</p><p>协程爬虫流程如下：</p><ol><li>首先将要爬取的网址存储在一个列表中。</li><li>为每个网址创建一个协程并启动该协程。</li><li>将抓取到的目标数据存储在一个列表里。</li><li>遍历数据列表，将数据存储在本地文件中。</li></ol><h2 id="第三方库gevent"><a href="#第三方库gevent" class="headerlink" title="第三方库gevent"></a>第三方库gevent</h2><p>gevent是一个基于协程的Python网络库，是一个第三方库，可使用以下方法对它进行安装；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gevent</span><br></pre></td></tr></table></figure><p>Gevent库使用以下方式进行引用；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import gevent</span><br></pre></td></tr></table></figure><p>gevent库的常用方法如下：</p><p>gevent.spawn()  方法：创建并启动协程。<br>gevent.joinall()   方法：等待所有协程执行完毕。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据解析</title>
      <link href="2022/02/16/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB6/"/>
      <url>2022/02/16/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB6/</url>
      
        <content type="html"><![CDATA[<h1 id="了解网页数据和结构"><a href="#了解网页数据和结构" class="headerlink" title="了解网页数据和结构"></a>了解网页数据和结构</h1><p>对于服务器端来说，它返回给客户端的数据格式可分为非结构化和结构化两种。</p><p><strong>非结构化数据</strong></p><p>非结构化数据是指数据结构不规则或不完整，没有预定义的数据模型，不方便使用数据库二维逻辑来表现的数据，包括所有格式的办公文档、文本、图像等。</p><p><strong>结构化数据</strong></p><p>结构化数据就是能够用数据或统一的结构加以表示，具有模式的数据，包括HTML、XML和SON等。</p><h2 id="查看网页结构"><a href="#查看网页结构" class="headerlink" title="查看网页结构"></a>查看网页结构</h2><p>使用GoogleChrome浏览器打开百度首页，在“新闻”选项上面右击选择“检查”，浏览器底部打开一个窗口，并显示选中元素周围的HTML层次结构。</p><h1 id="数据解析技术"><a href="#数据解析技术" class="headerlink" title="数据解析技术"></a>数据解析技术</h1><p>了解了网页的数据和结构以后，我们可以借助网页解析器（用于解析网页的工具）从网页中解析和提取出有价值的数据，或者是新的URL列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[网页源码字符串] --&gt;B(网页解释器)</span><br><span class="line">    B --&gt; D[价值数据]</span><br><span class="line">    B --&gt; E[新URL列表]</span><br></pre></td></tr></table></figure><p>Python支持一些解析网页的技术，分别为正则表达式、XPath、Beautiful Soup和 JSONPath。</p><blockquote><p>针对文本的解析，有正则表达式；</p><p>针对HTML/XML的解析，有XPath、BeautifulSoup、正则表达式；</p><p>针对JSON的解析，有JSONPath。</p></blockquote><p>正则表达式是基于文本的特征来匹配或查找指定的数据，它可以处理任何格式的字符串文档，类似于模糊匹配的效果。</p><p>XPath和BeautifulSoup基于HTML/XML文档的层次结构来确定到达指定节点的路径，所以它们更适合处理层级比较明显的数据。</p><p>JSONPath专门用于JSON文档的数据解析。</p><p>针对不同的网页解析技术，Python分别提供了不同的模块或者库来支持</p><table><thead><tr><th>正则表达式</th><th>XPath</th><th>JSONPath</th><th>Beautiful Soup</th></tr></thead><tbody><tr><td>re模块</td><td>l xm l 库</td><td>json模块</td><td>Python库</td></tr></tbody></table><p>接下来，通过一张表来比较一下re、lxml和beautifulsoup4的性能。</p><table><thead><tr><th>抓取工具</th><th>速度</th><th>使用难度</th><th>安装难度</th></tr></thead><tbody><tr><td>re</td><td>最快</td><td>困难</td><td>无（内置）</td></tr><tr><td>lxml</td><td>快</td><td>简单</td><td>一般</td></tr><tr><td>beautifulsoup4</td><td>慢</td><td>最简单</td><td>简单</td></tr></tbody></table><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>正则表达式是基于文本的特征来匹配或查找指定的数据，它可以处理任何格式的字符串文档，类似于模糊匹配的效果。</p><p><strong>re模块的一般使用步骤如下：</strong></p><ol><li>使用compile（）函数将正则表达式以字符串形式编译为一个Pattern类型的对象。</li><li>通过Pattern对象提供的一系列方法对文本进行匹配查找，得到一个表示匹配结果的Match对象。</li><li>使用Match对象提供的属性和方法获得信息，如匹配到的字符串。</li></ol><p>大多数情况下，从网站上爬取下来的网页源代码中都有汉字，如果要匹配这些汉字，就需要知道其对应的正则表达式。通常情况下，中文对应的Unicode编码范围为<code>[u4e00-u9fa5]</code>，但是大多数情况下是可以使用的个范围并不是很完整，例如，没有包括全角（中文）标点，但是大多数情况是可以使用的。</p><p>例如，把“你好，helo，世界”中的汉字提取出来，可以通过如下代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import re   #待匹配的字符串   title=&quot;你好，hello，世界&quot;</span><br><span class="line">#创建正式表达，用于只匹配中文</span><br><span class="line">Pattern=re.compile(r*[\u4e00-lu9fa5]+&quot;)</span><br><span class="line">#检索整个字符串，将匹配的中文放到列表中</span><br><span class="line">result=pattern.findall(title)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h1 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h1><p><strong>XPath和Beautiful Soup</strong><br>XPath和BeautifulSoup基于HTML/XML文档的层次结构来确定到达指定节点的路径，所以它们更适合处理层级比较明显的数据。</p><p><strong>什么是XPath</strong><br>我们借用网上一个很形象的比喻，用于区分正则表达式和XPath。</p><p>把提取数据比作找建筑。如果使用正则表达式进行查找，则它会告诉你这个建筑本身有哪些特征，以及它的左边是什么，右边是什么。这样的描述限定查找的范围较大，不易于找到。而XPath会直接告诉你这个建筑位于“中国-北京-昌平区-建材城西路一金燕龙办公楼一层”，相比较而言，这种描述更加具体，易于找到。</p><blockquote><p>XPath即为XML路径语言，用于确定XML树结构中某一部分的位置。XPath技术基于XML的树结构，能够在树结构中遍历节点（元素、属性等）。</p><p>XPath使用路径表达式选取XML文档中的节点或者节点集，这些路径表达式代表着从一个节点到另一个或者一组节点的顺序，并以“/”字符进行分隔。</p></blockquote><h1 id="lxml"><a href="#lxml" class="headerlink" title="lxml"></a>lxml</h1><p><strong>什么是lxml库</strong><br>lxml是以Python语言编写的库，主要用于解析和提取HTML或者XML格式的数据，可以利用XPath语法快速地定位特定的元素或节点。</p><p>lxmI库中大部分的功能都位于lxml.etree模块中，导入lxml.etree模块的常见方式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[from lxml import etree]</span><br></pre></td></tr></table></figure><p>lxml库的一些相关类如下：</p><table><thead><tr><th>类</th><th>说明</th></tr></thead><tbody><tr><td>Element</td><td>可以理解为XML的节点</td></tr><tr><td>ElementTree</td><td>可以理解为一个完整的XML文档树</td></tr><tr><td>ElementPath</td><td>可以理解为XPath，用于搜索和定位节点</td></tr></tbody></table><p>Element类是XML处理的核心类，它可以理解为XML的节点，大部分XML节点的操作都是围绕着该类进行的。</p><p>关于Element类的相关操作，主要可分为三部分，分别是节点操作、节点属性的操作、节点内文本的操作，下面进行逐一介绍。</p><ol><li>节点操作：若要获取节点的名称，可以通过tag属性获取。</li><li>节点属性的操作：在创建节点的同时，可以为节点增加属性。节点中的属性是以key-value的形式进行存储的，类似于字典的存储方式。通过构造方法创建节点时，可以在该方法中以参数的形式设置属性，其中参数的名称表示属性的名称，参数的值表示为属性的值。<ol><li>此外，可以通过set()方法给已有的节点添加属性。在调用该方法时可以传人两个参数，其中第一个参数表示属性的名称，第二个参数表示属性的值。</li><li>在上述两个示例中，都用到了tostringO函数，该函数可以将元索序列化为XML树的编码字符串表示形式</li></ol></li><li>节点内文本的操作：一般情况下，可以通过text、tail属性或者xpath()方法来访向文本内容。</li></ol><p>从字符串或文件中解析XML<br>为了能够将XML文件解析为树结构，etree模块中提供了如下3个函数：</p><p>（1）formstring()函数：从字符串中解析XML文档或片段，返回根节点（或解析器目标运回的结果）。<br>（2）XMLO函数：从字符串常量中解析XML文档或片段，返回根节点（或解析器目标返回的结果）<br>（3）HTML()函数：从字符串常量中解析HTML文档或片段，返回根节点（或解析器目标返回的结果其中，XML()函数的行为类似于fromstring()函数，通常用于将XML字面量直接写人到源代码中；HTML()函数可以自动补全缺少的<html>和<body>标签。</p><h1 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h1><p><strong>什么是Beautiful Soup</strong><br>使用lxml库时需要编写和测试XPath语句，显然降低了开发效率。除了Ixml库之外，还可以使用Beautiful Soup来提取HTML/XML数据。虽然这两个库的功能相似，但是Beautiful Soup使用起来更加简洁方便，受到开发人员的推崇。</p><p>官网推荐现在的项目使用Beautiful Soup（Beautiful Soup 4版本，简称为bs4）开发。bs4是一个HTML/XML的解析器，主要的功能是解析和提取HTML/XML数据。</p><p>bs4不仅支持CSS选择器，而且支持Python标准库中的HTML解析器，以及lxml的XML解析器。</p><p>通过使用这些转化器，实现了惯用的文档导航和查找方式，节省了大量的工作时间，提高了开发项目的效率。</p><p>bs4库将复杂的HTML文档转换成树结构（HTMLDOM），这个结构中的每个节点都是一个Python对象，这些对象可以归纳为如下四种：</p><table><thead><tr><th>类</th><th>说明</th></tr></thead><tbody><tr><td>bs4.element.Tag</td><td>表示HTML中的标签，最基本的信息组织单元</td></tr><tr><td>bs4.element.NavigableString</td><td>表示HTML中标签的文本（非属性字符串）</td></tr><tr><td>bs4.BeautifulSoup</td><td>表示HTML，DOM中的全部内容，支持遍历文本档树和搜索文档树的大部分方法</td></tr><tr><td>bs4.element.Comment</td><td>表示标签内字符串的注释部分，是一种特殊的NavigableString对象。</td></tr></tbody></table><p>使用bs4的一般流程如下：</p><p>第一步：</p><p>根据HTML或者XML文件创建BeautifulSoup对象。</p><p>第二步：</p><p>根据DOM树进行各种节点的搜索，只要获得了一个节点，就可以访问节点的名称、属性和文本。</p><p>第三步：</p><p>在搜索节点的时候，我们也可以按照节点的名称、节点的属性或者节点的文字进行搜索。</p><p>（1）markup:表示要解析的文档字符串或文件对象。<br>（2）features:表示解析器的名称。<br>（3）builder:表示指定的解析器。<br>（4）from_encoding:表示指定的编码格式。<br>（5）exclude_encodings:表示排除的编码格式。<br>例如，根据字符串html_doc创建个Beautifulsoup对象</p><h1 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h1><p><strong>什么是JSON</strong><br>JSON（javaScript Object Notation）是种轻量级的数据交换格式，可使人们很容易地进行阅读和编写，同时也方便于机器进行解析和生成。ISON适用于进行数据交互的场景，如网站前台与后台之间的数据交互。JSONPath是种信息抽取类库，用于以JSON文档中抽取指定信息。本节将带领读者认识ISON，并介绍如何使用JSONPath和json模块解析JSON文档</p><p>JSON是比XML更简单的一种数据交换格式，它采用完全独立于编程语言的文本格式来存储和表示数据。</p><blockquote><p>使用键值对  (key：value)  表示对象<br>使用逗号    (  ,  )    分隔多条数据<br>使用花括号  { }  包含对象<br>使用方括号  [ ]  表示数组</p></blockquote><p><strong>JSON键/值对</strong><br>格式是：字段名称（包含在双引号中），后面加一个冒号，然后是值。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;name&quot;:&quot;XiaoHong&quot;</span><br></pre></td></tr></table></figure><p><strong>JSON的值</strong><br>数字（整数或浮点数）</p><p>字符串（在双引号中）</p><p>逻辑值（true或false）</p><p>数组（在方括号中）</p><p>对象（在花括号中）</p><p>null</p><p><strong>JSON对象</strong><br>对象在JavaScript中表示为花括号 { } 括起来的内容，数据结构为{key：value，key：value，，} 的键值对的结构。</p><p><strong>JSON数组</strong><br>数组在JavaSeript中是中括号[]括起来的内容，数据结构为[字段1，字段2，字段3，]，其中字段值的类型可以是数字、字符串、数组、对象几种。</p><h2 id="JSON与XML"><a href="#JSON与XML" class="headerlink" title="JSON与XML"></a>JSON与XML</h2><p>JSON和XML都是文本格式语言，它们经常用于数据交换和网络传输，那么它们有什么区别？接下来，从以下几个方面进行比较。</p><p>1.可扩展性<br>JSON和XML都有很好的扩展性，但ISON与JavaScript语言的结合更紧密，在javaScript语言中便用ISON可谓是无缝连接。</p><p>2.可读性<br>JSON和XML的可读性不相上下，一个是简洁的语法，一个是规范的标签形式，很难分出优劣。</p><p>3.编码难度<br>XML出现的时间比JSON早，能够处理XML语言的编码工具很丰富；但JSON语言出现之后发展迅速，现在也具有了与XML相婉美的处理工具。在不使用工具的情况下，熟练的开发人员同样能够轻松写出想要的XML文档和JSON文档，但XML文档需要的字符量更多。</p><p>4.解码难度<br>JSON和XML都是可扩展性的结构，如果不知道文档结构，解析文档则非常不方便。所以，最好在知道文档结构的情况下进行解析。其实，在开发过程中，只要看到文档的字符串，就可以明白它的结构。</p><p>5.有效数据率<br>由于省却了大量的标签，JSON的有效数据率比XML高得多。这里使用一个实例进行比较，用XML表示中国部分省市的信息。</p><p>由XML和JSON的对比可知，JSON的语法格式简单，层次结构清晰，比XML更易于阅读。并且，由于它占用的字符量少，用于网络数据传输时，能节约带宽，提高传输效率。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据恢复之MBR</title>
      <link href="2022/02/14/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/1.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BMBR/"/>
      <url>2022/02/14/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E5%B1%B1%E9%B8%A1/1.%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E4%B9%8BMBR/</url>
      
        <content type="html"><![CDATA[<h1 id="MBR作用及结构"><a href="#MBR作用及结构" class="headerlink" title="MBR作用及结构"></a>MBR作用及结构</h1><p>主引导记录（Master Boot Record，缩写：MBR，又叫做<code>主引导扇区</code>，是计算机开机后访问硬盘时所必须要读取的首个扇区，它在硬盘上的（0桂面，0磁头，1扇区）</p><p>在总共512字节的MBR扇区中，由四部分组成</p><ol><li>引导程序</li><li>Windows磁盘签名</li><li>分区表</li><li>结束标志</li></ol><h2 id="引导程序"><a href="#引导程序" class="headerlink" title="引导程序"></a>引导程序</h2><p><code>引导程序</code>占其中前440字节，其地址在偏移<code>0</code>~偏移<code>1B7H</code>处</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>计算机主板的BIOS程序在自我检测通过后，会将MBR扇区整个读入内存中，然后将执行权交给内存中MBR扇区的引导程序。引号程序一旦被破坏，就会引起计算机死机，从而无法正常引导系统。</p><h2 id="Windows磁盘签名"><a href="#Windows磁盘签名" class="headerlink" title="Windows磁盘签名"></a>Windows磁盘签名</h2><p><code>Windows磁盘标签</code>占用<code>引导程序</code>后的4个字节，其地址在偏移<code>1B8H</code>~`1BBH`处，是Wind硬盘初始化时写入的一个磁盘标签</p><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>Windows磁盘签名是Windows系统在对硬盘做初始化时写入的一个标签，Windows依靠这个签名来识别硬盘，如果磁盘签名丢失，系统会认为硬盘未初始化</p><p>磁盘签名后两个字节是保留字节，是没有意义的，都是00</p><h2 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h2><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><p>分区表是用来管理硬盘的分区，如果分区表被清除或者破坏，则硬盘的分区就会丢失。</p><h2 id="结束标志"><a href="#结束标志" class="headerlink" title="结束标志"></a>结束标志</h2><h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3><p>在执行MBR的引导程序时，会验证MBR扇区最后两个字节是否为“55AA“。如果是“55AA”才会继续执行下面的程序，如果不是“55AA“，则程序认为这是一个非法的MBR，程序停止执行同时在屏幕上列出错误信息。</p><h1 id="MBR字节分析"><a href="#MBR字节分析" class="headerlink" title="MBR字节分析"></a>MBR字节分析</h1><table><thead><tr><th>字节偏移</th><th>字段长度</th><th>字段名和定义</th></tr></thead><tbody><tr><td>0X01BE**</td><td>1字节</td><td>引导标志：指明该分区是否为活动分区  活动分区：80   非活动分区：00</td></tr><tr><td>0X01BF</td><td>1字节</td><td>开始磁头</td></tr><tr><td>0X01C0</td><td>6位</td><td>起始扇区</td></tr><tr><td>0X01C1</td><td>10位</td><td>起始柱面</td></tr><tr><td>0X01C2**</td><td>1字节</td><td>分区类型</td></tr><tr><td>0X01C3</td><td>1字节</td><td>结束磁头</td></tr><tr><td>0X01C4</td><td>6位</td><td>结束扇区</td></tr><tr><td>0X01C5</td><td>10位</td><td>结束柱面</td></tr><tr><td>0X01C6**</td><td>4字节</td><td>分区的起始扇区号</td></tr><tr><td>0X01CA**</td><td>4字节</td><td>分区的总扇区数</td></tr></tbody></table><p>其中较为重要的是</p><table><thead><tr><th>字节偏移</th><th>字段长度</th><th>字段名和定义</th></tr></thead><tbody><tr><td>0X01BE</td><td>1字节</td><td>引导标志：指明该分区是否为活动分区</td></tr><tr><td>0X01C2</td><td>1字节</td><td>分区类型</td></tr><tr><td>0X01C6</td><td>4字节</td><td>分区的起始扇区号</td></tr><tr><td>0X01CA</td><td>4字节</td><td>分区的总扇区数</td></tr></tbody></table><p>其中0X01BE，活动分区为80，非活动分区为00</p><p>模板管理器：view—&gt;template  manager—&gt;Master Boot Record</p><h1 id="MBR修复"><a href="#MBR修复" class="headerlink" title="MBR修复"></a>MBR修复</h1><p>tip：提示初始化看mbr，提示格式化看dbr</p><p>修复MBR最重要的就是分区表，修复文件系统的类型，分区的起始扇区号，分区的总大小，是否为活动分区，结束标语</p><table><thead><tr><th>文件系统</th><th>文件类型</th></tr></thead><tbody><tr><td>FAT16</td><td>06/0E</td></tr><tr><td>FAT32</td><td>0B/0C</td></tr><tr><td>NTFS</td><td>07</td></tr><tr><td>ExFAT</td><td>07</td></tr><tr><td>扩展分区</td><td>0F</td></tr></tbody></table><p>修复步骤：</p><ol><li>新建一个磁盘</li><li>将新建磁盘的MBR复制到被破坏磁盘的MBR</li><li>修改被破坏磁盘MBR的磁盘签名</li><li>找到该磁盘第一个分区的起始扇区</li><li>从该起始扇区得知文件系统、起始扇区号、分区大小</li><li>将这些数据填入MBR的分区表中</li><li>保存，在磁盘管理处进行刷新</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据恢复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="2022/02/14/Python/Python%E6%8A%80%E6%9C%AF/Python/"/>
      <url>2022/02/14/Python/Python%E6%8A%80%E6%9C%AF/Python/</url>
      
        <content type="html"><![CDATA[<h1 id="python特点"><a href="#python特点" class="headerlink" title="python特点"></a>python特点</h1><p>Python是一种面向对象的动态类型计算机语言，最初被设计用于编写自动化脚本（shell），随着版本的不断更新和语言新功能的添加，越来越多被用于独立的、大型项目的开发。其具有以下特点</p><ol><li>简单易学。代表简单主义思想的语言。</li><li>面向对象。程序是由数据和功能组和而成</li><li>可移植性。已经被移植在Lnux、Windows等平台上</li><li>可解释性。直接从源代码运行程序。</li><li>开源FLOSS（自由/开放源码软件）之一</li></ol><h1 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h1><p>1991年，第一个Python编译器诞生。<br>2000年10月，发布Python2.0版本。<br>2008年12月，发布Python3.0版本。<br>2020年10月，发布Python3.9版本。</p><h1 id="Python应用领域"><a href="#Python应用领域" class="headerlink" title="Python应用领域"></a>Python应用领域</h1><ol><li>web开发。Python是web开发的主流语言，与JS，PHP等广泛使用的语言相比，Python的类库丰富，使用方便。</li><li>科学计算与数据分析。随着NumPy等众多库的引入和完善，Python越来越适合科学计算和数据分析。</li><li>爬虫开发。网络爬虫可以在很短的时间内，获取互联网上有用的数据节省大量的人力资源，Python自带的urllib库、第三方requests库等让网络爬虫变得非常简单</li><li>系统网络运维。运维管理系统有大量重复性的工作，为了提高效率，使工作尽可能自动化，Python是一门非常合适的语言。用Python编写的系统管理脚本在可读性、性能、代码重用度、拓展性等方面优于普通的shell脚本。</li><li>人工智能。Python是人工智能领域的主流语言，人工智能领域神经网络方向流行的神经网络框架Tensorflow就是采用了Python语言。</li></ol><h1 id="Python编码规范"><a href="#Python编码规范" class="headerlink" title="Python编码规范"></a>Python编码规范</h1><h2 id="命名规范："><a href="#命名规范：" class="headerlink" title="命名规范："></a>命名规范：</h2><ol><li>模块尽量使用小写命名，首字母保持小写，尽量不要用下划线</li><li>类名使用驼峰（CamelCase）命名风格，首字母大写，私有类可用一个下划线开头。</li><li>函数名一律小写，如有多个单词，用下划线隔开</li><li>变量名尽量小写，如有多个单词，用下划线隔开。</li><li>常量采用全大写，如有过个单词，使用下划线隔开。</li></ol><h2 id="代码布局："><a href="#代码布局：" class="headerlink" title="代码布局："></a>代码布局：</h2><ol><li>缩进。标准Python风格中，每个缩进级别使用4个空格。</li><li>行的最大长度。每行最大长度79个字符，换行可以使用反斜杠、但建议使用圆括号。</li><li>空白行。顶层函数和定义类之间空两行，类中方法定义之间空一行；函数内逻辑无关的代码之间空一行，其他地方尽量不要空行。</li></ol><h2 id="空格的使用："><a href="#空格的使用：" class="headerlink" title="空格的使用："></a>空格的使用：</h2><ol><li>右括号前不加空格。</li><li>逗号、冒号、分号前不要加空格。</li><li>函数的左括号前不要加空格，例如Function0。</li><li>序列的左括号前不要加空格，例如List[2]。</li><li>操作符的左右各加一个空格，例如a+b=c。</li><li>不要将多条语句写在同一行</li></ol><h2 id="代码的注释："><a href="#代码的注释：" class="headerlink" title="代码的注释："></a>代码的注释：</h2><ol><li>块注释。块注释跟随被注释的代码，缩进至与代码相同的级别。块注释使用“#”开头。</li><li>行注释。行内注释是与代码语句同行的注释。行内注释与代码至少由两个空格分隔，注释以“#”开头。</li><li>文档字符串。文档字符串指的是为所有公共模块、函数、类以及方法编写的文档说明。文档字符串使用三引号包裹。</li></ol><h2 id="数据的标识—变量："><a href="#数据的标识—变量：" class="headerlink" title="数据的标识—变量："></a>数据的标识—变量：</h2><p>Python程序运行过程中随时可能产生一些临时数据，应用程序会将这些数据保存在内存单元中，并使用不同的标识符来标识各个内存单元。<br>存购临时数据的内存单元称为变量，标识内存单元的符号为变量名内存单元中存贮的数据就是变量的值<br><strong>变量的定义格式如下：</strong><br>变量名=数据</p><h2 id="变量名应遵循以下规则："><a href="#变量名应遵循以下规则：" class="headerlink" title="变量名应遵循以下规则："></a>变量名应遵循以下规则：</h2><ol><li>由字母、数字和下划线组成，但不以数字开头。</li><li>区分大小写。例如Any与any是不同的标识符。</li><li>通俗易懂、见名知意。例如，表示性别，可以使用sex。</li><li>如果由两个以上单词构成，单词与单词之间使用下划线连接</li></ol><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="我的名片"><a href="#我的名片" class="headerlink" title="我的名片"></a>我的名片</h2><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;XXXXXXXX科技股份有限公司&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;张三       业务主管&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;_____________________&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;手机：123456789999999&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;地址：陕西省西安市西咸新区1号&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="标识符、变量、常量"><a href="#标识符、变量、常量" class="headerlink" title="标识符、变量、常量"></a>标识符、变量、常量</h1><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p><strong>1.标识符的定义</strong></p><p>标识符用来标识程序中实体的<code>名字</code>，如变量、常量、函数等对象的名字，由<code>字母</code>、<code>下划线</code>、<code>数字</code>和<code>汉字</code>组成且<code>不能以数字开头</code>，不能是Pyhom的<code>关键字</code>，标识符对<code>大小写敏感</code>。</p><p>例如：X、X、f1、StudentName、student_age、score_语文</p><p>[<strong>错误命名：</strong>]</p><p>if、 while、 def              #标识符为python关键字</p><p>123name、56age          #标识符以数字开头</p><p>stu@age、sco%语文      #标识符含有非法字符</p><p><strong>2.Python中的关键字</strong></p><p>在python中若想查询python中有哪些关键字可以先导入keyword模块</p><p> import keyword #导入关键字模块 print(keyword.kwlist) #查询所有关键字</p><p>查询结果：</p><p>[‘False’, ‘None’, ‘True’, ‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘nonlocal’, ‘not’, ‘or’, ‘pass’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</p><p>如果将关键字作为标识符，则会出现以下报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span>= [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">and</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  File <span class="string">&quot;E:/Selenium_Study/111.py&quot;</span>, line <span class="number">34</span></span><br><span class="line">    <span class="keyword">and</span>= [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line">      ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><p><strong>3.标识符常用方式</strong></p><p>小驼峰式命名：第一个单词首字母小写，之后的单词首字母大写<br>例如：myFirstName、myLastName</p><p>大驼峰式命名：每个单词首字母大写<br>例如：StudentAge、StudentName</p><p>下换线连接命名：用下划线把每个单词连接起来<br>例如：student_age、student_name</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p><strong>1.常量的定义</strong></p><p>程序运行过程中，其值<code>不能改变</code>的量称为常量<br>例如：5、6.5，‘Python’</p><p>常量用来表示数据的值</p><p>pythion中，通常用<code>全部大写</code>的标识符来表示常量</p><p>例如：PI=3.14、YEAR=2021、PRICE=100</p><p>可以用<code>type()</code>函数获取常量的数据类型</p><p><strong>2.常量类型举例</strong></p><p>整数类型常量：           163，-152，012</p><p>浮点类型常量：           0.123，-4.89</p><p>复数类型常量：           4+5j，-6+7j</p><p>字符串类型常量：       “Hello，” Python</p><p>布尔类型常量：            True，False</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>1.变量的定义</strong></p><p>变量是程序运行过程中，值<code>可以改变</code>的量。</p><p> 变量是存贮空间以及存贮空间中存放的数据的占位符号，变量用标识符来表示。</p><p>python中变量赋值以后才会被创建，使用赋值号<code>（=）</code>给变量赋值，赋值号左边是一个变量名，赋值号右边是存储在变量中的值。</p><p>变量的命名要遵循标识符命名规则，并做到<code>见文知义</code></p><p><strong>2.变量—-示例1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">math=<span class="number">98</span>               <span class="comment">#整数98赋给变量math</span></span><br><span class="line">chinese=<span class="number">95</span>            <span class="comment">#整数95赋给变量chinese</span></span><br><span class="line">total=math+chinese    <span class="comment">#变量math加chinese赋给变量total</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数学:&#123;0&#125;,语文:&#123;1&#125;,总分:&#123;2&#125;&quot;</span>.<span class="built_in">format</span>(math,chinese,total))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数学:<span class="number">98</span>,语文:<span class="number">95</span>,总分:<span class="number">193</span></span><br></pre></td></tr></table></figure><p><strong>2.变量—-示例2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&quot;hello&quot;</span></span><br><span class="line">s_length=str1.__len__()</span><br><span class="line"><span class="built_in">print</span>( <span class="string">&quot;%s的长度为%d&quot;</span> %(str1,s_length))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello的长度为<span class="number">5</span></span><br></pre></td></tr></table></figure><h1 id="基本数字类型"><a href="#基本数字类型" class="headerlink" title="基本数字类型"></a>基本数字类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><h3 id="整型的定义："><a href="#整型的定义：" class="headerlink" title="整型的定义："></a>整型的定义：</h3><p>   整型数据也称为整数，就是没有小敷部分的数。</p><h4 id="整数的分类："><a href="#整数的分类：" class="headerlink" title="整数的分类："></a>整数的分类：</h4><p>   整数包括正整数、0和负整数。</p><h3 id="整数的取值范围："><a href="#整数的取值范围：" class="headerlink" title="整数的取值范围："></a>整数的取值范围：</h3><p>   Python可以表示任意大小的整数，没有位数的限制</p><h3 id="整型数据不同进制的表示"><a href="#整型数据不同进制的表示" class="headerlink" title="整型数据不同进制的表示"></a>整型数据不同进制的表示</h3><table><thead><tr><th>进制数</th><th>前缀</th><th>组成</th></tr></thead><tbody><tr><td>十进制</td><td></td><td>0-9十个数字</td></tr><tr><td>二进制</td><td>0b(或0B)</td><td>0、1两个数字</td></tr><tr><td>八进制</td><td>0o(或0O)</td><td>0-7八个数字</td></tr><tr><td>十六进制</td><td>0x(或0X)</td><td>0-9十个数字以及A-F(或a-f)六个字母组成</td></tr></tbody></table><h3 id="整数不同进制—示例1"><a href="#整数不同进制—示例1" class="headerlink" title="整数不同进制—示例1"></a>整数不同进制—示例1</h3><p>789、-563                      十进制</p><p>0b1101、0B110101     二进制</p><p>0o14256、0O12857     八进制</p><p>0x142a、0X12857f       十六进制</p><h2 id="浮点型数据"><a href="#浮点型数据" class="headerlink" title="浮点型数据"></a>浮点型数据</h2><h3 id="浮点型数据的定义："><a href="#浮点型数据的定义：" class="headerlink" title="浮点型数据的定义："></a>浮点型数据的定义：</h3><p>   浮点型数据也称为浮点数，由整数和小数组成。</p><h3 id="浮点型数据的表示："><a href="#浮点型数据的表示：" class="headerlink" title="浮点型数据的表示："></a>浮点型数据的表示：</h3><p>   十进制小数形式<br>   指数形式<br>   <a>e<b>或者<a>E<b>，表示a*10b、其中a为实数，b为整数。</p><h3 id="浮点数———示例"><a href="#浮点数———示例" class="headerlink" title="浮点数———示例"></a>浮点数———示例</h3><p>   十进制小数形式<br>   0.12356、-1.238657、456.63、-5693.63<br>   指数形式<br>   1.45e3、-2.56E-6、63.56E-9</p><p>   非法指数形式</p><p>   e9、3.6e、12.-e5、7.34E-0.5</p><h2 id="复数类型"><a href="#复数类型" class="headerlink" title="复数类型"></a>复数类型</h2><h3 id="复数的定义"><a href="#复数的定义" class="headerlink" title="复数的定义"></a>复数的定义</h3><p>复数一般形式为<code>a+bj</code>，其中a是<code>实部</code>，b是<code>虚部</code>，这里a和b都是浮点数，复数也可使用complex(a.b)创建。</p><p>例如：2.56j、5.6+15.6j、complex(5.6,4.5)</p><h3 id="虚部和实部"><a href="#虚部和实部" class="headerlink" title="虚部和实部"></a>虚部和实部</h3><p>使用<code>real</code>和<code>imag</code>属性获取复数的实部和虚部。</p><h3 id="复数的类型—示例"><a href="#复数的类型—示例" class="headerlink" title="复数的类型—示例"></a>复数的类型—示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="number">4.5</span>+<span class="number">5j</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;复数c的实部&quot;</span>+<span class="built_in">str</span>(c.real))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;复数c的虚部&quot;</span>+<span class="built_in">str</span>(c.imag))</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复数的实部<span class="number">4.5</span></span><br><span class="line">复数的虚部<span class="number">5.0</span></span><br></pre></td></tr></table></figure><h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h2><h3 id="布尔类型的定义"><a href="#布尔类型的定义" class="headerlink" title="布尔类型的定义"></a>布尔类型的定义</h3><p>Python中的布尔类型其实可以算是一种特殊的数字类型，它只有真和假两种值，其表示方法和对应的数字如下所示</p><p>True————-真————–1</p><p>False————假————–0</p><h3 id="布尔类型—-示例1"><a href="#布尔类型—-示例1" class="headerlink" title="布尔类型—-示例1"></a>布尔类型—-示例1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t=(<span class="number">1</span>&gt;<span class="number">0</span>)</span><br><span class="line">t1=t+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(t1)</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><ol><li><p>浮点数—-&gt;整数</p><p>int()函数将浮点数转换为整数</p></li><li><p>整数—-&gt;浮点数</p><p>float()函数将整数转换为浮点数</p></li></ol><h3 id="类型转换—示例1"><a href="#类型转换—示例1" class="headerlink" title="类型转换—示例1"></a>类型转换—示例1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">5</span></span><br><span class="line"></span><br><span class="line">y=<span class="built_in">float</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5.0</span></span><br></pre></td></tr></table></figure><h3 id="类型转换—示例2"><a href="#类型转换—示例2" class="headerlink" title="类型转换—示例2"></a>类型转换—示例2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">4.86</span></span><br><span class="line"></span><br><span class="line">y=<span class="built_in">int</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="综合实例"><a href="#综合实例" class="headerlink" title="综合实例"></a>综合实例</h1><h2 id="案例描述"><a href="#案例描述" class="headerlink" title="案例描述"></a>案例描述</h2><p>我们常用BMI（身体质量指数）来测量一个人是否健康。BMI越来越受到医生的重视，BM=体重（干克）身高（米的平方）请完成以下任务：<br>①输入用户的身高（单位为m），体重单位为kg）；<br>②计算用户的BMI；<br>③输出BMI具体数值和胖瘦等级</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>通过归纳、抽象。按解决顺序，将案例分解为4个问题</p><p>问题一：输入体重、身高。存储输入数据：身高、体重，并判断输入数<br>据的合法性</p><p>问题二：<br>测算BMI数值。根据BMI计算公式，BMI=体重（千克）/身高（米）<br>的平方，计算BMI数值</p><p>问题三：根据BMI数值匹配胖瘦等级。参考下表匹配胖瘦等级</p><table><thead><tr><th>分类</th><th>国际BMI值</th><th>国内BMI值</th></tr></thead><tbody><tr><td>偏瘦</td><td>&lt;18.5</td><td>&lt;18.5</td></tr><tr><td>正常</td><td>18.5 - 25</td><td>18.5 - 24</td></tr><tr><td>偏胖</td><td>25 - 30</td><td>24 - 28</td></tr><tr><td>肥胖</td><td>&gt; = 30</td><td>&gt; = 28</td></tr></tbody></table><p>问题四：格式化输出BMI数值和胖瘦等级。使用print格式化输出BMI具体数值和胖瘦等级</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p><strong>问题一：输入体重、身高</strong><br>（1）输入体重、身高-任务分解<br><code>步骤一</code>：存储输入数据，创建变量w（weight首字母）、hhcight首字母）存放键盘输入数据分别表示体重、身高；<br><code>步骤二</code>：判断数据合法性，判断变量w、h是否都为数字；<br><code>步骤三</code>：数据类型转换，将变量w、h均使用  eval()  函数转换为数字类型</p><p>（2）输入身高体重—任务程序实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">w = <span class="built_in">input</span>(<span class="string">&quot;请输入您的体重，单位为kg：&quot;</span>)</span><br><span class="line">h = <span class="built_in">input</span>(<span class="string">&quot;请输入您的身高，单位为m：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span>(w.strip(<span class="string">&quot;.&quot;</span>)== w <span class="keyword">and</span> w.replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;&quot;</span>).isdigit()):</span><br><span class="line">    w = <span class="built_in">input</span>(<span class="string">&quot;请输入您的体重，单位为kg：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span>(h.strip(<span class="string">&quot;.&quot;</span>)== h <span class="keyword">and</span> h.replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;&quot;</span>).isdigit()):</span><br><span class="line">    h = <span class="built_in">input</span>(<span class="string">&quot;请输入您的身高，单位为m：&quot;</span>)</span><br><span class="line">w = <span class="built_in">eval</span>(w)</span><br><span class="line">h = <span class="built_in">eval</span>(h)</span><br></pre></td></tr></table></figure><p>在这段代码中，前两行实现的是存贮数据的功能，使用input函数输入体重身高</p><p>第三到六行实现的是数据合法性的功能</p><p>第七到八行使用 eval 函数将字符串转换为数字类型的数据，为后续实现运算做准备</p><p><strong>问题二：测算BMI数值</strong></p><p>（1）测算BMI数值-任务分解</p><p>步骤一：创建变量BMI，存储身体质量指数</p><p>步骤二：根据BMI计算公式，BMl=w/pow(h,2），计算BMI数值<br>（2）测算BMI数值—任务代码实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BMI = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">BMI = w/<span class="built_in">pow</span>(h,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>第一行定义了变量存贮BMI的和</p><p>第二行计算BMI数值</p><p><strong>问题三：根据BMI数值匹配胖瘦等级</strong></p><p>（1）根据BMI数值匹配胖瘦等级一任务分解</p><p>步骤一：利用i多分支结构创建国际、国内胖瘦等级匹配表</p><p>步骤二：根据BMI具体数值匹配国际、国内胖瘦等级</p><p>（2）根据BMI数值匹配胖瘦等级一任务代码实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> BMI &lt; <span class="number">18.5</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;偏瘦&quot;</span>,<span class="string">&quot;偏瘦&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">18.5</span> &lt; = BMI &lt; <span class="number">24</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;正常&quot;</span>,<span class="string">&quot;正常&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">24</span> &lt; = BMI &lt; <span class="number">25</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;正常&quot;</span>,<span class="string">&quot;偏胖&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">25</span> &lt; = BMI &lt; <span class="number">28</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;偏胖&quot;</span>,<span class="string">&quot;偏胖&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">28</span> &lt; = BMI &lt; <span class="number">30</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;偏胖&quot;</span>,<span class="string">&quot;肥胖&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">24</span> &lt; = BMI &lt; <span class="number">25</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;肥胖&quot;</span>,<span class="string">&quot;肥胖&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    who,nat = <span class="string">&quot;肥胖&quot;</span>,<span class="string">&quot;肥胖&quot;</span></span><br></pre></td></tr></table></figure><p>第一二行利用if多分支结构创建国际、国内胖瘦等级匹配表，并进行BMI指数的匹配</p><p><strong>问题四：格式化输出BMI数值和胖瘦等级</strong></p><p>（1）格式化输出BMI数值和胖瘦等级—任务分解</p><p>步骤一：格式化输出BMl，利用print0函数的format形式保留小数点后两位输出身高、体重、BMI具体数值。</p><p>步骤二：格式化输出胖瘦等级，利用print()函数format形式格式化输出胖瘦等级。</p><p>（2）格式化输出BMI数值和胖瘦等级—任务代码实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;您的体重:&#123;0:.2f&#125;,身高:&#123;2:.2f&#125;,BMI:&#123;2:,2f&#125;&quot;</span>.<span class="built_in">format</span>(w,h,BMI))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;BMI 指标为:国际&#x27;&#123;0&#125;&#x27;,国内&#x27;&#123;1&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(who,nat))</span><br></pre></td></tr></table></figure><p>第一行输出了身高，体重，BMI指数</p><p>第二行使用print函数格式化输出国内、国际胖瘦等级</p><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请输入您的体重，单位为kg：<span class="number">60</span></span><br><span class="line">请输入您的身高，单位为m：<span class="number">1.7</span></span><br><span class="line">您的体重：<span class="number">60.00</span>身高：<span class="number">170.</span>BM:<span class="number">20.76</span></span><br><span class="line">BMI指标为国际正常，国内正常</span><br></pre></td></tr></table></figure><h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><table><thead><tr><th>算数运算符</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>加 - 两个对象相加</td></tr><tr><td>-</td><td>减 - 一个数减去另一个数</td></tr><tr><td>*</td><td>乘 - 两个数相乘</td></tr><tr><td>%</td><td>取模 - 返回除法的余数</td></tr><tr><td>**</td><td>幂 - 返回a的b次幂</td></tr><tr><td>/</td><td>除 - a除以b</td></tr><tr><td>//</td><td>整除 - 返回商的整数部分(向下取整)</td></tr></tbody></table><p>(1)算数运算符列表</p><p>假设a = 10，b = 20，c = 3</p><table><thead><tr><th>算数运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加 - 两个对象相加</td><td>a + b 输出结果 30</td></tr><tr><td>-</td><td>减 - 一个数减去另一个数</td><td>a - b 输出结果 -10</td></tr><tr><td>*</td><td>乘 - 两个数相乘</td><td>a * b 输出结果 200</td></tr><tr><td>%</td><td>取模 - 返回除法的余数</td><td>b % a 输出结果 0</td></tr><tr><td>**</td><td>幂 - 返回a的b次幂</td><td>a ** c 输出结果 1000</td></tr><tr><td>/</td><td>除 - a除以b</td><td>b / a 输出结果 2</td></tr><tr><td>//</td><td>整除 - 返回商的整数部分(向下取整)</td><td>b // c 输出结果 6</td></tr></tbody></table><p>(2)算数运算符—示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a,b,c = <span class="number">2</span>,<span class="number">10</span>,<span class="number">0</span></span><br><span class="line">c = a / b</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a/b的值为：&quot;</span>,c)</span><br><span class="line">c = a // b</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a//b的值为：&quot;</span>，c)</span><br><span class="line">c = b**a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b**a的值为：&quot;</span>,c)</span><br><span class="line">c = a % b</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a%b的值为：&quot;</span>，c)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a/b的值为：<span class="number">0.2</span></span><br><span class="line">a//b的值为：<span class="number">0</span></span><br><span class="line">b**a的值为：<span class="number">100</span></span><br><span class="line">a%b的值为：<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>(1)定义</p><p>比较运算符，也称关系运算符，用于对常量、变量或表达式的结果进行大小比较。如果这种比较是成立的，则返回True（真），反之则返回False（假）。</p><p>(2)比较运算符列表</p><p>假设a = 10，b = 20</p><table><thead><tr><th>比较运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>==</td><td>等于—比较对象是否相等</td><td>a == b返回False</td></tr><tr><td>!=</td><td>不等于—比较两个对象是否不相等</td><td>a != b返回True</td></tr><tr><td>&lt;</td><td>小于—返回a是否小于b</td><td>a &lt; b 返回True</td></tr><tr><td>&gt;</td><td>大于—返回a是否大于b</td><td>a &gt; b 返回False</td></tr><tr><td>&gt;=</td><td>大于等于—返回a是否大于等于b</td><td>a &gt;= b 返回False</td></tr><tr><td>&lt;=</td><td>小于等于—返回a是否小于等于b</td><td>a &lt;= b 返回True</td></tr></tbody></table><p>(3)比较运算符—示例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;89是否大于100：&quot;</span>,<span class="number">89</span> &gt; <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;24是否小于等于76：&quot;</span>,<span class="number">24</span> &lt;= <span class="number">76</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;86.5是否等于86.5：&quot;</span>,<span class="number">86.5</span> == <span class="number">86.5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;34不等于38：&quot;</span>,<span class="number">34</span> != <span class="number">38</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">89</span>是否大于<span class="number">100</span>：<span class="literal">False</span></span><br><span class="line"><span class="number">24</span>是否小于等于<span class="number">76</span>：<span class="literal">True</span></span><br><span class="line"><span class="number">86.5</span>是否等于<span class="number">86.5</span>：<span class="literal">True</span></span><br><span class="line"><span class="number">34</span>不等于<span class="number">38</span>：<span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>(1)赋值运算符定义</p><p>赋值运算符用来把右侧的值传递给左侧的变量（或者常量）；可以直接将右侧的值交给左侧的变量，也可以进行某些运算后再交给左侧的变量，比如加减乘除、逻辑运算等。</p><p>(2)赋值运算符列表</p><table><thead><tr><th>赋值运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符</td><td>c=a+b将a+b的运算结果赋值为c</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>c+=a等效于c=c+a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c-=a等效于c=c-a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c*=等效于c=c *a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c/=a等效于c=c/a</td></tr><tr><td>%=</td><td>取模赋值运算符</td><td>c%=a等效于c=c%a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c**=a等效于c=c**a</td></tr><tr><td>//=</td><td>取整除赋值运符</td><td>c//=a等效于c=c//a</td></tr></tbody></table><p>(3)赋值运算符—示例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a,c=<span class="number">8</span>,<span class="number">2</span></span><br><span class="line">c+=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c+a的值为：&quot;</span>,c)</span><br><span class="line">c*=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c*a的值为&quot;</span>,c)</span><br><span class="line">c/=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c/a的值为：&quot;</span>,c)</span><br><span class="line">c%=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c%a的值为：&quot;</span>,c)</span><br><span class="line">c**=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c**a的值为：&quot;</span>,c)</span><br><span class="line">c//=a</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c//a的值为：&quot;</span>,c)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c+a的值为：<span class="number">10</span></span><br><span class="line">c*a的值为：<span class="number">80</span></span><br><span class="line">c/a的值为：<span class="number">10.0</span></span><br><span class="line">c%a的值为：<span class="number">2.0</span></span><br><span class="line">c**a的值为：<span class="number">256.0</span></span><br><span class="line">c//a的值为：<span class="number">32.0</span></span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>(1)逻辑运算符定义：</p><p>Python中的表达式用来判断表达式的真假值。</p><p>(2)逻辑运算符列表：</p><table><thead><tr><th>运算符</th><th>逻辑表达式</th><th>描述</th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>布尔“与”-如果x为False，x and y返回False，否则它返回y的计算值。</td></tr><tr><td>or</td><td>x or y</td><td>布尔“或”-如果x是非0，它返回x的值，否则它返回y的计算值。</td></tr><tr><td>not</td><td>not x</td><td>布尔“非”-如果x为True，返回False，如果x为False，它返回True。</td></tr></tbody></table><p>(3)逻辑运算符—示例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a,b=<span class="number">10</span>,<span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> a <span class="keyword">and</span> b:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1 - 变量 a 和 b 都为True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1 - 变量 a 和 b 有一个不为True&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> - 变量 a 和 b 都为<span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>(1)位运算符定义：</p><p>Python中的位运算符是把数字转化为二进制逐位来进行计算的。<br>例如：变量a为60，b为13，二进制格式如下：</p><p>a=0011 1100</p><p>b=0000 1101</p><p>a&amp;b= 0000 1100        逐位相与</p><p>a|b=0011 1101          逐位相或</p><p>a^b=0011 0001          逐位异或</p><p>~a=1100 0011            逐位取反</p><p>(2)位运算符列表：</p><table><thead><tr><th align="center">位操作运算符</th><th>描述</th></tr></thead><tbody><tr><td align="center">&amp;</td><td>按位与运算符：参与运算的两个值，如果两个相应的位都为1，则该位的结果为1，否则为0</td></tr><tr><td align="center">|</td><td>按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1</td></tr><tr><td align="center">^</td><td>按位异或运算符：当两对应的二进位相异时，结果为1</td></tr><tr><td align="center">~</td><td>按位取反运算符：对数据的每个二进位取反，即把1变为0，把0变为1</td></tr><tr><td align="center">&lt;&lt;</td><td>左移动运算符：把左边运算数的各二进位全部左移若干位，由&lt;&lt;右边的数字指定了移动的位数，高位丢弃，低位补0</td></tr><tr><td align="center">&gt;&gt;</td><td>右移动运算符：把左边运算符的各二进位全部右移若干位，&gt;&gt;右边的数字指定了移动的位数</td></tr></tbody></table><p>(3)位运算符—示例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">60</span>       <span class="comment">#60=00111100</span></span><br><span class="line">b=<span class="number">13</span>       <span class="comment">#13=00001101</span></span><br><span class="line">c=a&amp;b;     <span class="comment">#12=00001100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a&amp;b的值为:&quot;</span>,c)</span><br><span class="line">c=a|b;     <span class="comment">#61=00111101</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a|b的值为:&quot;</span>,c)</span><br><span class="line">c=a&gt;&gt;<span class="number">2</span>     <span class="comment">#00001111</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a&gt;&gt;2的值为:&quot;</span>,c)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a&amp;b的值为:<span class="number">12</span></span><br><span class="line">a|b的值为:<span class="number">61</span></span><br><span class="line">a&gt;&gt;<span class="number">2</span>的值为:<span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p>(1)运算符优先级列表</p><p>列表从上到下优先级依次降级：</p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">**</td><td align="center">指数(最高优先级)</td></tr><tr><td align="center">~、+、-</td><td align="center">按位翻转、一元加号和减号</td></tr><tr><td align="center">*、/、%、//</td><td align="center">乘、除、取模和取整除</td></tr><tr><td align="center">+、-</td><td align="center">加法减法</td></tr><tr><td align="center">&gt;&gt;、&lt;&lt;</td><td align="center">右移、左移运算符</td></tr></tbody></table><p>(2)运算符优先级—示例1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a.b,c,d,e=<span class="number">20</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">0</span></span><br><span class="line">e=(a+b)*c/d                              <span class="comment">#（30*15）/5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;(a+b)*c/d运算结果为:&quot;</span>,e)</span><br><span class="line">e=((a+b)*c)/d                            <span class="comment">#（30*15）/5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;((a+b）*c)/d运算结果为:&quot;</span>,e)</span><br><span class="line">e=(a+b)*(c/d);                           <span class="comment">#（30）*（15/5）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;(a+b）*（c/d）运算结果为:&quot;</span>,e）</span><br><span class="line">e=a+(b*c)/d;                             <span class="comment">#20+（150/5）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a+(b*c)/d运算结果为:&quot;</span>,e）</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(a+b)*c/d运算结果为:<span class="number">90.0</span></span><br><span class="line">((a+b）*c)/d运算结果为:<span class="number">90.0</span></span><br><span class="line">(a+b）*（c/d）运算结果为:<span class="number">90.0</span></span><br><span class="line">a+(b*c)/d运算结果为:<span class="number">50.0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言</title>
      <link href="2022/02/14/C/C%E8%AF%AD%E8%A8%80/"/>
      <url>2022/02/14/C/C%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入金额（元）:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;price);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> change = <span class="number">100</span> - price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找您%d元\n&quot;</span>, change);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>int price = 0；</p><p>这一行：，定义了一个变量。变量的名字是price，类型是int，初始值是0。</p><p>变量是一个保存数据的地方，当我们需要在程序里保存数据时，比如上面的例子中要记录用户输入的价格，就需要一个变量来保存它。用一个变量保存了数据，它才能参加到后面的计算中，比如计算找零。</p><h1 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h1><p>变量定义的一般形式：</p><p>&lt;<code>类型名称</code>&gt;&lt;<code>变量名称</code>&gt;;</p><ol><li>int price;</li><li>int amount;</li><li>int price,amount;</li></ol><h1 id="变量的名字"><a href="#变量的名字" class="headerlink" title="变量的名字"></a>变量的名字</h1><ol><li>变量需要一个名字，变量的名字是一种“<code>标识符</code>”，意思是它是用来识别这个和那个的不同的名字。</li><li>标识符有标识符的构造规则。基本的原则是：标识符只能由<code>字母</code>、<code>数字</code>和<code>下划线</code>组成，<code>数字</code>不可以出现在第一个位置上，C语言的关键字（有的地方叫它们保留字）不可以用做标识符。</li></ol><h1 id="C语言保留字"><a href="#C语言保留字" class="headerlink" title="C语言保留字"></a>C语言保留字</h1><p><code>类型说明保字</code>:int,long,short,float,double,char,unsigned,signed,const,void,volatile,enum,struct,union<br><code>语句定义保留字</code>:if,else,goto,switch,case,do,while,for,continue,break,return,default,typedef<br><code>存储类说明保留字</code>:auto,register,extern,static<br><code>长度运算符保留字</code>:sizeof</p><h1 id="赋值和初始化"><a href="#赋值和初始化" class="headerlink" title="赋值和初始化"></a>赋值和初始化</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入金额（元）&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;price);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> change = <span class="number">100</span> - price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找您%d元\n&quot;</span>, change);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>int price=0;</li><li>这一行，定义了一个变量。变量的名字是price，类型是int，初始值是0。</li><li>price=0是一个式子，这里的“=”是一个赋值运算符，表示将“=”右边的值赋给左边的变量。</li><li>C是一种有类型的语言，所有的变量在使用之前必须定义或声明，所有的变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，变量中只能存放指定类型的数据，程序运行过程中也不能改变变量的类型。</li></ol><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><p>和数学不同，a=b在数学中表示关系，即a和b的值一样；而在程序设计中，a=b表示要求计算机做一个动作：将b的值赋给a。关系是静态的，而动作是动态的。在数学中，a=b和b=a是等价的，而在程序设计中，两者的意思完全相反</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>当赋值发生在定义变量的时候，就像程序1中的第7行那样，就是变量的初始化。虽然C语言并没有强制要求所有的变量都在定义的地方做初始化，但是所有的变量在第一次被使用（出现在赋值运算符的右边）之前被应该赋值一次。</p><h1 id="变量初始化"><a href="#变量初始化" class="headerlink" title="变量初始化"></a>变量初始化</h1><p>&lt;<code>类型名称</code>&gt;&lt;<code>变量名称</code>&gt;=&lt;<code>初始值</code>&gt;;</p><p>int price = 0;</p><p>int amount = 100;</p><p>组合变量定义的时候，也可以在这个定义中单独给单个变量赋初值，如：</p><p>int price = 0,amount = 100；</p><h1 id="第二个变量"><a href="#第二个变量" class="headerlink" title="第二个变量"></a>第二个变量</h1><p>int change = 100 - price;</p><p>定义了第二个变量change</p><p>并且做了计算</p><h1 id="ANSI-C"><a href="#ANSI-C" class="headerlink" title="ANSI C"></a>ANSI C</h1><p>只能在代码开头的地方定义变量</p><p><code>C99</code></p><figure class="highlight c"><figcaption><span>99</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入金额（元）&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;price);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> change = <span class="number">100</span> - price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找您%d元\n&quot;</span>, change);</span><br></pre></td></tr></table></figure><p><code>ANSI C</code></p><figure class="highlight plaintext"><figcaption><span>C</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   int price = 0;</span><br><span class="line">int change = 0;</span><br><span class="line"></span><br><span class="line">printf(&quot;请输入金额（元）&quot;);</span><br><span class="line">scanf(&quot;%d&quot;,&amp;price);</span><br><span class="line"></span><br><span class="line">int change = 100 - price;</span><br><span class="line"></span><br><span class="line">printf(&quot;找您%d元\n&quot;, change);</span><br></pre></td></tr></table></figure><h1 id="读整数"><a href="#读整数" class="headerlink" title="读整数"></a>读整数</h1><p>scanf(“%d”,&amp;price);</p><p>要求<code>scanf</code>这个函数读入下一个整数，读到的结果赋值给变量<code>price</code></p><p>小心<code>price</code> 前边的<code>&amp;</code></p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>int change = 100 - price;</p><p>固定不变的数，是常数。直接写在程序里，我们称作直接量（literal）。</p><p>更好的方式是定义一个常量：</p><p>const int AMOUNT = 100;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> AMOUNT = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入金额（元）&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;price);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> change = AMOUNT - price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找您%d元\n&quot;</span>, change);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="const"><a href="#const" class="headerlink" title="const"></a>const</h1><ol><li><code>const</code>是一个修饰符，加在<code>int</code>的前面，用来给这个变量加上一个<code>const</code>（不变的）的属性。这个<code>const</code>的属性表示这个变量的值一旦初始化，就不能再修改了。</li><li>int change =AMOUNT - price;</li><li>如果你试图对常量做修改，把它放在赋值运算符的左边，就会被编译器发现，指出为一个错误。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> amount = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入金额（元）：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;price);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入票面：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;amount);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> change = amount - price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找您%d元\n&quot;</span>, change);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="plus-c"><a href="#plus-c" class="headerlink" title="plus.c"></a>plus.c</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个整数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>,a,b,a+b);</span><br></pre></td></tr></table></figure><p>美国人固执地使用英制计量单位，他们习惯用几尺几寸（英尺英寸）来报自己的身高。如果遇到一个美国人告诉你他是5英尺7，他的身高应该是一米几呢？</p><p>计算身高的程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请分别输入身高的英尺和英寸，&quot;</span><span class="string">&quot;如输入\&quot;5 7\&quot;代表5英尺7英寸：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> foot;</span><br><span class="line"><span class="keyword">int</span> inch;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;foot,&amp;inch);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;身高是%f米。\n&quot;</span>,((foot + inch / <span class="number">12</span>) * <span class="number">0.3048</span>));</span><br></pre></td></tr></table></figure><h1 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h1><p>带小数点的数值。浮点这个词的本意就是指小数点是浮动的，是计算机内部表达非整数（包含分数和无理数）的一种方式。另一种方式叫做定点数，不过在C语言中你不会遇到定点数。人们借用浮点数这个词来表达所有的带小数点的数。</p><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><ol><li>(foot + inch / 12) * 0.3048;</li><li>(foot + inch / 12.0) * 0.3048;</li><li>当浮点数和整数放到一起运算时，C会将整数转换成浮点数，然后进行浮点数的运算。</li></ol><h1 id="double"><a href="#double" class="headerlink" title="double"></a>double</h1><p>inch是定义为int类型的变量，如果把int换成double，我们就把它改为double类型的浮点数变量了。<br>double的意思是“双”，它本来是“双精度浮点数”的第一个单词，人们用来表示浮点数类型。除了double，还有float（意思就是浮点！）表示单精度浮点数。</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ol><li>整数：<ol><li>int</li><li>printf(“%d”,…)</li><li>scanf(“%d”,…)</li></ol></li><li>带小数点的数<ol><li>double</li><li>printf(“%f”,…)</li><li>scanf(“%lf”,…)</li></ol></li></ol><h1 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h1><p>整数类型不能表达有小数部分的数，整数和整数的运算结果还是整数。计算机里会有纯粹的整数这种奇怪的东西，是因为整数的运算比较快，而且占地方也小。其实人们日常生活中大量做的还是纯粹整数的计算，所以整数的用处还是很大的</p><h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><p>一个表达式是一系列运算符和算子的组合，用来计算一个值</p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ol><li>运算符 (operator) 是指进行运算的动作，比如加法运算符 “+” ，减法运算符 “-” 。</li><li>算子 (operand) 是指参与运算的值，这个值可能是常数，也可能是变量，还可能是一个方法的返回值</li></ol><h1 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h1><table><thead><tr><th align="center">四则运算</th><th align="center">C符号</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">+</td><td align="center">加</td></tr><tr><td align="center">-</td><td align="center">-</td><td align="center">减</td></tr><tr><td align="center">×</td><td align="center">*</td><td align="center">乘</td></tr><tr><td align="center">÷</td><td align="center">/</td><td align="center">除</td></tr><tr><td align="center"></td><td align="center">%</td><td align="center">取余</td></tr><tr><td align="center">()</td><td align="center">()</td><td align="center">括号</td></tr></tbody></table><p><strong>%表示取两个数相处以后的余数。</strong></p><h1 id="计算时间差"><a href="#计算时间差" class="headerlink" title="计算时间差"></a>计算时间差</h1><p>输入两个时间，每个时间分别输入小时和分钟的值，然后输出两个时间之间的差，也以几小时几分表示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> hour1, minute1;</span><br><span class="line"><span class="keyword">int</span> hour2, minute2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;hour1,&amp;minute1);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;hour2,&amp;minute2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t1 = hour1 * <span class="number">60</span> + minuter1;</span><br><span class="line"><span class="keyword">int</span> t2 = hour2 * <span class="number">60</span> + minuter2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t = t2 - t1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;时间相差是%d小时%d分。&quot;</span>,t/<span class="number">60</span>,t%<span class="number">60</span>);</span><br></pre></td></tr></table></figure><p>hourl*60+minte l—&gt;转换为分钟单位</p><p>t/60—&gt;小时部分；t%60—&gt;分钟</p><h1 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h1><h2 id="求平均值"><a href="#求平均值" class="headerlink" title="求平均值"></a>求平均值</h2><p>写一个程序，输入两个整数，输出它们的平均值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a,&amp;b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> c = (a+b)/<span class="number">2.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d和%d的平均值=%f\n&quot;</span>,a,b,c);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加原生JS实现页脚计时器</title>
      <link href="2022/01/04/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0%E9%A1%B5%E8%84%9A%E8%AE%A1%E6%97%B6%E5%99%A8/"/>
      <url>2022/01/04/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0%E9%A1%B5%E8%84%9A%E8%AE%A1%E6%97%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>新建 <code>[Blogroot]\themes\butterfly\source\js\runtime.js</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> create_time = <span class="built_in">Math</span>.round(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;2021-05-29 00:00:00&#x27;</span>).getTime() / <span class="number">1000</span>); <span class="comment">//在此行修改建站时间</span></span><br><span class="line">  <span class="keyword">let</span> timestamp = <span class="built_in">Math</span>.round((<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()) / <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> second = timestamp - create_time;</span><br><span class="line">  <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">//格式规范化，个位数前面加0</span></span><br><span class="line">  <span class="keyword">var</span> nol = <span class="function"><span class="keyword">function</span>(<span class="params">h</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h&gt;<span class="number">9</span>?h:<span class="string">&#x27;0&#x27;</span>+h;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">0</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//年</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">1</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//天</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">3600</span>) &#123;</span><br><span class="line">    time[<span class="number">2</span>] = nol(<span class="built_in">parseInt</span>(second / <span class="number">3600</span>));</span><br><span class="line">    second %= <span class="number">3600</span>;</span><br><span class="line">  &#125;<span class="comment">//时</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">    time[<span class="number">3</span>] = nol(<span class="built_in">parseInt</span>(second / <span class="number">60</span>));</span><br><span class="line">    second %= <span class="number">60</span>;</span><br><span class="line">  &#125;<span class="comment">//分</span></span><br><span class="line">  <span class="keyword">if</span> (second &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    time[<span class="number">4</span>] = nol(second);</span><br><span class="line">  &#125;<span class="comment">//秒</span></span><br><span class="line">  <span class="comment">//早上7点到晚上10点营业</span></span><br><span class="line">  <span class="keyword">if</span> ((<span class="built_in">Number</span>(time[<span class="number">2</span>])&lt;<span class="number">22</span>) &amp;&amp; (<span class="built_in">Number</span>(time[<span class="number">2</span>])&gt;<span class="number">7</span>))&#123;</span><br><span class="line">    currentTimeHtml =<span class="string">&quot;&lt;img class=&#x27;boardsign&#x27; src=&#x27;https://img.shields.io/badge/糖果屋-营业中-6adea8?style=social&amp;logo=cakephp&#x27; title=&#x27;距离百年老店也就差不到一百年~&#x27;&gt;&lt;div id=&#x27;runtime&#x27;&gt;&quot;</span> + time[<span class="number">0</span>] + <span class="string">&#x27; YEAR &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; DAYS &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="comment">//徽标内容参考站内教程</span></span><br><span class="line">  <span class="comment">//其余时间打烊</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    currentTimeHtml =<span class="string">&quot;&lt;img class=&#x27;boardsign&#x27; src=&#x27;https://img.shields.io/badge/糖果屋-打烊了-6adea8?style=social&amp;logo=coffeescript&#x27; title=&#x27;这个点了应该去睡觉啦，熬夜对身体不好哦&#x27;&gt;&lt;div id=&#x27;runtime&#x27;&gt;&quot;</span> + time[<span class="number">0</span>] + <span class="string">&#x27; YEAR &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; DAYS &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; : &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27;&lt;/div&gt;&#x27;</span>; <span class="comment">//徽标内容参考站内教程</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//覆写挂载标签的内容</span></span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&quot;workboard&quot;</span>).innerHTML = currentTimeHtml;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>修改 <code>[Blogroot]\themes\butterfly\layout\includes\footer.pug</code>, 添加计时器的挂载标签：</li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  if theme.footer.copyright</span><br><span class="line">    .framework-info</span><br><span class="line">      span= _p(&#x27;footer.framework&#x27;) + &#x27; &#x27;</span><br><span class="line">      a(href=&#x27;https://hexo.io&#x27;)= &#x27;Hexo&#x27;</span><br><span class="line">      span.footer-separator |</span><br><span class="line">      span= _p(&#x27;footer.theme&#x27;) + &#x27; &#x27;</span><br><span class="line">      a(href=&#x27;https://github.com/jerryc127/hexo-theme-butterfly&#x27;)= &#x27;Butterfly&#x27;</span><br><span class="line">  if theme.footer.custom_text</span><br><span class="line">    .footer_custom_text!=`$&#123;theme.footer.custom_text&#125;`</span><br><span class="line"><span class="addition">+ #workboard</span></span><br><span class="line"><span class="addition">+ script(async src=url_for(theme.CDN.runtime))</span></span><br></pre></td></tr></table></figure><ol start="3"><li>新建 <code>[Blogroot]\themes\butterfly\source\css\_layout\runtime.styl</code></li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*电子钟字体*/</span></span><br><span class="line"><span class="keyword">@font-face</span></span><br><span class="line">  <span class="attribute">font-family</span> <span class="string">&#x27;UnidreamLED&#x27;</span></span><br><span class="line">  <span class="attribute">src</span> url(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/Akilarlxh/Akilarlxh.github.io@v3.3.3_3/clock/fonts/UnidreamLED.ttf&#x27;</span>)</span><br><span class="line">  <span class="attribute">font-display</span> swap</span><br><span class="line"><span class="comment">//页脚计时器</span></span><br><span class="line">div<span class="selector-id">#runtime</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">180px</span></span><br><span class="line">  <span class="attribute">margin</span> auto</span><br><span class="line">  <span class="attribute">color</span> white</span><br><span class="line">  <span class="attribute">padding</span>-inline <span class="number">5px</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">10px</span></span><br><span class="line">  <span class="attribute">background-color</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.7</span>)</span><br><span class="line">  <span class="attribute">font-family</span> <span class="string">&#x27;UnidreamLED&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 夜间全局透明度</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  div<span class="selector-id">#runtime</span></span><br><span class="line">      <span class="attribute">color</span> rgb(<span class="number">40</span>, <span class="number">180</span>, <span class="number">200</span>)</span><br><span class="line">      <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">28</span>, <span class="number">69</span>, <span class="number">218</span>, <span class="number">0.71</span>)</span><br><span class="line">      <span class="attribute">animation</span> flashlight <span class="number">1s</span> linear infinite alternate</span><br><span class="line"><span class="keyword">@keyframes</span> flashlight</span><br><span class="line">  from</span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgb(<span class="number">20</span>, <span class="number">120</span>, <span class="number">210</span>)</span><br><span class="line">  to</span><br><span class="line">    <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> rgb(<span class="number">20</span>, <span class="number">120</span>, <span class="number">210</span>)</span><br></pre></td></tr></table></figure><ol start="4"><li>修改<code>_config.butterfly.yml</code>, 添加 CDN 链接：</li></ol><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  CDN:</span><br><span class="line">    # main</span><br><span class="line">    main_css: /css/index.css</span><br><span class="line">    jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><br><span class="line">    main: /js/main.js</span><br><span class="line">    utils: /js/utils.js</span><br><span class="line">    # 页脚计时器</span><br><span class="line"><span class="addition">+   runtime: /js/runtime.js</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加音乐插件</title>
      <link href="2022/01/03/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/"/>
      <url>2022/01/03/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><p>在<code>百度</code>、<code>知乎</code>、<code>DNS</code>上查询了如何使用 <code>aplayer插件</code>给自己的博客添加<code>音乐播放器</code>，体验了一段时间后觉得该播放器应用在在<code>单一页面</code>中使用效果挺好。但如果想作为<code>博客背景音乐播放器</code>还是有很大的<code>局限性</code>，其中最重要的一点是因为博客<code>不支持pjax</code> 导致每次切换页面后音乐都会<code>从头播放</code>体验很不好。</p><h1 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h1><h2 id="梨花带雨播放器"><a href="#梨花带雨播放器" class="headerlink" title="梨花带雨播放器"></a>梨花带雨播放器</h2><p>上面说 <code>aplayer</code> 用作<code>背景音乐</code>存在<code>局限性</code>，下面这款播放器解决该局限性的方法是<code>断点续播</code>。</p><p>点击进入播放器<a href="https://music.xingyaox.com/">官网</a></p><h2 id="注册并登录"><a href="#注册并登录" class="headerlink" title="注册并登录"></a>注册并登录</h2><ol><li>点击<a href="https://music.xingyaox.com/admin/#/user/login">这里</a>开始注册，输入<code>用户名</code>、<code>密码</code>等信息：</li></ol><p><a href="https://imgtu.com/i/TH5QbD"><img src="https://s4.ax1x.com/2022/01/03/TH5QbD.png" alt="TH5QbD.png"></a></p><p>注意保护<code>个人隐私</code>安全！</p><ol start="2"><li><p>点击<code>登入</code>：</p></li><li><p>点击<code>+播放器</code>添加播放器，输入播放器名称：</p></li></ol><p><a href="https://imgtu.com/i/THIksf"><img src="https://s4.ax1x.com/2022/01/03/THIksf.png" alt="+播放器"></a></p><p><a href="https://imgtu.com/i/THIBy6"><img src="https://s4.ax1x.com/2022/01/03/THIBy6.png" alt="输入播放器名称"></a></p><h2 id="配置播放器"><a href="#配置播放器" class="headerlink" title="配置播放器"></a>配置播放器</h2><ol><li>输入<code>授权域名</code>：</li></ol><p><a href="https://imgtu.com/i/THIqYj"><img src="https://s4.ax1x.com/2022/01/03/THIqYj.png" alt="授权域名"></a></p><ol start="2"><li><p>可以使用<code>歌单广场</code>上的歌曲，也可以在<code>主页</code>中的<code>控制面板</code>里绑定<code>网易云</code>调用自己保存的<code>歌单</code></p></li><li><p>将<code>歌单</code>加入<code>播放器</code></p></li></ol><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ol><li><code>测试</code>播放器：</li></ol><p><a href="https://imgtu.com/i/THTib8"><img src="https://s4.ax1x.com/2022/01/03/THTib8.png" alt="测试播放器"></a></p><p>如果没有该选项，尝试<code>刷新页面</code>解决。</p><p><a href="https://imgtu.com/i/THTDaD"><img src="https://s4.ax1x.com/2022/01/03/THTDaD.png" alt="加载结果"></a></p><p>看自己添加的歌曲是否在<code>歌曲列表</code>中出现。</p><ol start="2"><li>获取 <code>js</code> 代码：</li></ol><p><a href="https://imgtu.com/i/THTxdU"><img src="https://s4.ax1x.com/2022/01/03/THTxdU.png" alt="js代码"></a></p><ol start="3"><li>在博客中使用（<code>butterfly主题</code>为例）：</li></ol><p>查看自己主题的<code>版本号</code>：</p><p><a href="https://imgtu.com/i/THHZXq"><img src="https://s4.ax1x.com/2022/01/03/THHZXq.png" alt="版本号"></a></p><p>若 <code>&lt; v2.3.5</code>：</p><p>配置文件搜索 <code>footer_custom_text:</code>，在后面添加上一步获取的 js 代码，如下图：</p><p><a href="https://imgtu.com/i/THHwND"><img src="https://s4.ax1x.com/2022/01/03/THHwND.png" alt="THHwND.png"></a></p><p>如果本地运行时提示：</p><p><a href="https://imgtu.com/i/THHogs"><img src="https://s4.ax1x.com/2022/01/03/THHogs.png" alt="提示"></a></p><p>在刚刚添加的代码前面加上下面的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;//lib.baomitu.com/jquery/3.3.1/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>添加后</p><p><a href="https://imgtu.com/i/THb8IS"><img src="https://s4.ax1x.com/2022/01/03/THb8IS.png" alt="THb8IS.png"></a></p><p>若 <code>&gt;=v2.3.5</code>：</p><p>主题配置文件搜索 <code>bottom</code>，将复制的<code> js</code> 代码粘贴上去：</p><p><a href="https://imgtu.com/i/THbTiD"><img src="https://s4.ax1x.com/2022/01/03/THbTiD.png" alt="bottom"></a></p><p>注意<code>格式</code>与<code>上图</code>保持一致。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><ol><li>使用 <code>hexo s</code> 命令本地测试时播放器<code>不能使用</code>，因为在前面步骤中播放器<code>绑定了安全域名</code>，而本地使用的域名是 <code>localhost:4000</code>，导致<code>触发限制</code>，执行 <code>hexo d</code> 命令后将其推到<code>远程仓库</code>，即可在自己博客使用啦！</li><li>个人感觉这个功能非常不错，非常喜欢（毕竟播放的我的喜欢的列表，哈哈哈哈哈）</li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo增加搜索功能</title>
      <link href="2022/01/02/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>2022/01/02/hexo%E7%BE%8E%E5%8C%96/hexo%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo增加搜索功能"><a href="#Hexo增加搜索功能" class="headerlink" title="Hexo增加搜索功能"></a>Hexo增加搜索功能</h1><h4 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h4><p>随着时间的推移，个人站点的博客文章会越来越多，那怎么样才能快速找到你印象中的文章呢？增加一个站点内的搜索功能是非常有必要和方便的。</p><h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><p>1.安装搜索：在Hexo的根目录下，打开命令可执行窗口，执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>2.全局配置文件_config.yml，新增如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>3.hexo主题配置文件（\themes\next_config.yml），修改local_search的enable为true：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 美化 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.华为1+X-WLAN技术</title>
      <link href="2021/12/19/%E5%8D%8E%E4%B8%BA1+X/8.%E5%8D%8E%E4%B8%BA1+X-WLAN%E6%8A%80%E6%9C%AF/"/>
      <url>2021/12/19/%E5%8D%8E%E4%B8%BA1+X/8.%E5%8D%8E%E4%B8%BA1+X-WLAN%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-WLAN技术</p><h1 id="无线的基本概念"><a href="#无线的基本概念" class="headerlink" title="无线的基本概念"></a>无线的基本概念</h1><h2 id="无线应用概况"><a href="#无线应用概况" class="headerlink" title="无线应用概况"></a>无线应用概况</h2><p><strong>1、无线网络的概念</strong><br>无线网络（Wireless Network）是采用无线通信技术实现的网络。无线网络既包括允许用户建立远距离无线连接的全球语音和数据网络，也包括对近距离无线连接进行优化的红外线技术及射频技术。无线网络与有线网络的用途十分类似，最大的不同在于传输媒介不同，它利用无线电技术取代网线。无线网络相比有线网络具有以下特点：<br>高灵活性<br>可扩展性强</p><p>无线网络（Wireless Network）是采用无线通信技术实现的网络。无线网络既包括允许用户建立远距离无线连接的全球语音和数据网络，也包括对近距离无线连接进行优化的红外线技术及射频技术。无线网络与有线网络的用途十分类似，最大的不同在于传输媒介不同，它利用无线电技术取代网线。无线网络相比有线网络具有以下特点：<br>高灵活性<br>无线网络使用无线信号通信，网络接入更加灵活，只要有信号的地方都可以随时随地将网络设备接入网络。<br>可扩展性强<br>无线网络终端设备接入数量限制更少，相比有线网络一个接口对应一个设备，无线路由器容许多个无线终端设备同时接入无线网络，因此在网络规模升级时无线网络优势更加明显。</p><p><strong>2、无线网络现状与发展趋势</strong><br>据统计，目前中国网民数量约占全国人口的50%，而通过无线上网的用户超过9成。<br>国家将加快构建高速、移动、安全、泛在的新一代信息基础设施，推进信息网络技术广泛运用，形成万物互联、人机交互、天地一体的网络空间，在城镇热点公共区域推广免费高速无线局域网（WLAN）接入。<br>目前，无线网络在机场、地铁、客运站等公共交通领域、医疗机构、教育园区、产业园区、商城等公共区域实现了重点城市的全覆盖，下一阶段将实现城镇级别的公共区域全覆盖，无线网络规模将持续增长。</p><p>无线网络摆脱了有线网络的束缚，可以在家里、花园、户外、商城等任何一个角落，抱着笔记本电脑、Pad、手机等移动设备，享受网络带来的便捷。据统计，目前中国网民数量约占全国人口的50%，而通过无线上网的用户超过9成，可见，无线网络正改变着人们的工作、生活和学习习惯，人们对无线的依赖性越来越强。<br>国家“十三五”规划明确要求：“加快构建高速、移动、安全、泛在的新一代信息基础设施，推进信息网络技术广泛运用，形成万物互联、人机交互、天地一体的网络空间”，“在城镇热点公共区域推广免费高速无线局域网（WLAN）接入”。目前，无线网络在机场、地铁、客运站等公共交通领域、医疗机构、教育园区、产业园区、商城等公共区域实现了重点城市的全覆盖，下一阶段将实现城镇级别的公共区域全覆盖，无线网络规模将持续增长。</p><p><strong>3、无线局域网的概念</strong><br>无线局域网络是指以无线信道作传输媒介的计算机局域网(Wireless Local Area Network，WLAN)。<br>计算机无线联网方式是有线联网方式的一种补充，它是在有线网的基础上发展起来的，使网上的计算机具有可移动性，能快速、方便地解决以有线方式不易实现的网络信道的连通问题。<br>IEEE802.11协议簇是由电气和电子工程师协会（Institute of Electrical and ElectroSTAs Engineers；IEEE）所定义的无线网络通信的标准，无线局域网基于IEEE802.11协议工作。</p><p>无线局域网络是指以无线信道作传输媒介的计算机局域网(Wireless Local Area Network，WLAN)。<br>计算机无线联网方式是有线联网方式的一种补充，它是在有线网的基础上发展起来的，使网上的计算机具有可移动性，能快速、方便地解决以有线方式不易实现的网络信道的连通问题。<br>IEEE802.11协议簇是由电气和电子工程师协会（Institute of Electrical and ElectroSTAs Engineers；IEEE）所定义的无线网络通信的标准，无线局域网基于IEEE802.11协议工作。</p><p><strong>4、无线局域网的概念</strong></p><p>大家经常说Wi-Fi，那么Wi-Fi和WLAN有什么关系？</p><p>Wi-Fi＝采用IEEE802.11技术的WLAN</p><p>如果询问一般用户什么是IEEE802.11无线网络，他们可能会感到迷惑和不解，因为多数人习惯将这项技术称为Wi-Fi。Wi-Fi是一个市场术语，世界各地的人们使用“Wi-Fi”作为801.11无线网络的代名词。</p><h2 id="无线协议标准"><a href="#无线协议标准" class="headerlink" title="无线协议标准"></a>无线协议标准</h2><p><strong>1、IEEE802.11a</strong><br>工作在5.8GHz频段<br>最大 54Mbit/s 的数据传输速率<br>物理层速率可达54Mbit/s<br>传输层可达25Mbit/s<br>载波调制技术</p><p><a href="https://imgtu.com/i/TFsh2q"><img src="https://s4.ax1x.com/2021/12/17/TFsh2q.png" alt="TFsh2q.png"></a></p><p>IEEE 无线网络标准，指定最大 54Mbit/s 的数据传输速率和 5.8GHz 的工作频段。IEEE802.11a的传输技术为多载波调制技术。IEEE802.11a标准是已在办公室、家庭、宾馆、机场等众多场合得到广泛应用的IEEE802.11b无线联网标准的后续标准。它工作在5.8GHz频带，物理层速率可达54Mb/s，传输层可达25Mbit/s，可提供25Mbit/s的无线ATM接口和10Mbit/s的以太网无线帧结构接口；支持语音、数据、图像业务；一个扇区可接入多个用户，每个用户可带多个用户终端。<br>工作在5.8GHz频段的时候，中国WLAN工作的频率范围是5.725.8GHz~5.850GHz。在此频率范围内又划分出5个信道,每个信道的中心频率相隔20MHz。</p><p><strong>2、IEEE802.11b</strong><br>IEEE802.11b 运作模式基本分为两种：<br>点对点模式(AD-HOC Mode)<br>基本模式（Infrastructure Mode）。<br>工作在 2.4GHz频段<br>1、 2、5.5 &amp; 11Mbit/s 数据速率<br>扩展的 Direct Sequencing Spread Spectrum (DSSS)<br>标准的 Complementary Code Keying (CCK) 调制 </p><p><a href="https://imgtu.com/i/TFsba4"><img src="https://s4.ax1x.com/2021/12/17/TFsba4.png" alt="TFsba4.png"></a></p><p>IEEE802.11b 运作模式基本分为两种：点对点模式(AD-HOC Mode)和基本模式（Infrastructure Mode）。点对点模式是指站点（如无线网卡）和站点之间的通信方式。它提供 11Mbit/s 传输速率，扩展的 Direct Sequencing Spread Spectrum (DSSS) ，用标准的 Complementary Code Keying (CCK) 调制 ，1、 2、5.5 &amp; 11Mbit/s 数据速率，工作在 2.4GHz，支持13个信道、3个不重叠信道(1、6、11)。</p><p><strong>3、IEEE802.11g</strong><br>工作在2.4GHz频段<br>使用正交频分复用（OFDM）调制技术<br>数据传输速率提高到20Mbit/s以上<br>保障了后向兼容性</p><p><a href="https://imgtu.com/i/TFykid"><img src="https://s4.ax1x.com/2021/12/17/TFykid.png" alt="TFykid.png"></a></p><p>IEEE802.11工作组近年来开始定义新的物理层标准IEEE802.11g。与以前的IEEE802.11协议标准相比，IEEE802.11g草案有以下两个特点：在2.4GHz频段使用正交频分复用（OFDM）调制技术，使数据传输速率提高到20Mbit/s以上；能够与IEEE802.11b的WiFi系统互联互通，可共存于同一AP的网络里，从而保障了后向兼容性。这样原有的WLAN系统可以平滑地向高速WLAN过渡，延长了IEEE802.11b产品的使用寿命，降低了用户的投资。2003年7月IEEE802.11工作组批准了IEEE802.11g草案，该标准成为人们关注的新焦点。</p><p><strong>4、IEEE802.11n</strong><br>工作在2.4GHz、5.8GHz频段<br>最大传输速率300~600Mbit/s<br>OFDM调制技术<br>MIMO技术（Multiple Input Multiple Output）<br>协议兼容<br>向下兼容IEEE802.11b/g/a协议</p><p>IEEE802.11n是在IEEE802.11g和IEEE802.11a之上发展起来的一项技术，最大的特点是速率提升，理论速率最高可达600Mbit/s（目前业界主流为300Mbit/s）。IEEE802.11n可工作在2.4GHz和5.8GHz两个频段，可向后兼容IEEE802.11a/b/g。</p><p><strong>5、IEEE802.11ac</strong><br>工作在5.8GHz频段<br>最大传输速率6933Mbit/s<br>OFDM调制技术<br>MIMO技术（Multiple Input Multiple Output）<br>运行模式：极高吞吐率（Very High Throughput）<br>兼容性<br>继续工作在5.0GHz频段上以保证向下兼容性，但数据传输通道会大大扩充，20MHz的基础上增至40MHz或者80MHz，甚至有可能达到160MHz</p><p>IEEE802.11ac是IEEE802.11n的继承者。它采用并扩展了源自IEEE802.11n的空中接口（Air Interface）概念，包括更宽的RF带宽（提升至160MHz）、更多的MIMO空间流（Spatial Streams）（增加到 8）、多用户的 MIMO，以及更高阶的调制（Modulation）（达到 256QAM）。</p><p><strong>6、IEEE802.11ax</strong><br/>也称为高效无线网络(High-Efficiency Wireless-HEW)<br>IEEE802.11ax标准在物理层导入了多项大幅变更<br>依旧可向下兼容于IEEE802.11a/b/g/n与ac设备</p><p>IEEE802.11ax，也称为高效无线网络(High-Efficiency Wireless-HEW)，通过一系列系统特性和多种机制增加系统容量，通过更好的一致覆盖和减少空口介质拥塞来改善Wi-Fi网络的工作方式，使用户获得最佳体验;尤其在密集用户环境中，为更多的用户提供一致和可靠的数据吞吐量，其目标是将用户的平均吞吐量提高至少4倍。也就是说基于IEEE802.11ax的Wi-Fi网络意味着前所未有的高容量和高效率。<br>IEEE802.11ax标准在物理层导入了多项大幅变更。然而，它依旧可向下兼容于IEEE802.11a/b/g/n与ac设备。正因如此，IEEE802.11ax STA能与旧有STA进行数据传送和接收，旧有客户端也能解调和译码IEEE802.11ax封包表头(虽然不是整个IEEE802.11ax封包)，并于IEEE802.11ax STA传输期间进行轮询。</p><p><strong>7、EEE802.11协议的频率、最大传输速率表</strong></p><table><thead><tr><th>协议</th><th>兼容性</th><th>频率</th><th>理论最高速率</th></tr></thead><tbody><tr><td>IEEE802.11a</td><td></td><td>5.8GHz</td><td>54Mbit/s</td></tr><tr><td>IEEE802.11b</td><td></td><td>2.4GHz</td><td>11 Mbit/s</td></tr><tr><td>IEEE802.11g</td><td>兼容IEEE802.11b</td><td>2.4GHz</td><td>54 Mbit/s</td></tr><tr><td>IEEE802.11n</td><td>兼容IEEE802.11a/b/g</td><td>2.4GHz或5.8GHz</td><td>600 Mbit/s</td></tr><tr><td>IEEE802.11ac</td><td>兼容IEEE802.11a/n</td><td>5.8GHz</td><td>6.9Gbit/s</td></tr><tr><td>IEEE802.11ax</td><td>兼容IEEE802.11a/b/g/n/ac</td><td>2.4GHz或5.8GHz</td><td>9.6Gbit/s</td></tr></tbody></table><h2 id="无线射频与AP天气"><a href="#无线射频与AP天气" class="headerlink" title="无线射频与AP天气"></a>无线射频与AP天气</h2><p><strong>1、2.4GHz频段</strong><br>当AP工作在2.4GHz频段的时候，AP工作的频率范围是2.4GHz~2.4835.8GHz。在此频率范围内又划分出14个信道。每个信道的中心频率相隔5MHz，每个信道可供占用的带宽为22MHz。</p><p><a href="https://imgtu.com/i/TFy5Yd"><img src="https://s4.ax1x.com/2021/12/17/TFy5Yd.png" alt="TFy5Yd.png"></a></p><p><strong>2、5.8GHz频段</strong><br>当AP工作在5.8GHz频段的时候，中国WLAN工作的频率范围是5.725.8GHz~5.850GHz。在此频率范围内又划分出5个信道，每个信道的中心频率相隔20MHz。</p><p><a href="https://imgtu.com/i/TFyvkQ"><img src="https://s4.ax1x.com/2021/12/17/TFyvkQ.png" alt="TFyvkQ.png"></a></p><p><strong>3、5.8GHz频段信道与频率表</strong></p><table><thead><tr><th>Channel</th><th>Transmit</th></tr></thead><tbody><tr><td>149</td><td>5.745 GHz</td></tr><tr><td>153</td><td>5.765 GHz</td></tr><tr><td>157</td><td>5.785 GHz</td></tr><tr><td>161</td><td>5.805 GHz</td></tr><tr><td>165</td><td>5.825 GHz</td></tr></tbody></table><p><strong>4、全向天线</strong><br>全向天线，即在水平方向图上表现为360°都均匀辐射也就是平常所说的无方向性，在垂直方向图上表现为有一定宽度的波束，一般情况下波瓣宽度越小，增益越大。</p><p><a href="https://imgtu.com/i/TF6A7F"><img src="https://s4.ax1x.com/2021/12/17/TF6A7F.png" alt="TF6A7F.png"></a></p><p>全向天线，即在水平方向图上表现为360°都均匀辐射，如图3-3所示，也就是平常所说的无方向性，在垂直方向图上表现为有一定宽度的波束，一般情况下波瓣宽度越小，增益越大。全向天线在移动通信系统中一般应用于郊县大区制的站型，覆盖范围大。</p><p><strong>5、定向天线</strong><br>定向天线，在水平方向图上表现为一定角度范围辐射，也就是平常所说的有方向性。它同全向天线一样，波瓣宽度越小，增益越大。</p><p><a href="https://imgtu.com/i/TF6act"><img src="https://s4.ax1x.com/2021/12/17/TF6act.png" alt="TF6act.png"></a></p><p><strong>6、吸顶天线</strong><br>吸顶天线的内部结构，虽然尺寸很小，但由于是在天线宽带理论的基础上，借助计算机的辅助设计，以及使用网络分析仪进行调试，因此能很好地满足在非常宽的工作频带内的驻波比要求。</p><p><a href="https://imgtu.com/i/TFcWPH"><img src="https://s4.ax1x.com/2021/12/17/TFcWPH.png" alt="TFcWPH.png"></a></p><p>吸顶天线的内部结构，虽然尺寸很小，但由于是在天线宽带理论的基础上，借助计算机的辅助设计，以及使用网络分析仪进行调试，因此能很好地满足在非常宽的工作频带内的驻波比要求。按照国家标准，在很宽的频带内工作的天线其驻波比指标为VSWR ≤ 2 。当然，能达到VSWR ≤ 1.5 更好。顺便指出，室内吸顶天线属于低增益天线, 一般为G = 2dBi。<br>在室内，由于建筑物材料固有的屏蔽作用，增加了无线信号的穿透损耗，影响了网络的信号接收和通话质量，如隔墙的阻挡5<del>20dB、楼层的阻挡20dB以上、家具及其它障碍物的阻挡2</del>15dB。</p><p><strong>7、室外全向天线</strong><br>2.4GHz和5.8GHz室外全向天线外观与参考参数</p><p><a href="https://imgtu.com/i/TFgeQ1"><img src="https://s4.ax1x.com/2021/12/17/TFgeQ1.png" alt="TFgeQ1.png"></a></p><p>向天线，即在水平方向图上表现为360°都均匀辐射，也就是平常所说的无方向性，在垂直方向图上表现为有一定宽度的波束，一般情况下波瓣宽度越小，增益越大。全向天线在移动通信系统中一般应用于郊县大区制的站型，覆盖范围大。2.4GHz和5.8GHz室外全向天线外观与参考参数分别如图所示。</p><p><strong>8、抛物面天线</strong><br>由抛物面反射器和位于其焦点处的馈源组成的面状天线叫抛物面天线。<br>抛物面天线的主要优势是它的高方向性。它的功能类似于一个探照灯或手电筒反射器，向一个特定的方向汇聚无线电波到狭窄的波束,或从一个特定的方向接收无线电波。</p><p><a href="https://imgtu.com/i/TFgWwT"><img src="https://s4.ax1x.com/2021/12/17/TFgWwT.png" alt="TFgWwT.png"></a></p><p>由抛物面反射器和位于其焦点处的馈源组成的面状天线叫抛物面天线。<br>抛物面天线的主要优势是它的高方向性。它的功能类似于一个探照灯或手电筒反射器，向一个特定的方向汇聚无线电波到狭窄的波束,或从一个特定的方向接收无线电波。抛物面天线有一些最高的收益,也就是说,它们可以生产最窄波束宽度,不论天线的类型。为了实现窄波束宽度,抛物面反射器必须远远大于所使用的无线电波的波长,所以抛物面天线适用于高频无线电频谱的一部分（UHF和SHF）,在这个频段，波长小到可以使用反射面反射。<br>F/D（F是抛物线的焦点，D是抛物线的口径）与馈源的方向角Q是从属关系，也就是说只有馈源的方向角确定以后才能确定所要制作的抛物面天线的直径及焦距。作为一个业余爱好者只知道F/D=0.3~0.5是不够的，如何才能使一条天线与馈源配套即采用合适的F/D，这个问题很重要，它直接影响天线系统的效率及信噪比等。室外抛物面5.8GHz和2.4GHz天线外观与参考参数如图所示。</p><p><strong>9、功率</strong><br>在无线应用中，我们经常听到的功率单位是dBm而不是W或者mW。<br>dB用于标识一个相对值，是一个纯计数单位，当计算A的功率相比于B大或者小多少个dB时，可按计算公式:dB=10<em>lg（A/B）计算。<br>例如：A功率比B功率大一倍，那么10</em>lg(A/B)=10<em>lg2=3dB。也就是说，A的功率比B的功率大3dB。<br>dBm（分贝毫瓦）指的是milliwatt，0dBm=1mW，<br>计算公式为：10</em>lg P（功率值/1mW）。</p><p><strong>10、为什么使用dB</strong><br>dB能把一个很大（后面跟一长串0的）或者很小（前面有一长串0的）的数比较简短地表示出来。如：<br>X = 1000000000000000= 10logX = 150 dB<br>X = 0.000000000000001 = 10logX = -150 dB</p><p><strong>11、功率换算举例</strong><br>例1：如果发射功率P为1mW，折算为dBm后为0dBm。</p><p>例2：对于40W的功率，按0dBm单位进行折算后的值应为：        10<em>lg(40W/1mW)=10</em>lg(40000)=10<em>lg(4</em>10^4)=40+10*lg4=460dBm。</p><p><strong>12、无线传输质量</strong><br>1）    无线与距离的关系<br>2）    干扰源主要类型<br>3）    无线信号的传输方式</p><p><a href="https://imgtu.com/i/TFgzfH"><img src="https://s4.ax1x.com/2021/12/17/TFgzfH.png" alt="TFgzfH.png"></a></p><p><a href="https://imgtu.com/i/TF2JNF"><img src="https://s4.ax1x.com/2021/12/17/TF2JNF.png" alt="TF2JNF.png"></a></p><p>（1）无线与距离的关系<br>当无线信号与用户之间距离越来越远，那么无线信号强度会越来越弱，可以根据用户需求调整无线设备。<br>（2）干扰源主要类型<br>无线信号干扰源主要是无线设备间的同频干扰，例如蓝牙和无线2.4GHz频段。<br>（3）无线信号的传输方式<br>AP的无线信号传递主要通过两种方式，即辐射和传导。AP无线信号辐射是指AP的信号通过天线将信号传递到空气中去，如图8-10，该AP的信号直接通过六根天线传输无线数据。<br>AP无线信号的传导是指无线信号在线缆等介质内进行无线信号传递，如图8-11所示的室分系统中，无线AP和天线间通过同轴电缆连接，无线信号从天线接收后将通过电缆传导到AP。</p><h2 id="常见的无线网络"><a href="#常见的无线网络" class="headerlink" title="常见的无线网络"></a>常见的无线网络</h2><p><strong>1、常见的无线网络设备</strong><br>无线控制器（Access Controller；AC）<br>无线接入点（Access Point；AP）<br>室内AP<br>室外AP<br>场景化产品系列AP</p><p><strong>2、无线控制器AC6003</strong><br>提供8口PoE（15.4W）满供能力或者4口PoE+（30W）供电能力，可直接接入AP。<br>提供丰富灵活的用户策略管理及权限控制能力。<br>设备可通过网管eSight、WEB网管、命令行（CLI）进行维护。</p><p><a href="https://imgtu.com/i/TF24DP"><img src="https://s4.ax1x.com/2021/12/17/TF24DP.png" alt="TF24DP.png"></a></p><p>无线控制器是一种网络设备，用来集中化控制无线AP，是一个无线网络的核心，负责管理无线网络中的所有无线AP。对AP的管理包括下发配置、修改相关配置参数、射频智能管理、接入安全控制等。<br>AC6005系列（简称AC6005）是华为推出的无线接入控制器，提供大容量、高性能、高可靠性、易安装、易维护的无线数据控制业务，具有组网灵活、绿色节能等优势。AC6005位于整个网络的汇聚层，提供高速、安全、可靠的WLAN业。华为的无线控制器AC6005如图8-12所示。AC6005具有以下特点和性能：</p><p><strong>3、无线接入点</strong><br>无线AP从功能上可分为：<br>“胖”AP<br>“瘦”AP<br>其中，“胖”AP拥有独立的操作系统，可以进行单独配置和管理，而“瘦”AP则无法单独进行配置和管理操作，需要借助无线网络控制器进行统一的管理和配置。</p><p>AP是WLAN网络中的重要组成部分，其工作机制类似有线网络中的集线器（HUB），无线终端可以通过AP进行终端之间的数据传输，也可以通过AP的“WAN”口与有线网络互通。<br>无线AP从功能上可分为“胖”AP和“瘦”AP两种。其中，“胖”AP拥有独立的操作系统，可以进行单独配置和管理，而“瘦”AP则无法单独进行配置和管理操作，需要借助无线网络控制器进行统一的管理和配置。</p><p><strong>4、FAT AP</strong><br>“胖”AP可以自主完成包括无线接入、安全加密、设备配置等在内的多项任务，不需要其他设备的协助，适合用于构建中、小型规模无线局域网。</p><p><a href="https://imgtu.com/i/TFRPC4"><img src="https://s4.ax1x.com/2021/12/17/TFRPC4.png" alt="TFRPC4.png"></a></p><p>“胖”AP可以自主完成包括无线接入、安全加密、设备配置等在内的多项任务，不需要其他设备的协助，适合用于构建中、小型规模无线局域网。“胖”AP组网的优点是无须改变现有有线网络结构，配置简单;缺点是无法统一管理和配置，因为需要对每台AP单独进行配置，费时、费力，当部署大规模的WLAN网络时，部署和维护成本高。<br>面对小型公司、办公室、家庭等无线覆盖场景，它仅需要少量的AP即可实现无线网络覆盖，目前被广泛使用和熟知的产品就是无线路由器，如图所示。</p><p><strong>5、FIT AP</strong><br>“瘦”AP又称轻型无线AP，必须借助无线网络控制器进行配置和管理。</p><p><a href="https://imgtu.com/i/TFRGrt"><img src="https://s4.ax1x.com/2021/12/17/TFRGrt.png" alt="TFRGrt.png"></a></p><p>AP4050DN无线接入点支持802.11ac wave 2标准、2×2MIMO和2条空间流，同时支持11n和11ac协议，可使无线网络带宽突破千兆，极大地增强用户对无线网络的使用体验，适合部署在中小型企业、机场车站、体育场馆、咖啡厅、休闲中心等场景。华为的无线接入点AP4050DN如图8-13所示。</p><h1 id="WLAN的基础配置"><a href="#WLAN的基础配置" class="headerlink" title="WLAN的基础配置"></a>WLAN的基础配置</h1><h2 id="WLAN的工作原理"><a href="#WLAN的工作原理" class="headerlink" title="WLAN的工作原理"></a>WLAN的工作原理</h2><p><strong>1、IEEE802.11标准的帧结构</strong><br>IEEE802.11 MAC层负责客户端与AP之间的通信，包括扫描、认证、接入、加密、漫游等；针对帧的不同功能，可将IEEE802.11中的MAC帧细分为以下3类：<br>控制帧<br>管理帧<br>数据帧</p><p>IEEE802.11 MAC层负责客户端与AP之间的通信，包括扫描、认证、接入、加密、漫游等；针对帧的不同功能，可将IEEE802.11中的MAC帧细分为以下3类：<br>控制帧：用于竟争期间的握手通信和正向确认、结束非竞争期等<br>管理帧：主要用于STA与AP之间协商、关系的控制，如关联、认证、同步等<br>数据帧：用于在竞争期和非竞争期传输数据</p><p><strong>2、IEEE802.11通用帧格式</strong></p><p><a href="https://imgtu.com/i/TFRHZ6"><img src="https://s4.ax1x.com/2021/12/17/TFRHZ6.png" alt="TFRHZ6.png"></a></p><p><strong>3、IEEE802.11通用帧格式</strong><br>（1）帧控制结构（Frame Control）<br>（2）Duration/ID(持续时间/标识)<br>（3）Address 部分<br>（4）Seq Ctl ：Sequence Control，序列控制域<br>（5）Frame Body：帧主体<br>（6）FCS：帧检验序列</p><p>（1）帧控制结构（Frame Control）如图8-13所示：<br>图8-13 帧控制报文结构<br>Protocol version：  协议版本，通常为0。<br>Type与Sub Type：类型与次类型，用来制定所使用的帧类型，就是上文提到的控制帧、管理帧、数据帧。Type值定义如下：<br>00 管理帧；<br>01  控制帧；<br>10  数据帧；<br>11  保留。<br>To DS 与 From DS：用于表示帧是由工作站发起还是需要工作站接收的数据帧；<br>00  所有管理与控制帧IBSS(非基础型数据帧)；<br>01  基础网络里无线工作站所收到的数据帧；<br>10  基础网络里无线工作站所发送的数据帧；<br>11  无线桥接器上的数据帧。<br>More Fragment：用于说明长帧被分段的情况，如果还有其他帧，该位被置1。<br>Retry：重传帧位，重传的帧会将此位置1。<br>Power Management：IEEE802.11网卡为了提高电池的使用时间，通常可以关闭网卡以节省电力。此位用来指定传送端在完成目前的基本帧交换之后是否进入省电模式，1代表工作站即将进入省电模式，而0则代表工作站一直保持清醒状态。基站发出去的帧该位必为0。<br>More Data：为服务处于省电模式的工作站，基站会将这些由“传输系统”接收而来的帧加以暂存。基站如果设定此位，代表至少有一个帧待传送给休眠的工作站。<br>Protected Frame：如果帧受到链路层安全协议的保护，该位置1。<br>Order：序号域，在长帧分段传输时，该位置1，表示接受者应该严格按照顺序处理该帧，否则设置为0。<br>（2）Duration/ID(持续时间/标识)<br>表明该帧和它的确认帧将会占用信道多长时间，Duration值用于网络分配向量(NAV)计算。<br>（3）Address 部分<br>一个IEEE802.11帧最多可以包含4个地址，帧类型的不同，这些地址也有所差异，基本上，Address1代表接受端，Address2代表传送端、Address3代表接受端拿过来的过滤地址。<br>（4）Seq ctl ：Sequence Control，序列控制域<br>用来过滤重复帧，即用来重组帧片段以及丢弃重复帧。<br>（5）Frame Body：帧主体<br>帧主体（Frame Body）又称数据位。负责在工作站间传送上层数据（Payload）。在最初的指定的规格中，IEEE802.11帧最多可以传送2034字节的数据。802.2LLC标头具有八个字节，所以最多可以传送2296个字节。防止分段必须在协议层加以处理。<br>（6）FCS：帧检验序列<br>FCS通常被视为循环冗余码（Cyclic Redundancy Check，CRC），因为底层的数学运算相同。FCS计算范围涵盖MAC标头里所有位以及帧主体。如果FCS有误，随即丢弃。并且不进行应答。</p><p><strong>4、帧控制报文结构</strong></p><p><a href="https://imgtu.com/i/TFWeQs"><img src="https://s4.ax1x.com/2021/12/17/TFWeQs.png" alt="TFWeQs.png"></a></p><p><strong>5、帧控制结构</strong><br>Protocol version：  协议版本，通常为0。<br>Type与Sub Type：类型与次类型，<br>To DS 与 From DS：用于表示帧是由工作站发起还是需要工作站接收的数据帧；<br>More Fragment：用于说明长帧被分段的情况，如果还有其他帧，该位被置1。<br>Retry：重传帧位，重传的帧会将此位置1。<br>Power Management：用来指定传送端在完成目前的基本帧交换之后是否进入省电模式，<br>More Data：为服务处于省电模式的STA，基站会将这些由“AP”接收而来的帧加以暂存。<br>Protected Frame：如果帧受到链路层安全协议的保护，该位置1。<br>Order：序号域，在长帧分段传输时，该位置1，表示接受者应该严格按照顺序处理该帧。</p><p>Protocol version：  协议版本，通常为0。<br>Type与Sub Type：类型与次类型，用来制定所使用的帧类型，就是上文提到的控制帧、管理帧、数据帧。Type值定义如下：<br>00 管理帧；<br>01  控制帧；<br>10  数据帧；<br>11  保留。<br>To DS 与 From DS：用于表示帧是由工作站发起还是需要工作站接收的数据帧；<br>00  所有管理与控制帧IBSS(非基础型数据帧)；<br>01  基础网络里无线工作站所收到的数据帧；<br>10  基础网络里无线工作站所发送的数据帧；<br>11  无线桥接器上的数据帧。<br>More Fragment：用于说明长帧被分段的情况，如果还有其他帧，该位被置1。<br>Retry：重传帧位，重传的帧会将此位置1。<br>Power Management：IEEE802.11网卡为了提高电池的使用时间，通常可以关闭网卡以节省电力。此位用来指定传送端在完成目前的基本帧交换之后是否进入省电模式，1代表工作站即将进入省电模式，而0则代表工作站一直保持清醒状态。基站发出去的帧该位必为0。<br>More Data：为服务处于省电模式的工作站，基站会将这些由“传输系统”接收而来的帧加以暂存。基站如果设定此位，代表至少有一个帧待传送给休眠的工作站。<br>Protected Frame：如果帧受到链路层安全协议的保护，该位置1。<br>Order：序号域，在长帧分段传输时，该位置1，表示接受者应该严格按照顺序处理该帧，否则设置为0。</p><p><strong>6、MAC层工作原理</strong><br>IEEE 802.11的MAC协议与IEEE 802.3相似，考虑到无线局域网中，无线电波传输距离受限，不是所有的节点都能监听到信号，且无线网卡工作在半双工模式，一旦发生碰撞，重新发送数据会降低吞吐量。因此，IEEE 802.11对CSMA/CD进行了一些修改，采用了CSMA/CA（载波监听多路访问/冲突退避机制）来避免冲突的发送。</p><p><strong>7、CSMA/CA工作原理</strong><br>首先检测信道是否有STA在使用，如果信道空闲，则等待DIFS时间后，就发送数据；<br>如果检测到信道正在使用，根据CSMA/CA退避算法，STA将冻结退避计时器。经过DIFS时间后，继续监听，只要信道空闲，退避计时器就进行倒计时，当退避计时器减少到零时（这是信道可能是空闲的），STA就发送帧并等待确认。<br>目标STA如果正确收到该帧，则经过SIFS时间后，向源STA发送ACK确认帧；如果源STA收到ACK帧，确定数据正确传输，在经过DIFS时间间隔后，会出现一段空闲时间，叫做争用窗口，各STA进入争用信道情况，然后重复①；<br>如果源STA没有收到ACK，则需要重新发送原数据帧，直到收到确认为止或经过若干次重传失败后放弃发送。</p><p>备注：<br>SIFS： 短的帧间间隔，用来分隔开属于一次对话的各帧，长度一般为9或20us。<br>DIFS：分布协调功能的帧间间隔，用来发送数据帧和管理帧，长度为SIFS+（2*Slot time）。<br>Slot time：时隙，不同厂商规定不同，是一个非常短的时间。<br>PIFS：AP协调功能帧间隙，长度为SIFS+Slot time。</p><p><strong>8、IEEE 802.11 MAC的功能</strong><br>信道管理<br>连接管理<br>服务质量<br>功率控制<br>安全<br>时间同步<br>特性</p><p>①信道管理：包括信道扫描（MLME-SCAN）、信道测量（MLME-MREQUEST、MLME-MEASURE、MLME-MREPORT）、信道切换（MLME-CHANNELSWITCH）等。<br>②连接管理：包括认证（MLME-AUTHENTICATE）、断开认证（MLME-DEAUTHENTICATE）、建立连接（MLME-ASSOCIATE）、重新连接（MLME-REASSOCIATE）、断开连接（MLME-DEASSOCIATE）、开始网络（MLME-START）、点对点连接请求（MLME-PeerKeySTART）、直接连接管理（MLME-DLS、MLME-DLSTearDown）等。<br>③服务质量（QoS）：包括交通流（TS）管理接口（MLME-ADDTS、MLME-DELTS）、Qos调度变更通知（MLME-SCHEDULE）等。<br>④功率控制：包括电源管理（MLME-POWERMGT）、发送功率通知（MLME-TPCADAPT）等。<br>⑤安全：包括密钥管理（MLME-SETKEYS、MLME-DELETEKEYS）、迈克尔失败事件（MLME-MICHAELMICFAILURE）、EAPOL（MLME-EAPOL）、帧密钥错误丢弃通知（MLME-PROTECTEDFRAMEDROPPED）等。<br>⑥时间同步：包括时间同步（MLME-JOIN）、高层同步支持（MLME-HL-SYNC）等。<br>⑦特性：包括合并ACK帧管理（MLME-ADDBA、MLME-DELBA）、发行商特有（MLME-VSPECIFIC）、MIB管理（MLME-SET、MLME-GET）等。</p><h2 id="FAT-AP的网络组建"><a href="#FAT-AP的网络组建" class="headerlink" title="FAT AP的网络组建"></a>FAT AP的网络组建</h2><p><strong>1、FAT AP的网络组建</strong><br>AP通过有线网络接入互联网，每个AP都是一个单独的节点，需要独立配置其信道、功率、安全策略等。常见的应用场景有家庭无线网络、办公室无线网等，一个园区无线网络的典型拓扑如图所示。</p><p><a href="https://imgtu.com/i/TFWRmt"><img src="https://s4.ax1x.com/2021/12/17/TFWRmt.png" alt="TFWRmt.png"></a></p><p><strong>2、AP的配置</strong></p><p><a href="https://imgtu.com/i/TFWbXn"><img src="https://s4.ax1x.com/2021/12/17/TFWbXn.png" alt="TFWbXn.png"></a></p><p>（1）有线部分的配置<br>①创建业务VLAN，STA接入WLAN后从该VLAN关联的DHCP地址池中获取IP地址。<br>②配置VLANIF接口IP地址，用户可以通过这个IP地址对AP进行远程管理。<br>③配置AP以太网接口为上联接口，通过封装相应的VLAN使这些VLAN中的数据可以通过以太网接口转发到上联设备。<br>（2）无线部分的配置<br>①创建SSID模板，配置SSID，用户可以通过搜索SSID加入相应的WLAN中。<br>SSID（Service Set Identifier）中文含义为服务集标识，用来区分不同的无线网络。例如，当我们在笔记本电脑上搜索可接入无线网络时，显示出来的无线网络名称就是SSID。SSID由最多32个字符组成，且区分大小写，配置在所有AP与STA的无线射频卡中。<br>②创建安全模板，为WLAN接入配置加密，WLAN加密后，用户需要通过输入预共享密钥才能加入WLAN中。安全模板为选配项，若不进行配置，则为开放式网络。<br>③创建VAP模板，VAP模板中指定STA的业务VLAN，并引用SSID模板和安全模板的参数。<br>④配置WLAN-radio，配置WLAN-ID引用VAP模板的配置，引用VAP模板后，WLAN开始工作并发射出对应SSIS，用户关联到SSID后会通过业务VLAN获取IP地址。</p><h2 id="FAT-AP的基础配置"><a href="#FAT-AP的基础配置" class="headerlink" title="FAT AP的基础配置"></a>FAT AP的基础配置</h2><p><strong>3、案例8-1FAT AP的基础配置</strong><br>FAT AP通过有线方式接入Internet，通过无线方式连接终端。Jan16公司为了保证工作人员可以随时随地的访问公司网络，需要通过部署WLAN基本业务实现移动办公。<br>提供名为“Jan16”的无线网络。<br>SW作为DHCP服务器和网关，为工作人员分配IP地址，AP仅做DHCP报文的二层透传。</p><p><a href="https://imgtu.com/i/TFfu1H"><img src="https://s4.ax1x.com/2021/12/17/TFfu1H.png" alt="TFfu1H.png"></a></p><p><strong>4、案例相关数据准备</strong></p><table><thead><tr><th>项目</th><th>数据</th></tr></thead><tbody><tr><td>STA业务VLAN</td><td>VLAN 10</td></tr><tr><td>DHCP服务器</td><td>SW</td></tr><tr><td>STA地址池</td><td>NET:192.168.10.0/24GATEWAY:192.168.10.254</td></tr><tr><td>SSID模板</td><td>名称：SSID1SSID名称：jan16</td></tr><tr><td>VAP模板</td><td>名称：VAP1业务VLAN：VLAN 10引用模板：SSID模板SSID1</td></tr></tbody></table><p><strong>5、案例配置思路</strong><br>（1）配置AP与上层网络设备互通。<br>（2）配置SW作为DHCP服务器，为STA分配IP地址。<br>（3）配置WLAN业务参数。<br>（4）应用WLAN参数到无线射频卡。</p><p><strong>6、案例8-1配置步骤1</strong><br>配置AP与上层网络设备互通。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname AP</span><br><span class="line">[AP]vlan 10</span><br><span class="line">[AP-vlan10]name USER </span><br><span class="line">[AP-vlan10]quit</span><br><span class="line">[AP]interface Vlanif 10</span><br><span class="line">[AP-Vlanif10]ip address 192.168.10.253 24</span><br><span class="line">[AP-Vlanif10]quit</span><br><span class="line">[AP] interface gigabitethernet 0/0/0</span><br><span class="line">[AP-GigabitEthernet0/0/0] port link-type trunk</span><br><span class="line">[AP-GigabitEthernet0/0/0] port trunk allow-pass vlan 10</span><br><span class="line">[AP-GigabitEthernet0/0/0] quit</span><br></pre></td></tr></table></figure><p><strong>7、案例8-1配置步骤2</strong><br>配置SW作为DHCP服务器，为STA分配IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">&lt;Huawei&gt;sysname SW</span><br><span class="line">[SW]vlan 10</span><br><span class="line">[SW-vlan10]name USER </span><br><span class="line">[SW-vlan10]quit</span><br><span class="line">[SW] interface gigabitethernet 0/0/1</span><br><span class="line">[SW-GigabitEthernet0/0/1] port link-type trunk</span><br><span class="line">[SW-GigabitEthernet0/0/1] port trunk allow-pass vlan 10</span><br><span class="line">[SW-GigabitEthernet0/0/1] quit</span><br><span class="line">[SW]dhcp enable</span><br><span class="line">[SW]interface Vlanif 10</span><br><span class="line">[SW-Vlanif10]ip address 192.168.10.254 24</span><br><span class="line">[Router-GigabitEthernet1/0/0] dhcp select interface</span><br><span class="line">[Router-GigabitEthernet0/0/1] dhcp server excluded-ip-address 192.168.10.253</span><br><span class="line">[SW-Vlanif10]quit</span><br></pre></td></tr></table></figure><p><strong>8、案例8-1配置步骤3</strong><br>配置WLAN参数；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[AP]wlan </span><br><span class="line">[AP-wlan-view]ssid-profile name SSID1    // 创建名为“SSID1”的SSID模板</span><br><span class="line">[AP-wlan-ssid-prof-SSID1]ssid jan16    //配置SSID名称为“jan16”</span><br><span class="line">[AP-wlan-ssid-prof-SSID1]quit</span><br><span class="line">[AP-wlan-view]vap-profile name VAP1    //创建名为“VAP1”的VAP模板</span><br><span class="line">[AP-wlan-vap-prof-VAP1]service-vlan vlan-id 10    //配置业务VLAN为vlan 10</span><br><span class="line">[AP-wlan-vap-prof-VAP1]ssid-profile SSID1    //配置VAP模板引用SSID模板</span><br><span class="line">[AP-wlan-vap-prof-VAP1]quit</span><br><span class="line">[AP-wlan-view]quit</span><br></pre></td></tr></table></figure><p><strong>9、案例8-1配置步骤4</strong><br>应用WLAN参数到无线射频卡；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AP]interface Wlan-Radio 0/0/0</span><br><span class="line">[AP-Wlan-Radio0/0/0]vap-profile VAP1 wlan 2   //配置WLAN-ID 2引用名为“VAP1”的VAP模板</span><br><span class="line">[AP-Wlan-Radio0/0/0]quit</span><br></pre></td></tr></table></figure><p><strong>10、案例8-1验证1</strong><br>可以在AP上使用【display vap ssid VAP1】命令查看VAP信息，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[AP]display vap ssid VAP1</span><br><span class="line">Info: This operation may take a few seconds, please wait.</span><br><span class="line">WID : WLAN ID            </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">AP MAC         RfID WID  BSSID          Status  Auth type  STA   SSID       </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">c4b8-b469-32e0 0    2    C4B8-B469-32E1 ON      Open       0     jan16   </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total: 1</span><br></pre></td></tr></table></figure><p><strong>11、案例8-1验证2</strong><br>在PC上查找无线信号jan16并接入。</p><p><a href="https://imgtu.com/i/TAYJsJ"><img src="https://s4.ax1x.com/2021/12/18/TAYJsJ.png" alt="TAYJsJ.png"></a></p><p><strong>12、案例8-1验证3</strong><br>连接成功后使用【ping】命令测试连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.10.254</span><br><span class="line"></span><br><span class="line">Ping 192.168.10.254: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.10.254: bytes=32 seq=1 ttl=128 time=63 ms</span><br><span class="line">From 192.168.10.254: bytes=32 seq=2 ttl=128 time=62 ms</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><h1 id="WLAN的安全配置"><a href="#WLAN的安全配置" class="headerlink" title="WLAN的安全配置"></a>WLAN的安全配置</h1><h2 id="WLAN的安全问题"><a href="#WLAN的安全问题" class="headerlink" title="WLAN的安全问题"></a>WLAN的安全问题</h2><p><strong>1、WLAN安全问题</strong><br>WLAN以无线信道作为传输媒介，利用电磁波在空气中收发数据实现了传统有线局域网的功能。然而由于WLAN传输媒介的特殊性和其固有的安全缺陷，用户的数据面临被窃听和篡改的威胁，WLAN网络常见的安全威胁有以下几个方面。<br>未经授权使用网络服务<br>非法AP<br>数据安全<br>拒绝服务攻击</p><hr><p><strong>tip：</strong></p><p>WLAN以无线信道作为传输媒介，利用电磁波在空气中收发数据实现了传统有线局域网的功能。和传统的有线接入方式相比，WLAN网络布放和实施相对简单，维护成本也相对低廉，因此应用前景十分广阔。然而由于WLAN传输媒介的特殊性和其固有的安全缺陷，用户的数据面临被窃听和篡改的威胁，因此WLAN的安全问题成为制约其推广的最大问题。WLAN网络常见的安全威胁有以下几个方面。<br>未经授权使用网络服务<br>最常见的WLAN安全威胁就是未经授权的用户非法使用WLAN网络。非法用户未经授权使用WLAN网络，同授权用户共享带宽，会影响合法用户的使用体验，甚至可能泄露当前用户的用户信息。<br>非法AP<br>非法AP是未经授权部署在企业WLAN网络里，且干扰网络正常运行的AP（例如DoS攻击）。如果该非法AP配置了正确的WEP（Wired Equivalent Privacy，有线等效保密）密钥，还可以捕获客户端数据。经过配置后，非法AP可为未授权用户提供接入服务，可让未授权用户捕获和伪装数据包，最糟糕的是允许未经授权用户访问服务器和文件。<br>数据安全<br>相对于以前的有线局域网，WLAN网络采用无线通信技术，用户的各类信息在无线中传输，更容易被窃听、获取。<br>拒绝服务攻击<br>这种攻击方式不以获取信息为目的，黑客只是想让目标机器停止提供服务。因为WLAN采用微波传输数据，理论上只要在有信号的范围内攻击者就可以发起攻击，这种攻击方式隐蔽性好，实现容易，防范困难，是黑客的终极攻击方式。</p><hr><h2 id="WLAN的安全对策"><a href="#WLAN的安全对策" class="headerlink" title="WLAN的安全对策"></a>WLAN的安全对策</h2><p><strong>1、WLAN的安全对策</strong><br>开放系统认证<br>共享密钥认证<br>SSID隐藏<br>黑白名单认证（MAC地址认证）<br>PSK认证<br>WLAN加密技术</p><p><strong>1、开放系统认证</strong><br>开放系统认证不对用户身份做任何验证，整个认证过程中，通信双方仅需交换两个认证帧：<br>站点向AP发送一个认证帧，AP以此帧的源MAC地址作为发送端的身份证明，<br>AP随即返回一个认证帧，并建立AP和客户端的连接。</p><p>开放系统认证不对用户身份做任何验证，整个认证过程中，通信双方仅需交换两个认证帧：站点向AP发送一个认证帧，AP以此帧的源MAC地址作为发送端的身份证明，AP随即返回一个认证帧，并建立AP和客户端的连接。因此，开放系统认证不要求用户提供任何身份凭证，通过这种简单的认证后就能与 AP建立关联，进而获得访问网络资源的权限。<br>开放系统认证是唯一的IEEE802.11要求必备的认证方法，是最简单的认证方式，对于需要允许设备快速进入网络的场景，可以使用开放系统认证。开放系统认证主要用于公共区域或热点区域（如机场、酒店等）为用户提供无线接入服务，适合用户众多的运营商部署大规模的WLAN网络。</p><p><strong>2、共享密钥认证</strong><br>共享密钥认证要求用户设备必须支持有线等效加密，用户设备与AP必须配置匹配的静态WEP密钥。共享密钥认证过程中，采用共享密钥认证的无线接口之间需要交换质询与响应消息，通信双方总共需要交换4个认证帧：</p><p><a href="https://imgtu.com/i/TAYqwn"><img src="https://s4.ax1x.com/2021/12/18/TAYqwn.png" alt="TAYqwn.png"></a></p><p>共享密钥认证要求用户设备必须支持有线等效加密，用户设备与AP必须配置匹配的静态WEP密钥。如果双方的静态WEP密钥不匹配，用户设备也无法通过认证。共享密钥认证过程中，采用共享密钥认证的无线接口之间需要交换质询与响应消息，通信双方总共需要交换4个认证帧，如图8-15所示。<br>用户设备向AP发送认证请求数据帧。<br>AP向用户设备返回包含明文质询消息的第二个认证帧，质询消息长度为128字节，由WEP密钥流生成器利用随机密钥和初始向量产生。<br>用户设备使用静态 WEP 密钥将质询消息加密，并通过认证帧发给AP。<br>AP收到认证帧后，将使用静态WEP密钥对其中的质询消息进行解密，并与原始质询消息进行比较。若二者匹配，AP 将会向用户设备发送第四个也是最后一个认证帧，确认用户设备成功通过认证；若二者不匹配或AP无法解密质询消息，AP将拒绝用户设备的认证请求。<br>用户设备成功通过共享密钥认证后，将采用同一静态WEP密钥加密随后的IEEE802.11数据帧与AP通信。<br>共享密钥认证的安全性看似比开放系统认证要高，但是实际上前者存在着巨大的安全漏洞。如果入侵者截获 AP 发送的明文质询消息以及用户设备返回的加密质询消息，就可能从中提取出静态WEP密钥。入侵者一旦掌握静态WEP密钥，就可以解密所有数据帧，网络对入侵者将再无秘密可言。因此，WEP共享秘钥认证方式难以为企业无线局域网提供有效保护。</p><p><strong>3、SSID隐藏</strong><br>SSID隐藏，可将无线网络的逻辑名隐藏起来。<br>AP启用SSID隐藏后，信标帧中的SSID字段被置为空</p><p>SSID（Service Set Identifier，服务集标识）隐藏，可将无线网络的逻辑名隐藏起来。<br>AP启用SSID隐藏后，信标帧中的SSID字段被置为空，无线客户端通过被动扫描侦听信标帧的用户设备将无法获得SSID信息。因此，无线终端必须手动设置与AP相同的SSID才能与AP进行关联，如果用户设备出示的SSID与AP的SSID不同，那么AP将拒绝它接入。<br>SSID 隐藏适用于某些企业或机构需要支持大量访客接入的场景。企业园区无线网络可能存在多个SSID，如员工、财务、访客等。为减少访客连错网络的问题，园区通常会隐藏员工、财务的SSID，同时广播访客SSID，此时访客尝试连接无线网络时只能看到访客SSID，从而减少了连接到员工和财务人员网络的情况。<br>尽管 SSID 隐藏可以在一定程度上防止业余黑客与普通用户搜索到无线网络，但只要入侵者使用二层无线协议分析软件拦截到任何合法终端用户发送的帧，就能获得以明文形式传输的SSID。因此，只使用SSID隐藏策略来保证无线局域网安全是不行的。</p><p><strong>4、黑白名单认证（MAC地址认证）</strong><br>白名单的概念与“黑名单”相对应。<br>黑名单启用后，被列入黑名单的用户不能通过。<br>设立了白名单，则在白名单中的用户会允许通过，没有在白名单列出的用户将被拒绝访问。</p><p><a href="https://imgtu.com/i/TAtMmd"><img src="https://s4.ax1x.com/2021/12/18/TAtMmd.png" alt="TAtMmd.png"></a></p><p>白名单的概念与“黑名单”相对应。黑名单启用后，被列入黑名单的用户不能通过。如果设立了白名单，则在白名单中的用户会允许通过，没有在白名单列出的用户将被拒绝访问。<br>黑白名单认证是一种基于端口和MAC地址对用户的网络访问权限进行控制的认证方法，不需要用户安装任何客户端软件。IEEE802.11设备都具有唯一的MAC地址，因此可以通过检验IEEE802.11 设备数据分组的源MAC 地址来判断其合法性，过滤不合法的MAC地址，仅允许特定的用户设备发送的数据分组通过。MAC 地址过滤要求预先在AC 或“胖”AP中输入合法的MAC地址列表，只有当用户设备的MAC地址和合法MAC地址列表中的地址匹配，AP才允许用户设备与之通信，实现物理地址过滤。如图8-16所示，用户设备STA1的MAC地址不在AC的合法MAC地址列表中，因而不能接入AP；而用户设备STA2和STA3分别与合法MAC地址列表中的第四个、第三个MAC地址完全匹配，因而可以接入AP。<br>然而，由于很多无线网卡支持重新配置MAC地址，MAC地址很容易被伪造或复制。只要将 MAC 地址伪装成某个出现在允许列表中的用户设备的MAC 地址，就能轻易绕过MAC地址过滤。为所有设备配置MAC地址过滤的工作量较大，而MAC地址又易于伪造，这使MAC地址过滤无法成为一种可靠的无线安全解决方案。</p><p><strong>5、PSK认证</strong><br>PSK（Pre-shared Key，PSK）认证<br>要求用户使用一个简单的ASCII字符串（8～63个字符长度，称为密码短语）作为密钥。<br>客户端和服务端通过能否成功解密协商的消息来确定本端配置的预共享密钥是否和对端配置的预共享密钥相同，从而完成服务端和客户端的相互认证。</p><p>PSK（Preshared Key，PSK）认证有很多别称，如WPA/WPA2-Passphrase、WPA/WPA2-PSK以及WPA/WPA2预共享密钥等，它要求用户使用一个简单的ASCⅡ字符串（8～63个字符长度，称为密码短语）作为密钥。客户端和服务端通过能否成功解密协商的消息来确定本端配置的预共享密钥是否和对端配置的预共享密钥相同，从而完成服务端和客户端的相互认证。<br>WPA/WPA2个人版定义的PSK认证方法是一种弱认证方法，很容易受到暴力字典的攻击。同时，由于密码是静态的，PSK认证也容易受到社会工程学攻击。虽然这种简单的PSK认证是为小型无线网络设计的，但实际上很多企业也使用 WPA/WPA2 个人版。由于所有WLAN设备上的PSK都是相同的，如果用户不小心将PSK泄露给黑客，WLAN的安全性将受到威胁。为保证安全，所有设备就必须重新配置一个新的PSK。</p><p>6、WLAN加密技术<br>WLAN采用的加密技术主要有：<br>WEP加密<br>临时密钥完整性协议（Temporal Key Integrity Protocol，TKIP）加密<br>计数器模式密码块链信息认证码协议（Counter Mode with Cipher-Block Chaining Message Authentication Code Protocol，CCMP）加密</p><p>在WLAN 用户通过认证并被赋予访问权限后，网络必须保护用户所传送的数据不被泄露，其主要方法是对数据报文进行加密。WLAN采用的加密技术主要有：WEP加密、临时密钥完整性协议（Temporal Key Integrity Protocol，TKIP）加密和计数器模式密码块链信息认证码协议（Counter Mode with Cipher-Block Chaining Message Authentication Code Protocol，CCMP）加密等。</p><h2 id="WLAN的安全标准"><a href="#WLAN的安全标准" class="headerlink" title="WLAN的安全标准"></a>WLAN的安全标准</h2><p><strong>1、WLAN安全标准</strong><br>WEP<br>WPA/WPA2<br>WAPI</p><p><strong>2、WEP</strong><br>有线等效加密WEP（Wired Equivalent Privacy）<br>RC4算法<br>加密密钥长度有64位和128位两种<br>WEP安全策略包括：<br>链路认证机制<br>数据加密机制<br>链路认证分为开放系统认证和共享密钥认证。<br>如果选择开放系统认证方式，链路认证过程不需要WEP加密。<br>如果选择共享密钥认证方式，链路认证过程中完成了密钥协商。</p><p>有线等效加密WEP（Wired Equivalent Privacy）协议是由IEEE802.11标准定义的，用来保护无线局域网中的授权用户所传输的数据的安全性，防止这些数据被窃听。WEP的核心是采用RC4算法，加密密钥长度有64位和128位两种，其中有24bit的IV（初始向量）是由系统产生的，所以WLAN服务端和WLAN客户端上配置的密钥长度是40位或104位。WEP加密采用静态的密钥，接入同一SSID下的所有STA使用相同的密钥访问无线网络。</p><p><strong>3、WPA/WPA2</strong><br>链路认证阶段，WPA/WPA2仅支持开放式系统认证。<br>接入认证阶段，WPA/WPA2分为企业版和个人版。<br>WPA/WPA2支持TKIP和CCMP两种加密算法。<br>TKIP加密算法：动态密钥协商、信息完整性校验机制，<br>CCMP加密算法：高级加密标准AES（Advanced Encryption Standard）</p><p>由于WEP共享密钥认证采用的是基于RC4对称流的加密算法，需要预先配置相同的静态密钥，无论从加密机制还是从加密算法本身，都很容易受到安全威胁。为了解决这个问题，在IEEE802.11i标准没有正式推出安全性更高的安全策略之前，Wi-Fi联盟推出了针对WEP改良的认证方式—WPA（Wi-Fi Protected Access）。WPA的核心加密算法还是采用RC4，并在WEP基础上提出了临时密钥完整性协议TKIP（Temporal Key Integrity Protocol）加密算法。随后IEEE802.11i安全标准又推出WPA2，区别于WPA，WPA2采用了802.1X的身份验证框架，支持EAP-PEAP、EAP-TLS等认证方式；采用安全性更高的区块密码锁链-信息真实性检查码协议CCMP（Counter Mode with CBC-MAC Protocol）加密算法。<br>为了实现更好的兼容性，在目前的实现中，WPA和WPA2都可以使用802.1X的接入认证、TKIP或CCMP的加密算法，他们之间的不同主要表现在协议报文格式上，在安全性上几乎没有差别。<br>链路认证阶段，WPA/WPA2仅支持开放式系统认证。<br>接入认证阶段，WPA/WPA2分为企业版和个人版。WPA/WPA2企业版：采用WPA/WPA2-802.1X的接入认证方式，使用RADIUS服务器和可扩展认证协议EAP（Extensible Authentication Protocol）进行认证。用户提供认证所需的凭证，如用户名和密码，通过特定的用户认证服务器（一般是RADIUS服务器）来实现对用户的接入认证。在大型企业网络中，通常采用WPA企业版的认证方式。<br>WPA/WPA2支持TKIP和CCMP两种加密算法。<br>TKIP加密算法<br>区别于WEP共用一个共享密钥，TKIP采用一套动态密钥协商和管理方法，每个无线用户都会动态地协商一套密钥，保证了每个用户使用独立的密钥。每个用户的密钥是由密钥协商阶段协商出来的PTK、发送方的MAC地址和报文序列号计算生成的，通过这种密钥混合的防护方式来防范针对WEP的攻击。<br>TKIP采用信息完整性校验机制，一方面保证接收端接收报文的完整性；另一方面保证接收端和发送端数据的合法性。信息完整性校验码是通过密钥协商阶段协商出来的MIC Key、目的MAC地址、源MAC地址和数据包计算生成的。<br>CCMP加密算法<br>区别于WEP和TKIP采用的流密码机制，CCMP采用了以高级加密标准AES（Advanced Encryption Standard）的块密码为基础的安全协议。这种基于块密码的加密技术克服了RC4算法本身的缺陷，安全性更高。</p><p><strong>4、WAPI</strong><br>无线局域网鉴别与保密基础结构WAPI（WLAN Authentication and Privacy Infrastructure）是中国提出的、以IEEE802.11无线协议为基础的无线安全标准。<br>无线局域网鉴别基础结构WAI（WLAN Authentication Infrastructure）：用于无线局域网中身份鉴别和密钥管理的安全方案；<br>无线局域网保密基础结构WPI（WLAN Privacy Infrastructure）：用于无线局域网中数据传输保护的安全方案，包括数据加密、数据鉴别和重放保护等功能。</p><p>WAPI采用了基于公钥密码体制的椭圆曲线密码算法和对称密码体制的分组密码算法，分别用于无线设备的数字证书、证书鉴别、密钥协商和传输数据的加解密，从而实现设备的身份鉴别、链路验证、访问控制和用户信息的加密保护。</p><p><strong>5、WAPI的优势</strong><br>（1）双向身份鉴别：<br>双向鉴别机制既可以防止非法的STA接入WLAN网络，同时也可以杜绝非法的WLAN设备伪装成合法的设备。<br>（2）数字证书身份凭证：<br>WAPI有独立的证书服务器，使用数字证书作为STA和WLAN设备的身份凭证，提升了安全性。<br>（3）完善的鉴别协议：<br>在WAPI中使用数字证书作为用户身份凭证，在鉴别过程中采用椭圆曲线签名算法，并使用安全的消息杂凑算法保障消息的完整性，攻击者难以对进行鉴别的信息进行修改和伪造，所以安全等级高。</p><h2 id="WLAN的安全配置-1"><a href="#WLAN的安全配置-1" class="headerlink" title="WLAN的安全配置"></a>WLAN的安全配置</h2><p><strong>1、案例8-2：WLAN的安全配置</strong><br>以Jan16公司为例，公司对办公室进行无线覆盖，出于安全考虑，配置无线信号连接时需要输入密码。<br>提供名为“Jan16”的安全无线网络，密码为12345678。<br>SW作为DHCP服务器和网关，为工作人员分配IP地址，AP仅做DHCP报文的二层透传。</p><p><a href="https://imgtu.com/i/TAtWnJ"><img src="https://s4.ax1x.com/2021/12/18/TAtWnJ.png" alt="TAtWnJ.png"></a></p><p><strong>2、案例相关数据准备</strong></p><table><thead><tr><th>项目</th><th>数据</th></tr></thead><tbody><tr><td>STA业务VLAN</td><td>VLAN 10</td></tr><tr><td>DHCP服务器</td><td>SW</td></tr><tr><td>STA地址池</td><td>NET:192.168.10.0/24GATEWAY:192.168.10.254</td></tr><tr><td>SSID模板</td><td>名称：SSID1SSID名称：jan16</td></tr><tr><td>安全模板</td><td>名称：wpa2安全策略：WPA2+PSK+AES密码：12345678</td></tr><tr><td>VAP模板</td><td>名称：VAP1业务VLAN：VLAN 10引用模板：SSID模板SSID1</td></tr></tbody></table><p><strong>3、案例配置思路</strong><br>（1）配置AP与上层网络设备互通。<br>（2）配置SW作为DHCP服务器，为STA分配IP地址。<br>（3）配置WLAN业务参数。<br>（4）应用WLAN参数到无线射频卡。</p><p><strong>4、案例8-2配置步骤1</strong><br>配置AP与上层网络设备互通。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname AP</span><br><span class="line">[AP]vlan 10</span><br><span class="line">[AP-vlan10]name USER </span><br><span class="line">[AP-vlan10]quit</span><br><span class="line">[AP]interface Vlanif 10</span><br><span class="line">[AP-Vlanif10]ip address 192.168.10.253 24</span><br><span class="line">[AP-Vlanif10]quit</span><br><span class="line">[AP] interface gigabitethernet 0/0/0</span><br><span class="line">[AP-GigabitEthernet0/0/0] port link-type trunk</span><br><span class="line">[AP-GigabitEthernet0/0/0] port trunk allow-pass vlan 10</span><br><span class="line">[AP-GigabitEthernet0/0/0] quit</span><br></pre></td></tr></table></figure><p><strong>5、案例8-2配置步骤2</strong><br>配置SW作为DHCP服务器，为STA分配IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">&lt;Huawei&gt;sysname SW</span><br><span class="line">[SW]vlan 10</span><br><span class="line">[SW-vlan10]name USER </span><br><span class="line">[SW-vlan10]quit</span><br><span class="line">[SW] interface gigabitethernet 0/0/1</span><br><span class="line">[SW-GigabitEthernet0/0/1] port link-type trunk</span><br><span class="line">[SW-GigabitEthernet0/0/1] port trunk allow-pass vlan 10</span><br><span class="line">[SW-GigabitEthernet0/0/1] quit</span><br><span class="line">[SW]dhcp enable</span><br><span class="line">[SW]interface Vlanif 10</span><br><span class="line">[SW-Vlanif10]ip address 192.168.10.254 24</span><br><span class="line">[Router-GigabitEthernet1/0/0] dhcp select interface</span><br><span class="line">[Router-GigabitEthernet0/0/1] dhcp server excluded-ip-address 192.168.10.253</span><br><span class="line">[SW-Vlanif10]quit</span><br></pre></td></tr></table></figure><p><strong>6、案例8-2配置步骤3</strong><br>配置WLAN参数；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[AP]wlan </span><br><span class="line">[AP-wlan-view]ssid-profile name SSID1</span><br><span class="line">[AP-wlan-ssid-prof-SSID1]ssid jan16</span><br><span class="line">[AP-wlan-ssid-prof-SSID1]quit</span><br><span class="line">[AP-wlan-view]security-profile name wpa2     //创建名为“wpa2”的安全模板</span><br><span class="line">[AP-wlan-sec-prof-wpa2]security wpa2 psk pass-phrase 12345678 aes   //配置安全协议为“WPA2”,认证方式采用psk，密钥为“12345678”，加密方式为AES。</span><br><span class="line">[AP-wlan-vap-prof-wpa2]quit</span><br><span class="line">[AP-wlan-view]vap-profile name VAP1</span><br><span class="line">[AP-wlan-vap-prof-VAP1]service-vlan vlan-id 10</span><br><span class="line">[AP-wlan-vap-prof-VAP1]ssid-profile SSID1</span><br><span class="line">[AP-wlan-vap-prof-VAP1]security-profile wpa2    //引用名为“wpa2”的安全模板</span><br><span class="line">[AP-wlan-vap-prof-VAP1]quit</span><br><span class="line">[AP-wlan-view]quit</span><br></pre></td></tr></table></figure><p><strong>7、案例8-2配置步骤4</strong><br>应用WLAN参数到无线射频卡；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[AP]interface Wlan-Radio 0/0/0</span><br><span class="line">[AP-Wlan-Radio0/0/0]vap-profile VAP1 wlan 2 </span><br><span class="line">[AP-Wlan-Radio0/0/0]quit</span><br></pre></td></tr></table></figure><p><strong>8、案例8-2案例验证1</strong><br>配置完成后，可以在AP上使用【display vap ssid VAP1】命令查看VAP信息，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[AP]display vap ssid VAP1</span><br><span class="line">Info: This operation may take a few seconds, please wait.</span><br><span class="line">WID : WLAN ID            </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">AP MAC         RfID WID  BSSID          Status  Auth type  STA   SSID       </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">c4b8-b469-32e0 0    2    C4B8-B469-32E1 ON      WPA2-PSK    0     jan16     </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total: 1</span><br></pre></td></tr></table></figure><p><strong>9、案例8-2案例验证2</strong><br>在PC上查找无线信号jan16。</p><p><a href="https://imgtu.com/i/TANeNq"><img src="https://s4.ax1x.com/2021/12/18/TANeNq.png" alt="TANeNq.png"></a></p><p><strong>10、案例8-2案例验证2</strong><br>接入时需要输入密码。</p><p><a href="https://imgtu.com/i/TANQvF"><img src="https://s4.ax1x.com/2021/12/18/TANQvF.png" alt="TANQvF.png"></a></p><p><strong>11、案例8-2案例验证4</strong><br>连接成功后使用【ping】命令测试连通性，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.10.254</span><br><span class="line"></span><br><span class="line">Ping 192.168.10.254: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.10.254: bytes=32 seq=1 ttl=128 time=63 ms</span><br><span class="line">From 192.168.10.254: bytes=32 seq=2 ttl=128 time=62 ms</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.华为1+X-IPV6协议</title>
      <link href="2021/12/18/%E5%8D%8E%E4%B8%BA1+X/7.%E5%8D%8E%E4%B8%BA1+X-IPV6%E5%8D%8F%E8%AE%AE/"/>
      <url>2021/12/18/%E5%8D%8E%E4%B8%BA1+X/7.%E5%8D%8E%E4%B8%BA1+X-IPV6%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-IPV6协议</p><h1 id="IPV6协议概述"><a href="#IPV6协议概述" class="headerlink" title="IPV6协议概述"></a>IPV6协议概述</h1><h2 id="IPV4与IPV6"><a href="#IPV4与IPV6" class="headerlink" title="IPV4与IPV6"></a>IPV4与IPV6</h2><p>1、IPv4的局限性<br>IPv4是目前广泛部署的互联网协议，它经过了多年的发展，己经非常成熟，易于实现，得到了所有厂商和设备的支持，但也有一些不足之处。<br>（1）能够提供的地址空间不足且分配不均<br>（2）互联网骨干路由器的路由表非常庞大</p><hr><p><strong>tip：</strong></p><p>（1）能够提供的地址空间不足且分配不均<br>互联网起源于20世纪60年代的美国国防部，每台连上网的设备都需要一个IP地址，初期只有上千台设备联网，使得采用32位长度的IP地址看来几乎不可能被耗尽。但随着互联网的发展，用户数量大量增加，尤其是随着互联网的商业化后，用户呈现几何倍数的增长，IPv4地址资源即将耗尽，IPv4可以提供的232个地址，由于协议设计初的规划问题，部分地址不能被分配使用，如D类地址（组播地址）和E类地址（实验保留），造成整个地址空间进一步缩小。<br>另外，在初期看来是不可能被耗尽的IP地址，在具体数量的分配上也是非常不均匀的，美国占了一半以上的IP地址数量，特别是一些大型公司比如IBM，申请并获得了1000万个以上的IP地址，但实际上往往用不了，造成非常大的浪费。另一方面，亚洲人口众多，但获得的地址却非常有限，互联网发展起步较晚，地址不足这个问题显得更加突出，进一步地限制了互联网的发展和壮大。<br>（2）互联网骨干路由器的路由表非常庞大<br>由于IPv4发展初期缺乏合理的地址规划，造成地址分配的不连续，导致当今互联网骨干设备的BGP路由表非常庞大，已经达到数十万条的规模，并且还在持续增长中。由于缺乏合理的规划，也导致无法实现进一步的路由汇总，这样对骨干设备的处理能力和内存空间带来较大压力，影响了数据包的转发效率。</p><hr><p>2、IPv6的优势<br>IPv6采用128位地址长度，其地址数量总数可达2128个，它使得地球上的每一粒沙子都可以拥有一个IP地址。这不但解决了网络地址资源数量的问题，同时也为万物互联所限制的IP地址数量扫清了障碍。因此，相比IPv4，IPv6具有诸多优点：<br>（1）地址空间巨大<br>（2）层次化的路由设计<br>（3）效率高，扩展灵活<br>（4）支持即插即用<br>（5）更好的安全性保障<br>（6）引入了流标签的概念</p><hr><p><strong>tip：</strong></p><p>（1）地址空间巨大<br>相比IPv4的地址空间而言，IPv6可以提供2128个地址空间，几乎不会被耗尽，可以满足未来网络的任何应用，比如物联网等新应用。<br>（2）层次化的路由设计<br>IPv6地址规划设计时，吸取了IPv4地址分配不连续带来的问题，采用了层次化的设计方法，前3位固定，第4<del>16位是顶级聚合，理论上，互联网骨干设备上的IPv6路由表只有213=8192条路由信息。<br>（3）效率高，扩展灵活<br>相对于IPv4报头大小的可变成20</del>60Byte，IPv6报头采用定长设计，大小固定为40Byte。相对IPv4报头中数量多达12个的选项，IPv6把报头分为基本报头和扩展报头，基本报头中只包含选路所需要的8个基本选项，很多其他的功能都设计为扩展报头，这样有利于路由器的转发效率，同时可以根据新的需求设计出新的扩展报头，具有良好的扩展性。<br>（4）支持即插即用<br>设备连接到网络中，可以通过自动配置的方式获取网络前缀和参数，并自动结合设备自身的链路地址生成IP地址，简化了网络管理。<br>（5）更好的安全性保障<br>由于IPv6协议通过扩展报头的形式支持IPSec协议，无需借助其他安全加密设备，可以直接为上层数据提供加密和身份验证，保障数据传输的安全。<br>（6）引入了流标签的概念<br>使用IPv6新增加的Flow Label字段，加上相同的源地址和目的地址，可以标记数据包同属于某个相同的流量，业务可以根据不同的数据流进行更细的分类，实现优先级控制，比如基于流的QOS等应用，适合于对连接的服务质量有特殊要求的通信，诸如音频或视频等实时数据传输。</p><hr><h2 id="IPV6的数据包封装"><a href="#IPV6的数据包封装" class="headerlink" title="IPV6的数据包封装"></a>IPV6的数据包封装</h2><p>1、IPv6的数据报封装</p><p><a href="https://imgtu.com/i/Ti7emj"><img src="https://s4.ax1x.com/2021/12/17/Ti7emj.png" alt="Ti7emj.png"></a></p><p>由于IPv4中的报头功能字段过多，路由器查找选路的时候需要读取每一个字段，但往往很多字段都是空的，这样会导致转发效率低下，所以在IPv6中把报文的报头分为基本报头和扩展报头2部分，基本报头中只包含基本的必要属性比如源IP地址、目的IP地址等，扩展功能用扩展报头添加在基本报头的后面。</p><p>2、IPv6基本报头<br>不同于IPv4报头的长度为20~60Byte，IPv6基本报头是定长40Byte，其中包含8个字段。</p><p><a href="https://imgtu.com/i/Ti7YnJ"><img src="https://s4.ax1x.com/2021/12/17/Ti7YnJ.png" alt="Ti7YnJ.png"></a></p><p>3、IPv6基本报头字段解释<br>Version:4bit，指定IPv6，数值=6。<br>Traffic Class:8bit，用来区分不同类型或优先级的IPv6数据包。<br>Flow Label:20bit，用作标识同一个数据流，此字段为IPv6新增字段。<br>Payload Length:16bit，数据包的有效载荷。<br>Next Header:8bit，指明跟在基本报头后面是哪种扩展报头或者上层协议中的协议类型。<br>Source Address:128bit，数据包的源IPv6地址，必须是单播地址。<br>Destination Address:128bit，数据包的目标IPv6地址，可以是单播或组播地址。</p><hr><p><strong>tip：</strong></p><p>Version:4bit，指定IPv6，数值=6。<br>Traffic Class:8bit，流量类别字段的功能跟IPv4中的TOS字段类似，用来区分不同类型或优先级的IPv6数据包，该字段根据RFC2647中定义的差分服务技术，使用了6bit作为DSCP，可以表示的DSCP值的范围为0~63。<br>Flow Label:20bit，用作标识同一个数据流，此字段为IPv6新增字段。由于可以标记一个流中的所有数据包，所以路由器可以利用该字段来辨别一个流，而不用处理流中每个数据包头，提高了处理效率。目前该字段的使用还在试用阶段。<br>Payload Length:16bit，数据包的有效载荷，指报头后的数据内容长度，单位是Byte，最大数值为65535，指IPv6基本报头后面的长度，包含扩展报头部分。该字段和IPv4报文头部中的总长度字段不同点在于，IPv4报头中总长度字段是指报头和数据两部分的长度，而IPv6的有效载荷字段只是指数据部分的长度，不包括IPv6基本报头。<br>Next Header:8bit，指明跟在基本报头后面是哪种扩展报头或者上层协议中的协议类型。如果只有基本报头而无扩展报头，那么该字段的值指示的是数据部分所承载的协议类型，这一点类似于IPv4报头中的协议宇段，而且与IPv4的协议字段使用相同的协议值，比如UDP为6，TCP为17。表7-1列出了常用的上层协议及对应的Next Header值。<br>Hop Limit:8bit，功能类似于IPv4中的TTL字段，最大值为255，报文每经过一跳，该字段值会减1，减到0后数据包被丢弃。对于IPv6来说，此时会发送一条ICMPv6超时消息，以通知数据包的源端数据已经被丢弃。<br>Source Address:128bit，数据包的源IPv6地址，必须是单播地址。<br>Destination Address:128bit，数据包的目标IPv6地址，可以是单播或组播地址。</p><hr><p>4、常见的上层协议及对应的Next Header值</p><table><thead><tr><th>Next Header值</th><th>对应的扩展报头或高层协议类型</th></tr></thead><tbody><tr><td>0</td><td>逐跳选项扩展报头</td></tr><tr><td>6</td><td>TCP</td></tr><tr><td>17</td><td>UDP</td></tr><tr><td>43</td><td>路由选择扩展报头</td></tr><tr><td>44</td><td>分段扩展报头</td></tr><tr><td>50</td><td>ESP扩展报头</td></tr><tr><td>51</td><td>AH扩展报头</td></tr><tr><td>58</td><td>ICMPv6</td></tr><tr><td>60</td><td>目的选项扩展报头</td></tr><tr><td>89</td><td>OSPFv3</td></tr></tbody></table><p>5、IPv6扩展报头<br>IPv6的扩展报头被当作IPv6静载荷的一部分，计算在IPv6基本报头的Payload Length字段内。</p><p><a href="https://imgtu.com/i/Ti7X40"><img src="https://s4.ax1x.com/2021/12/17/Ti7X40.png" alt="Ti7X40.png"></a></p><p>IPv6扩展报头是可选报头，跟在IPv6基本报头后，其作用是取代IPv4报头中的选项宇段，这样可以使得IPv6的基本报头采用定长设计（40Byte），并把IPv4中的部分字段如分段字段独立出来，设计为IPv6分段扩展报头，这样做的好处是大大提高了中间节点对IPv6数据包的转发效率。每个IPv6数据包都可以有0个或者多个扩展报头，每个扩展报头长度都是8Byte的整数倍。IPv6基本报头和扩展报头的Next Header字段表明了紧跟在本报头后面的是什么内容，可能是另一个扩展报头或者是高层协议。<br>目前，RFC2460中定义了6个IPv6扩展报头:逐跳选项报头、目的选项报头、路由报头、分段报头、认证报头、封装安全净载报头。</p><p>6、IPv6扩展报头<br>逐跳选项扩展报头和目的选项扩展报头的数据部分都采用类型-长度-值（TLV）的选项设计。</p><table><thead><tr><th>选项类型Option Type</th><th>选项数据长度Option Data Len</th><th>选项数据Option Data</th></tr></thead></table><p>7、IPv6扩展报头字段解释<br>Option Type:8bit，<br>标识类型，最高2位表示当设备部识别此扩展报头时的处理方法。<br>Opt Data Len:8bit，<br>标识Option Data部分的长度，最大为255，单位是Byte，不包含Option Type和Opt Data Len部分的长度。<br>Option Data:长度可变，最大为255Byte，<br>包含选项的具体数据内容。</p><hr><p><strong>tip：</strong></p><p>Option Type:8bit，标识类型，最高2位表示当设备部识别此扩展报头时的处理方法。<br>00:跳过这个选项。<br>01:丢弃数据包，不通知发送方。<br>10:丢弃数据包，不论目的地址是否为组播，向发送方发1个ICMPv6的错误信息报文。<br>11:丢弃数据包，当目的地址不是组播时，向发送方发1个ICMPv6的错误信息报文。<br>第3位表示在选路过程中，Data部分是否可以被改变。<br>0:表示Option不能被改变。<br>1:表示Option可以被改变。<br>值得注意的是:如果存在认证扩展报头，在计算数据包的校验值时，可变化Data部分需要被当成8bit的全0处理。<br>Opt Data Len:8bit，标识Option Data部分的长度，最大为255，单位是Byte，不包含Option Type和Opt Data Len部分的长度。<br>Option Data:长度可变，最大为255Byte，包含选项的具体数据内容。</p><hr><h2 id="地址的表示方式"><a href="#地址的表示方式" class="headerlink" title="地址的表示方式"></a>地址的表示方式</h2><p>1、IPv6地址的表示方式<br>对于IPv6来说，我们将16位分成1块，一共分为8块，每块用”:”相隔。下面就是一个IPv6地址的完整表达:</p><p><a href="https://imgtu.com/i/TiHGPP"><img src="https://s4.ax1x.com/2021/12/17/TiHGPP.png" alt="TiHGPP.png"></a></p><p>对于IPv4的32位地址，我们习惯分成4块，每块有8位，中间用”.”号相隔，为了方便书写和记忆，一般换算成十进制表示，比如11000000.10101000.00000001.00000001，可以表示为192.168.1.1。这种表达方法可以称为点分十进制。</p><p>2、IPv6地址的表示方式的简化规则1<br>每一个地址块的起始部分的0可以省略掉。</p><p><a href="https://imgtu.com/i/TiHqMD"><img src="https://s4.ax1x.com/2021/12/17/TiHqMD.png" alt="TiHqMD.png"></a></p><p>3、IPv6地址的表示方式的简化规则2<br>有1个或连续多个0组成的地址块可以用”::”取代。</p><p><a href="https://imgtu.com/i/TibJoR"><img src="https://s4.ax1x.com/2021/12/17/TibJoR.png" alt="TibJoR.png"></a></p><p>4、IPv6地址表示方式注意事项<br>在整个地址中，只能出现一次”::”。比如以下完整的IPv6地址:<br>【2001:0000:0000:0001:0000:0000:0000:0001】</p><p>错误的简化表达：<br>【2001::1::1】</p><p>可以正确表示为以下2种表达方式。<br>表达方式1：【2001::1:0:0:0:1】<br>表达方式2：【2001:0:0:1::1】</p><p>由于上述表达方式中出现了2次”::”将导致无法判断具体哪几块地址被省略，会引起歧义</p><p>5、IPv6地址网络位和主机位<br>IPv6地址也分为2部分:网络位和主机位，为了区分这两部分，在IPv6地址后面加上”/数字（十进制）”的组合，数字用来确定从头开始的几位是网络位。<br>例【2001::1/64】</p><h2 id="地址的配置"><a href="#地址的配置" class="headerlink" title="地址的配置"></a>地址的配置</h2><p>案例7-1IPv6的基本配置</p><p>构建如下图所示的实训拓扑，按如下要求完成实训内容：<br>（1）启用路由器的IPv6功能；<br>（2）配置路由器接口的IPv6地址；<br>（3）测试两台路由器的连通性。</p><p><a href="https://imgtu.com/i/TibgYt"><img src="https://s4.ax1x.com/2021/12/17/TibgYt.png" alt="TibgYt.png"></a></p><p>案例7-1配置步骤1<br>在路由器R1启用IPv6功能，在G0/0/1接口上配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ipv6</span><br><span class="line">[R1]interface GigabitEthernet 0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 address 2001::1/64</span><br></pre></td></tr></table></figure><p>在路由器R2启用IPv6功能，在G0/0/1接口上配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ipv6</span><br><span class="line">[R2]interface GigabitEthernet 0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 address 2001::2/64</span><br></pre></td></tr></table></figure><p>案例7-1验证1<br>在路由器上通过【display ipv6 interface brief】命令查看路由器接口的IPv6地址信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ipv6 interface brief</span><br><span class="line">*down: administratively down</span><br><span class="line">(l): loopback</span><br><span class="line">(s): spoofing</span><br><span class="line">Interface                    Physical              Protocol   </span><br><span class="line">GigabitEthernet0/0/1         up                    up         </span><br><span class="line">[IPv6 Address] 2001::1</span><br></pre></td></tr></table></figure><p>案例7-1验证2<br>在路由器上通过【ping】命令测试两台路由器IPv6地址的连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[R1]ping ipv6 2001::2</span><br><span class="line">  PING 2001::2 : 56  data bytes, press CTRL_C to break</span><br><span class="line">    Reply from 2001::2 </span><br><span class="line">    bytes=56 Sequence=1 hop limit=64  time = 90 ms</span><br><span class="line">    Reply from 2001::2 </span><br><span class="line">    bytes=56 Sequence=2 hop limit=64  time = 30 ms</span><br><span class="line"> </span><br><span class="line">  --- 2001::2 ping statistics ---</span><br><span class="line">    5 packet(s) transmitted</span><br><span class="line">    5 packet(s) received</span><br><span class="line">    0.00% packet loss</span><br><span class="line">    round-trip min/avg/max = 10/34/90 ms</span><br></pre></td></tr></table></figure><h1 id="IPV6地址分类"><a href="#IPV6地址分类" class="headerlink" title="IPV6地址分类"></a>IPV6地址分类</h1><h2 id="IPV6地址结构"><a href="#IPV6地址结构" class="headerlink" title="IPV6地址结构"></a>IPV6地址结构</h2><p>1、IPv6地址结构<br>IPv6的地址的结构为：网络前缀+接口ID，网络前缀:相当于IPv4中的网络位，接口ID:相当于IPv4中的主机位。<br>IPv6中较常用的网络大小是64位前缀长度的网络。</p><p><a href="https://imgtu.com/i/Tiqm0H"><img src="https://s4.ax1x.com/2021/12/17/Tiqm0H.png" alt="Tiqm0H.png"></a></p><h2 id="IPV6单播地址"><a href="#IPV6单播地址" class="headerlink" title="IPV6单播地址"></a>IPV6单播地址</h2><p>2、IPv6单播地址<br>IPv6单播地址表示唯一标识一个接口，类似于IPv4的单播地址。发送到单播地址的数据包将被传输到此地址所标识的唯一接口，一个单播地址只能标识一个接口，但一个接口可以有多个单播地址。<br>单播地址可细分为以下几类：<br>链路本地地址<br>唯一本地地址<br>全球单播地址<br>嵌入IPv4地址的IPv6地址</p><p>3、链路本地地址<br>链路本地地址（Link-local）只在同一链路上的节点之间有效，在IPv6启动后就自动生成，使用了特定的前缀FE80::/10，接口ID使用EUI-64自动生成，也可以使用手动配置。<br>例：使用EUI-64将MAC地址为A1-B2-C3-D4-E5-F6的主机的IPv6地址生成过程如下：<br>（1）先将MAC地址拆分为2部分：【A1B2C3】、【D4E5F6】；<br>（2）在MAC地址的中间加上FFFE变成：【A1B2C3FFFED4E5F6】；<br>（3）将第7位求反：【A3B2C3FFFED4E5F6】；<br>（4）EUI-64计算得出的接口ID为：【A3B2:C3FF:FED4:E5F6】。</p><hr><p><strong>tip:</strong></p><p>链路本地地址的引入是IPv6地址的一个非常方便的地方，它可以在节点未配置全球单播地址的前提下，仍然互相通信。<br>链路本地地址只在同一链路上的节点之间有效，在IPv6启动后就自动生成，使用了特定的前缀FE80::/10，接口ID使用EUI-64自动生成，也可以使用手动配置。链路本地地址用于实现无状态自动配置、邻居发现等应用。同时，OSPFv3、RIPng等协议都工作在该地址上。eBGP邻居也可以使用该地址来建立邻居关系。路由表中路由的下一跳或主机的默认网关都是链路本地地址。</p><hr><p>4、唯一本地地址<br>唯一本地地址是IPv6网络中可以自己随意使用的私有网络地址，使用特定的前缀FD00/8。<br>固定前缀：8bit，FD00/8。<br>Global ID：40bit，全球唯一前缀；通过伪随机方式产生。<br>Subnet ID：16bit，工程师根据网络规划自定义的子网ID。<br>Interface ID：64bit，相当于IPv4中的主机位。</p><p><a href="https://imgtu.com/i/TiqrcT"><img src="https://s4.ax1x.com/2021/12/17/TiqrcT.png" alt="TiqrcT.png"></a></p><p>唯一本地地址的设计使私有网络地址具备唯一性，既使任两个使用私有地址的Site互联也不用担心地址会冲突。</p><p>5、全球单播地址<br>全球单播地址相当于IPv4中的公网地址，日前已经分配出去的前3位固定是001，所以已分配的地址范围是2000::/3。<br>001：3bit，目前已分配的固定前缀为001。<br>TLA（Top Level Aggregation）顶级聚合：13bit。<br>RES:8bit，保留使用，为未来扩充TLA或者NLA预留。<br>NLA（Next Level Aggregation）次级聚合：24bit。<br>SLA（Site Level Aggregation）站点级聚合：16bit。</p><p><a href="https://imgtu.com/i/TiOqfI"><img src="https://s4.ax1x.com/2021/12/17/TiOqfI.png" alt="TiOqfI.png"></a></p><p>001：3bit，目前已分配的固定前缀为001。<br>TLA（Top Level Aggregation）顶级聚合：13bit，IPv6的管理机构根据TLA分配不同的地址给某些骨干网的ISP，最大可以得到8192个顶级路由。<br>RES:8bit，保留使用，为未来扩充TLA或者NLA预留。<br>NLA（Next Level Aggregation）次级聚合：24bit，骨干网ISP根据NLA为各个中小ISP分配不同的地址段，中小ISP也可以针对NLA进一步分割不同地址段，分配给不同用户。<br>SLA（Site Level Aggregation）站点级聚合：16bit，公司或企业内部根据SLA把同一大块地址分成不同的网段，分配给各站点使用，一般用作公司内部网络规划，最大可以有65536个子网。</p><p>6、嵌入IPv4地址的IPv6地址-兼容IPv4的IPv6地址<br>这种IPv6地址的低32位携带一个IPv4的单播地址，一般主要使用于IPv4兼容IPv6自动隧道，但由于每个主机都需要一个单播IPv4地址，扩展性差，基本已经被6to4隧道取代。</p><p><a href="https://imgtu.com/i/TiXCkj"><img src="https://s4.ax1x.com/2021/12/17/TiXCkj.png" alt="TiXCkj.png"></a></p><p>7、嵌入IPv4地址的IPv6地址-映射IPv4的IPv6地址<br>这种地址的最前80bit全为0，后面16bit全为1，最后32bit是IPv4地址。这种地址是把IPv4地址用IPv6表示。</p><p><a href="https://imgtu.com/i/TiXA10"><img src="https://s4.ax1x.com/2021/12/17/TiXA10.png" alt="TiXA10.png"></a></p><p>8、嵌入IPv4地址的IPv6地址- 6to4地址<br>6to4地址用在6to4隧道中，它使用IANA指定的2002::/16为前缀，其后是32位的IPv4地址，6to4地址中后80位由用户自己定义，可对其中前16位划分，定义多个IPv6子网。不同的6to4网络使用不同的48位前缀，彼此之间使用其中内嵌的32位IPv4地址的自动隧道来连接。</p><table><thead><tr><th>地址类型</th><th>高位二进制</th><th>十六进制</th></tr></thead><tbody><tr><td>链路本地地址</td><td>1111111010</td><td>FE80::/10</td></tr><tr><td>唯一本地地址</td><td>11111101</td><td>FD00:8</td></tr><tr><td>全球单播地址（已分配）</td><td>001</td><td>2……/4或者3……/4</td></tr><tr><td>全丢单播地址（未分配）</td><td>其余所有地址</td><td></td></tr></tbody></table><h2 id="IPV6组播地址"><a href="#IPV6组播地址" class="headerlink" title="IPV6组播地址"></a>IPV6组播地址</h2><p>1、IPv6组播地址<br>在IPv6中不存在广播报文，要通过组播来实现，广播本身就是组播的一种应用。组播地址标识一组接口，目的地址是组播地址的数据包会被属于该组的所有接口所接收。<br>FF：8bit，IPv6组播地址前8位都是FF/8，以FF::/8开头。<br>Left time：4bit，第1位都是0，格式|0|r|p|t|。<br>Scope：4bit，标识传播范围。<br>Group ID：112bit，组播组标识号。</p><p><a href="https://imgtu.com/i/TiXenU"><img src="https://s4.ax1x.com/2021/12/17/TiXenU.png" alt="TiXenU.png"></a></p><p>FF：8bit,IPv6组播地址前8位都是FF/8，以FF::/8开头。<br>Left time：4bit，第1位都是0，格式|0|r|p|t|。<br>r位：取0表示非内嵌RP，取1表示内嵌RP。<br>p位：取0表示非基于单播前缀的组播地址，取1表示基于单播前缀的组播地址，p位取1，则t位必须为1。<br>t位：取0表示永久分配组播地址，取1表示临时分配组播地址。<br>Scope：4bit，标识传播范围。<br>0001    node（节点）<br>0010    link（链路）<br>0101    Site（站点）<br>1000    organization（组织）<br>1110    global（全球）<br>Group ID：112bit，组播组标识号。</p><p>2、IPv6固定的组播地址</p><table><thead><tr><th>固定组播地址</th><th>IPv6组播地址</th><th>相当于IPv4的哪些地址</th></tr></thead><tbody><tr><td>所有节点的组播地址</td><td>FF02::1</td><td>广播地址</td></tr><tr><td>所有路由器的组播地址</td><td>FF02::2</td><td>224.0.0.2</td></tr><tr><td>所有OSPFv3路由器地址</td><td>FF02::5</td><td>224.0.0.5</td></tr><tr><td>所有OSPFv3DR和BDR</td><td>FF02::6</td><td>224.0.0.6</td></tr><tr><td>所有RP路由器</td><td>FF02::9</td><td>224.0.0.9</td></tr><tr><td>所有PIM路由器</td><td>FF02::D</td><td>224.0.0.13</td></tr></tbody></table><p>3、特殊地址<br>0:0:0:0:0:0:0:0（简化为::）未指定地址:<br>它不能分配给任何节点，表示当前状态下没有地址，如当设备刚接入网络后，本身没有地址，则发送数据包的源地址使用该地址，比如发送RA消息，DAD（重复地址检测）。该地址不能用作目的地址。<br>0:0:0:0:0:0:0:1（简化为::1）环回地址:<br>节点用它作为发送后返回给自己的IPv6报文，不能分配给任何物理接口。</p><h2 id="IPV6任播地址"><a href="#IPV6任播地址" class="headerlink" title="IPV6任播地址"></a>IPV6任播地址</h2><p>1、IPv6任播地址<br>任播的概念最初是在RFC1546（Host Anycasting Service）中提出并定义的，主要为DNS和HTTP提供服务。<br>IPv6中没有为任播规定单独的地址空间，任播地址和单播地址使用相同的地址空间。<br>IPv6任播地址可以同时被分配给多个设备，也就是说多台设备可以有相同的任播地址，以任播地址为目标的数据包会通过路由器的路由表被路由到离源设备最近的拥有该目标地址的设备。</p><p>任播的概念最初是在RFC1546（Host Anycasting Service）中提出并定义的，主要为DNS和HTTP提供服务。IPv6中没有为任播规定单独的地址空间，任播地址和单播地址使用相同的地址空间。IPv6任播地址可以同时被分配给多个设备，也就是说多台设备可以有相同的任播地址，以任播地址为目标的数据包会通过路由器的路由表被路由到离源设备最近的拥有该目标地址的设备。</p><p>2、任播地址示意图</p><p><a href="https://imgtu.com/i/TiXB9I"><img src="https://s4.ax1x.com/2021/12/17/TiXB9I.png" alt="TiXB9I.png"></a></p><p>任播技术的优势在于源节点不需要了解为其提供服务的具体节点，而可以接收特定服务，当一个节点无法工作时，带有任播地址的数据包又被发往其他两个主机节点，从任播成员中选择合适的目的地节点取决于路由协议重新收敛后的路由表情况。<br>任播可以分为基于网络层的任播和基于应用层的任播。两者主要的区别是网络层的任播仅仅依靠网络本身（比如路由表）来选择目标服务器节点，而应用层任播是基于一定的探测手段和算法来选择性能最好的目标服务器节点。RFC2491和RFC2526定义了一些保留的任播地址格式，如子网路由器任播地址，用来满足不同的任播应用访问需求。</p><h1 id="IPV6路由"><a href="#IPV6路由" class="headerlink" title="IPV6路由"></a>IPV6路由</h1><h2 id="IPV6静态路由的配置"><a href="#IPV6静态路由的配置" class="headerlink" title="IPV6静态路由的配置"></a>IPV6静态路由的配置</h2><p>案例7-2：IPv6静态路由的配置<br>在IPv6网络中，跨网段的IPv6主机通信同样需要有路由表进行转发。<br>（1）路由器启用IPv6功能。<br>（2）配置IPv6地址。<br>（3）配置IPv6静态路由。</p><p><a href="https://imgtu.com/i/TiX6u8"><img src="https://s4.ax1x.com/2021/12/17/TiX6u8.png" alt="TiX6u8.png"></a></p><p>案例7-2配置步骤1<br>在路由器R1的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ipv6</span><br><span class="line">[R1]interface GigabitEthernet 0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 address 2001::1/64</span><br><span class="line">[R1]interface GigabitEthernet 0/0/2</span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 address 2002::1/64</span><br></pre></td></tr></table></figure><p>案例7-2配置步骤2<br>路由器R2的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ipv6</span><br><span class="line">[R2]interface GigabitEthernet 0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 address 2001::2/64</span><br><span class="line">[R2]interface GigabitEthernet 0/0/2</span><br><span class="line">[R2-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R2-GigabitEthernet0/0/2]ipv6 address 2003::1/64</span><br></pre></td></tr></table></figure><p>案例7-2配置步骤3<br>在路由器R1上配置去往2003::/64的静态路由，下一跳指向2001::2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1]ipv6 route-static 2003:: 64 2001::2</span><br></pre></td></tr></table></figure><p>在路由器R2上配置去往2002::/64的静态路由，下一跳指向2001::1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R2]ipv6 route-static 2002:: 64 2001::1</span><br></pre></td></tr></table></figure><p>案例7-2案例验证1<br>配置PC1的IPv6地址，使用【ipconfig】命令查看地址配置状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ipconfig</span><br><span class="line"> </span><br><span class="line">Link local IPv6 address...........: fe80::5689:98ff:fec2:7ef2</span><br><span class="line">IPv6 address......................: 2002::2 / 64</span><br><span class="line">IPv6 gateway......................: 2002::1</span><br><span class="line">IPv4 address......................: 0.0.0.0</span><br><span class="line">Subnet mask.......................: 0.0.0.0</span><br><span class="line">Gateway...........................: 0.0.0.0</span><br><span class="line">Physical address..................: 54-89-98-C2-7E-F2</span><br><span class="line">DNS server........................:</span><br></pre></td></tr></table></figure><p>案例7-2案例验证2<br>配置PC2的IPv6地址，使用【ipconfig】命令查看地址配置状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ipconfig</span><br><span class="line"> </span><br><span class="line">Link local IPv6 address...........: fe80::5689:98ff:fea9:6dc3</span><br><span class="line">IPv6 address......................: 2003::2 / 64</span><br><span class="line">IPv6 gateway......................: 2003::1</span><br><span class="line">IPv4 address......................: 0.0.0.0</span><br><span class="line">Subnet mask.......................: 0.0.0.0</span><br><span class="line">Gateway...........................: 0.0.0.0</span><br><span class="line">Physical address..................: 54-89-98-A9-6D-C3</span><br><span class="line">DNS server........................:</span><br></pre></td></tr></table></figure><p>案例7-2案例验证3<br>在PC1上【ping】PC2的IPv6地址，测试网络的连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 2003::2</span><br><span class="line">Ping 2003::2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 2003::2: bytes=32 seq=1 hop limit=253 time=32 ms</span><br><span class="line">From 2003::2: bytes=32 seq=2 hop limit=253 time=15 ms</span><br><span class="line">From 2003::2: bytes=32 seq=3 hop limit=253 time=32 ms</span><br><span class="line">From 2003::2: bytes=32 seq=4 hop limit=253 time=15 ms</span><br><span class="line">From 2003::2: bytes=32 seq=5 hop limit=253 time=16 ms</span><br><span class="line">--- 2003::2 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 15/22/32 ms</span><br></pre></td></tr></table></figure><h2 id="默认路由的配置"><a href="#默认路由的配置" class="headerlink" title="默认路由的配置"></a>默认路由的配置</h2><p>案例7-3：IPv6默认路由的配置<br>在IPv6网络中，当路由器的出口仅有一个接口时，可以使用IPv6默认路由代替静态路由。<br>（1）路由器启用IPv6功能。<br>（2）配置IPv6地址。<br>（3）配置IPv6路由。</p><p><a href="https://imgtu.com/i/TijHzt"><img src="https://s4.ax1x.com/2021/12/17/TijHzt.png" alt="TijHzt.png"></a></p><p>案例7-3配置步骤1<br>在路由器R1的接口上启用IPv6功能，并配置IPv6地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ipv6</span><br><span class="line">[R1]interface GigabitEthernet 0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 address 2001::1/64</span><br><span class="line">[R1]interface GigabitEthernet 0/0/2</span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 address 2003::1/64</span><br></pre></td></tr></table></figure><p>案例7-3配置步骤2<br>路由器R2的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ipv6</span><br><span class="line">[R2]interface GigabitEthernet 0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R2-GigabitEthernet0/0/1]ipv6 address 2002::1/64</span><br><span class="line">[R2]interface GigabitEthernet 0/0/2</span><br><span class="line">[R2-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R2-GigabitEthernet0/0/2]ipv6 address 2004::1/64</span><br></pre></td></tr></table></figure><p>案例7-3配置步骤3<br>路由器R3的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R3</span><br><span class="line">[R3]ipv6</span><br><span class="line">[R3]interface GigabitEthernet 0/0/1</span><br><span class="line">[R3-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R3-GigabitEthernet0/0/1]ipv6 address 2001::2/64</span><br><span class="line">[R3]interface GigabitEthernet 0/0/2</span><br><span class="line">[R3-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R3-GigabitEthernet0/0/2]ipv6 address 2002::2/64</span><br></pre></td></tr></table></figure><p>案例7-3配置步骤4<br>在路由器R1上配置默认路由，下一跳指向2001::2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1] ipv6 route-static :: 0 2001::2</span><br></pre></td></tr></table></figure><p>在路由器R2上配置默认路由，下一跳指向2002::2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R2] ipv6 route-static :: 0 2002::2</span><br></pre></td></tr></table></figure><p>在路由器R3上配置两条静态路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R3]ipv6 route-static 2003:: 64 2001::1</span><br><span class="line">[R3]ipv6 route-static 2004:: 64 2002::1</span><br></pre></td></tr></table></figure><p>案例7-3案例验证1<br>配置PC1的IPv6地址，使用【ipconfig】命令查看地址配置状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ipconfig</span><br><span class="line"> </span><br><span class="line">Link local IPv6 address...........: fe80::5689:98ff:fe6f:58c1</span><br><span class="line">IPv6 address......................: 2003::2 / 64</span><br><span class="line">IPv6 gateway......................: 2003::1</span><br><span class="line">IPv4 address......................: 0.0.0.0</span><br><span class="line">Subnet mask.......................: 0.0.0.0</span><br><span class="line">Gateway...........................: 0.0.0.0</span><br><span class="line">Physical address..................: 54-89-98-6F-58-C1</span><br><span class="line">DNS server........................:</span><br></pre></td></tr></table></figure><p>案例7-3案例验证2<br>配置PC2的IPv6地址，使用【ipconfig】命令查看地址配置状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ipconfig</span><br><span class="line"> </span><br><span class="line">Link local IPv6 address...........: fe80::5689:98ff:fe58:3198</span><br><span class="line">IPv6 address......................: 2004::2 / 64</span><br><span class="line">IPv6 gateway......................: 2004::1</span><br><span class="line">IPv4 address......................: 0.0.0.0</span><br><span class="line">Subnet mask.......................: 0.0.0.0</span><br><span class="line">Gateway...........................: 0.0.0.0</span><br><span class="line">Physical address..................: 54-89-98-58-31-98</span><br><span class="line">DNS server........................:</span><br></pre></td></tr></table></figure><p>案例7-3案例验证3<br>在PC1上【ping】PC2的IPv6地址，测试网络的连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 2004::2</span><br><span class="line"> </span><br><span class="line">Ping 2004::2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 2004::2: bytes=32 seq=1 hop limit=252 time=32 ms</span><br><span class="line">From 2004::2: bytes=32 seq=2 hop limit=252 time=15 ms</span><br><span class="line">From 2004::2: bytes=32 seq=3 hop limit=252 time=32 ms</span><br><span class="line"></span><br><span class="line">--- 2004::2 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 15/25/32 ms</span><br></pre></td></tr></table></figure><h2 id="汇总路由的配置"><a href="#汇总路由的配置" class="headerlink" title="汇总路由的配置"></a>汇总路由的配置</h2><p>案例7-4：IPv6汇总路由的配置<br>在IPv6网络中，当多条路由的下一跳地址相同，且存在相同的前缀时，可以将路由进行汇总。<br>（1）创建VLAN并将接口加入VLAN。<br>（2）所有设备启用IPv6功能。<br>（3）并配置IPv6地址。<br>（4）配置IPv6路由。</p><p><a href="https://imgtu.com/i/TivMS1"><img src="https://s4.ax1x.com/2021/12/17/TivMS1.png" alt="TivMS1.png"></a></p><p>案例7-4配置步骤1<br>在交换机S1上创建VLAN10\20\30\100，并将接口分别加入到VLAN10\20\30\100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ipv6</span><br><span class="line">[R1]interface GigabitEthernet 0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 address 2001::1/64</span><br><span class="line">[R1]interface GigabitEthernet 0/0/2</span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/2]ipv6 address 2003::1/64</span><br></pre></td></tr></table></figure><p>案例7-4配置步骤2<br>在交换机S1的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[S1]ipv6</span><br><span class="line">[S1]int Vlanif 10</span><br><span class="line">[S1-Vlanif10]ipv6 enable </span><br><span class="line">[S1-Vlanif10]ipv6 address 2001:0:10::1/64</span><br><span class="line">[S1-Vlanif10]quit</span><br><span class="line">[S1]interface vlan 20</span><br><span class="line">[S1-Vlanif20]ipv6 enable </span><br><span class="line">[S1-Vlanif20]ipv6 address 2001:0:20::1/64</span><br><span class="line">[S1-Vlanif20]quit</span><br><span class="line">[S1]interface Vlanif 30</span><br><span class="line">[S1-Vlanif30]ipv6 enable </span><br><span class="line">[S1-Vlanif30]ipv6 address 2001:0:30::1/64</span><br><span class="line">[S1-Vlanif30]quit</span><br><span class="line">[S1]int Vlanif 100</span><br><span class="line">[S1-Vlanif100]ipv6 enable </span><br><span class="line">[S1-Vlanif100]ipv6 address 2001::1/64</span><br><span class="line">[S1-Vlanif100]quit</span><br></pre></td></tr></table></figure><p>案例7-4配置步骤3<br>在路由器R1的接口上启用IPv6功能，并配置IPv6地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ipv6</span><br><span class="line">[R1]interface GigabitEthernet 0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 enable </span><br><span class="line">[R1-GigabitEthernet0/0/1]ipv6 address 2001::2/64</span><br></pre></td></tr></table></figure><p>案例7-4配置步骤4<br>（4）在交换机S1上配置默认路由，下一跳指向2001::2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[S1] ipv6 route-static :: 0 2001::2</span><br></pre></td></tr></table></figure><p>（5）在路由器R1上配置汇总后的静态路由，下一跳指向2002::1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R1] ipv6 route-static 2001:: 32 2001::1</span><br></pre></td></tr></table></figure><p>案例7-4案例验证1<br>配置完成后，可以在R1上使用【display ipv6 routing-table】命令查看IPv6路由表信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ipv6 routing-table </span><br><span class="line">Routing Table : Public</span><br><span class="line">Destinations : 5Routes : 5</span><br><span class="line"> </span><br><span class="line"> Destination: 2001::PrefixLength: 32</span><br><span class="line"> NextHop: 2001::1Preference: 60</span><br><span class="line"> Cost: 0Protocol: Static</span><br><span class="line"> RelayNextHop: ::TunnelID: 0x0</span><br><span class="line"> Interface: GigabitEthernet0/0/1Flags: RD</span><br><span class="line"> </span><br><span class="line"> Destination: 2001::PrefixLength: 64</span><br><span class="line"> NextHop: 2001::2Preference: 0</span><br><span class="line"> Cost: 0Protocol: Direct</span><br><span class="line"> RelayNextHop: ::TunnelID: 0x0</span><br><span class="line"> Interface: GigabitEthernet0/0/1Flags: D</span><br><span class="line"> </span><br><span class="line"> Destination: 2001::2PrefixLength: 128</span><br><span class="line"> NextHop: ::1Preference: 0</span><br><span class="line"> Cost: 0Protocol: Direct</span><br><span class="line"> RelayNextHop: ::TunnelID: 0x0</span><br><span class="line"> Interface: GigabitEthernet0/0/1Flags: D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.华为1+X-网络安全技术</title>
      <link href="2021/12/17/%E5%8D%8E%E4%B8%BA1+X/6.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/"/>
      <url>2021/12/17/%E5%8D%8E%E4%B8%BA1+X/6.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-网络安全技术</p><h1 id="访问控制列表"><a href="#访问控制列表" class="headerlink" title="访问控制列表"></a>访问控制列表</h1><h2 id="ACL的基本原理"><a href="#ACL的基本原理" class="headerlink" title="ACL的基本原理"></a>ACL的基本原理</h2><p><strong>1、ACL的基本概念</strong><br>         访问控制列表ACL（Access Control List）是由一系列规则组成的集合，ACL通过这些规则对报文进行分类，从而使设备可以对不同类报文进行不同的处理。<br>         一个ACL通常由若干条“deny｜permit”语句组成，每条语句就是该ACL的一条规则，每条语句中的“deny｜permit”就是与这条规则相对应的处理动作。处理动作“permit”的含义是“允许”，处理动作“deny”的含义是“拒绝”。<br>          ACL是一种应用非常广泛的网络安全技术，配置了ACL的网络设备的工作过程可以分为以下两个步骤。<br>（1）根据事先设定好的报文匹配规则对经过该设备的报文进行匹配；<br>（2）对匹配的报文执行事先设定好的处理动作。</p><p>特别需要说明的是，ACL技术总是与其他技术结合在一起使用的，因此，所结合的技术不同，“允许（ permit）”及“拒绝（deny）”的内涵及作用也会不同。例如，当ACL技术与流量过滤技术结合使用时，“permit”就是“允许通行”的意思，“deny”就是“拒绝通行”的意思。</p><p><strong>2、ACL的规则</strong><br>         ACL负责管理用户配置的所有规则，并提供报文匹配规则的算法。ACL的规则管理的基本思想如下：<br>①每个ACL作为一个规则组，一般可以包含多个规则。<br>②ACL中的每一条规则通过规则ID（rule-id）来标识，规则ID可以自行设置，也可以由系统根据步长自动生成，即设备会在创建ACL的过程中自动为每一条规则分配一个ID。<br>③默认情况下，ACL中的所有规则均按照规则ID从小到大的顺序与规则进行匹配。<br>④规则ID之间会留下一定的间隔。如果不指定规则ID时，具体间隔大小由“ACL的步长”来设定。</p><p>（④规则ID之间会留下一定的间隔。例如，将规则编号的步长设定为10（注：规则编号的步长的默认值为5），则规则编号将按照10、20、30、40 …这样的规律自动进行分配。如果将规则编号的步长设定为2，则规则编号将按照2、4、6、8 …这样的规律自动进行分配。步长的大小反映了相邻规则编号之间的间隔大小。间隔的存在，实际上是为了方便在两个相邻的规则之间插入新的规则。）</p><p>3、ACL的规则匹配<br>           配置了ACL的设备在接收到一个报文之后，会将该报文与ACL中的规则逐条进行匹配。如果不能匹配上当前这条规则，则会继续尝试去匹配下一条规则。一旦报文匹配上了某条规则，则设备会对该报文执行这条规则中定义的处理动作（permit或deny），并且不再继续尝试与后续规则进行匹配。如果报文不能匹配上ACL的任何一条规则，则设备会对该报文执行“permit”这个处理动作。</p><hr><p><strong>tip:</strong></p><p>在将一个数据包和访问控制列表的规则进行匹配的时候，由规则的匹配顺序决定规则的优先级。华为设备支持以下两种匹配顺序。<br>（1）匹配顺序按照用户配置ACL规则的先后序列进行匹配，先配置的规则先匹配。根据ACL中语句的顺序，把数据包和判断条件进行比较。一旦匹配，就采用语句中的动作并结束比较过程，不再检查以后的其他条件判断语句。如果没有任何语句匹配，数据包将被放行。<br>（2）自动排序（auto）使用“深度优先”的原则进行匹配。“深度优先”根据ACL规则的精确度排序，如果匹配条件（如协议类型、源和目的IP地址范围等）限制越严格，规则就越先匹配。基本IPv4的ACL的“深度优先”顺序判断原则及步骤如下：<br>①判断规则中是否带VPN实例，带VPN实例的规则优先。<br>②比较源IP地址范围，源IP地址范围小（即通配符掩码中“0”位的数量多）的规则优先。例如，“1.1.1.1 0.0.0.0”指定了一个IP地址1.1.1.1，而“1.1.1.0 0.0.0.255”指定了一个网段1.1.1.1~1.1.1.255。因前者指定的地址范围比后者小，所以在规则中优先。<br>③如果源IP地址范围相同，则规则ID(rule-id)小的规则优先。</p><hr><p>4、ACL分类<br>        根据ACL所具备的特性不同，我们可以将ACL分成不同的类型。分别是基本ACL、高级ACL、二层ACL、用户自定义ACL，其中应用最为广泛的是基本ACL和高级ACL。各种类型ACL的区别，如表所示。</p><table><thead><tr><th>ACL类型</th><th>编号范围</th><th>规则制订的主要依据</th></tr></thead><tbody><tr><td>基本ACL</td><td>2000～2999</td><td>报文的源IP地址等信息。</td></tr><tr><td>高级ACL</td><td>3000～3999</td><td>报文的源IP地址、目的IP地址、报文优先级、IP承载的协议类型及特性等三、四层信息。</td></tr><tr><td>二层ACL</td><td>4000～4999</td><td>报文的源MAC地址、目的MAC地址、802.1p优先级、链路层协议类型等二层信息</td></tr><tr><td>用户自定义ACL</td><td>5000～5999</td><td>用户自定义报文的偏移位置和偏移量、从报文中提取出相关内容等信息</td></tr></tbody></table><h2 id="基本ACL和高级ACL"><a href="#基本ACL和高级ACL" class="headerlink" title="基本ACL和高级ACL"></a>基本ACL和高级ACL</h2><p>1、基本ACL的命令格式<br>基本ACL只能基于IP报文的源IP地址、报文分片标记和时间段信息来定义规则。配置基本ACL规则的命令具有如下结构：<br>rule[rule-id]{permit|deny}[source{source-address source-wildcard｜any}|fragment|logging|time-range time-name]</p><p>对命令中各个组成项的解释如下。<br>rule表示这是一条规则。<br>rule-id表示这条规则的编号。<br>permit|deny是一个“二选一”选项，表示与这条规则相关联的处理动作。用deny命令表示“拒绝”；用permit命令表示“允许”。<br>source表示源IP地址信息。<br>source-address表示具体的源IP地址。<br>source- wildcard表示与source-address相对应的通配符。source-wildcard和source-address结合使用，可以确定出一个IP地址的集合。特殊情况下，该集合中可以只包含一个IP地址。<br>any表示源IP地址可以是任何地址。<br>fragment表示该规则只对非首片分片报文有效。<br>logging表示需要将匹配上该规则的IP报文进行日志记录。<br>time-range time-name表示该规则的生效时间段为time-name，具体的使用方法在这里不做描述。  这部分内容是不是需要调整位置？</p><p>2、案例6-1 基本ACL的配置<br>（1）案例背景与要求：某公司网络包含了外来人员办公区、项目部办工区和财务部办公区域。在外来人员办公区中，有一台专门供外来人员使用的计算机PC2，IP地址为192.168.2.1/24，出于网络安全方面的考虑，我们需要禁止财务部办公区接收外来人员发送的IP报文。为了满足这样的网络需求，我们可以在路由器R1上配置基本ACL。基本ACL可以根据源IP地址信息识别出外来办公人员发出的IP报文，然后在GE0/0/3接口的出方向（Outbound方向）上拒绝放行这样的IP报文。</p><p>​        基本ACL的配置示意图如下。</p><p><a href="https://imgtu.com/i/TicI6x"><img src="https://s4.ax1x.com/2021/12/17/TicI6x.png" alt="TicI6x.png"></a></p><p>（2）案例配置过程<br>①配置路由器R1。首先，我们在路由器R1的系统视图下，创建一个编号为2000的基本ACL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]</span><br></pre></td></tr></table></figure><p>②然后，在ACL 2000的视图下创建如下的规则。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-basic-2000]rule deny source 192.168.2.1 0.0.0.0</span><br><span class="line">[R1-acl-basic-2000]</span><br></pre></td></tr></table></figure><p>这条规则的含义是拒绝源IP地址为192.168.2.1的IP报文。</p><p>③最后，使用报文过滤技术中的traffic-filter命令将ACL 2000应用在路由器R1的GE0/0/3接口的出方向上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-basic-2000]quit</span><br><span class="line">[R1]interface gigabitethernet 0/0/3</span><br><span class="line">[R1-GigabitEthernet0/0/3]traffic-filter outbound acl 2000</span><br><span class="line">[R1-GigabitEthernet0/0/3]</span><br></pre></td></tr></table></figure><p>通过上面的配置，源IP地址为192.168.2.1的IP报文将无法在出方向上通过路由器R1的GE0/0/3接口，这样就实现了安全策略的要求。</p><p>3、高级ACL的命令格式<br>高级ACL可以根据IP报文的源IP地址、IP报文的目的IP地址、IP报文的协议字段的值、IP报文的优先级的值、IP报文的长度值、TCP报文的源端口号、TCP报文的目的端口号、UDP报文的源端口号、UDP报文的目的端口号等信息来定义规则。基本ACL的功能只是高级ACL的功能的一个子集，高级ACL可以比基本ACL定义出更精准、更复杂、更灵活的规则。<br>下面是针对所有IP报文的一种简化了的配置命令格式。<br>rule[rule-id]{permit|deny}ip[destination{destination-address destination-wildcard|any}][source{source-address source-wildcard|any}]</p><p>高级ACL中规则的配置比基本ACL中规则的配置要复杂得多，且配置命令的格式也会因IP报文的载荷数据的类型不同而不同。例如，针对ICMP报文、TCP报文、UDP报文等不同类型的报文，其相应的配置命令的格式也是不同的。</p><p>命令相关解释如下：<br>destination表示目的IP地址信息。<br>destination-address表示具体的目的IP地址。<br>destination-wildcard表示与destination-address相对应的通配符。<br>destination-wildcard表示与destination-address结合使用，可以确定出一个IP地址的集合。特殊情况下，该集合中可以只包含一个IP地址。<br>与基本ACL命令格式相同部分的使用方法在这里不做描述。</p><p>4、案例6-2 高级ACL的配置<br>（1）案例背景与要求：本配置示例的网络结构与基本ACL的网络结构基本一样，所不同的是，我们要求外来人员无法接收到来自财务部办公区的IP报文B。在这种情况下，我们可以在路由器R1上配置高级ACL。高级ACL可以根据目的IP地址信息识别去往目的地为外来人员办公区的IP报文，然后在GE0/0/3接口的入方向（Inbound方向）上拒绝放行这样的IP报文。</p><p>高级ACL的配置示意图如下。</p><p><a href="https://imgtu.com/i/TigPHS"><img src="https://s4.ax1x.com/2021/12/17/TigPHS.png" alt="TigPHS.png"></a></p><p>（2）案例配置过程<br>①置路由器R1。首先，我们在路由器R1的系统视图下创建一个编号为3000的ACL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]acl 3000</span><br><span class="line">[R1-acl-adv-3000]</span><br></pre></td></tr></table></figure><p>（2）案例配置过程<br>②然后，在ACL3000的视图下创建如下的规则。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-adv-3000]rule deny ip destination 192.168.2.1 0.0.0.0</span><br><span class="line">[R1-acl-adv-3000]</span><br></pre></td></tr></table></figure><p>这条规则的含义是拒绝目的IP地址为192.168.2.1的IP报文。</p><p>（2）案例配置过程<br>③最后，使用报文过滤技术中的 traffic-filter命令将ACL 3000应用在路由器R1的GE0/0/3接口的入方向上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-adv-3000]quit</span><br><span class="line">[R1]interface gigabitethernet 0/0/3</span><br><span class="line">[R1-GigabitEthernet0/0/3]traffic-filter inbound acl 3000</span><br><span class="line">[R1-GigabitEthernet0/0/3]</span><br></pre></td></tr></table></figure><p>通过上面的配置，目的IP地址为192.168.2.1的IP报文将无法在入方向上通过路由器R1的GE0/0/3接口，这样就实现了安全策略的要求。</p><h2 id="ACL的典型应用"><a href="#ACL的典型应用" class="headerlink" title="ACL的典型应用"></a>ACL的典型应用</h2><p>1、案例6-3 基本ACL配置实例<br>（1）案例背景与要求：Jan16公司有网管办公区、市场部办公区、项目部办公区、财务部办公区和服务器区。出于网络安全方面的考虑，我们希望只有网管办公区的PC1才能通过Telnet方式登录到路由器R1上，其他区域的PC都不能通过Telnet方式登录到路由器R1。公司基础网络拓扑如图所示。</p><p><a href="https://imgtu.com/i/Tigmj0"><img src="https://s4.ax1x.com/2021/12/17/Tigmj0.png" alt="Tigmj0.png"></a></p><p>（2）案例配置思路<br>①在路由器R1上创建基本ACL。<br>②在制定基本ACL规则。<br>③在路由器的VTY（Virtual Type Terminal）上应用所配置的基本ACL。</p><p>（3）案例配置过程<br>①在路由器R1上创建ACL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Router&gt;system-view</span><br><span class="line">[R1] acl 2000</span><br><span class="line">[R1-acl-basic-2000]</span><br></pre></td></tr></table></figure><p>要在路由器R1上创建ACL，必须首先进入系统视图，然后执行命令acl acl-number。对于基本ACL，acl-number的值必须在2000~2999的范围内，这里确定为2000。</p><p>创建了基本ACL 2000后，我们便可以使用rule命令来制定相应的规则。首先，我们制定一条规则：允许源IP地址为192.168.4.1的PC1的IP报文；然后，我们再制定一条规则：拒绝（deny）源IP地址为任意地址的IP报文。</p><p>②配置路由器R1的允许规则和拒绝规则。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-basic-2000]rule permit source 192.168.4.1 0</span><br><span class="line">[R1-acl-basic-2000]rule deny source any</span><br></pre></td></tr></table></figure><p>③制定完路由器R1的允许规则和拒绝规则之后，我们可以使用 display acl 2000命令来查看ACL 2000的配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1-acl-basic- 2000]quit</span><br><span class="line">[R1] quit</span><br><span class="line">&lt;R1&gt; display acl 2000</span><br><span class="line">Basic ACL 2000, 2 rules</span><br><span class="line">ACL&#x27;s step is 5</span><br><span class="line">rule 5 permit source 192.168.4.1 0 (0 times matched)</span><br><span class="line">rule 10 deny (0 times matched)</span><br></pre></td></tr></table></figure><p>从回显信息中我们可以看到，基本ACL 2000中已经存在两条规则，路由器R1为这两条规则自动分配的规则编号分别是5和10。另外，回显信息中的“ACL’s step is 5”表示该ACL的规则编号的步长为5，两个“0 times matched”表示该ACL的两条规则的匹配次数都为0（这是因为我们还没有把这个ACL应用到路由器上）。</p><p>④在路由器R1的VTY上应用ACL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;system-view</span><br><span class="line">[R1]user-interface vty 0 4</span><br><span class="line">[R1-ui-vty0-4]acl 2000 inbound</span><br></pre></td></tr></table></figure><p>（4）案例验证<br>①在PC1上验证Telnet功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;PC&gt; telnet 192.168.4.254</span><br><span class="line">Trying 192.168.4.254 . . .</span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Connected to 192.168.4.254 . . .</span><br><span class="line">Info：The max number of VTY users is 10, and the number of current VTY users on line is 1</span><br><span class="line">The current login time is 2020-01-22 09: 08: 00</span><br></pre></td></tr></table></figure><p>主要从匹配规则和不匹配规则的两个方面进行验证，我们先在网管办公区的PC1上使用 Telnet方式登录路由器，发现可以正常登录。</p><p>②在路由器上重新查看ACL 2000的配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt; display acl 2000</span><br><span class="line">Basic ACL 2000，2 rules</span><br><span class="line">ACL&#x27;s step is 5</span><br><span class="line">rule 5 permit source 192.168.4.1 0(1 times matched)</span><br><span class="line">rule 10 deny(0 times matched)</span><br></pre></td></tr></table></figure><p>从回显信息中我们可以看到，第一条规则的匹配次数为1，这说明网管办公区的PC1所发出的IP报文已经匹配上了这条规则。</p><p>③在市场部PC上验证Telnet功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;PC&gt; telnet 192.168.2.254</span><br><span class="line">Trying 192.168.2.254 . . .</span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Error: Failed to connect to the remote host.</span><br></pre></td></tr></table></figure><p>④再次在路由器R1上查看ACL 2000的配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;display acl 2000</span><br><span class="line">Basic ACL 2000, 2 rules</span><br><span class="line">ACL&#x27;s step is 5</span><br><span class="line">rule 5 permit source 192.168.4.1 0(1 times matched)</span><br><span class="line">rule 10 deny(1 times matched)</span><br></pre></td></tr></table></figure><p>从回显信息中我们可以看到，第二条规则的匹配次数也变为了1，这说明刚才尝试 Telnet登录的PC2所发出的IP报文匹配上了第二条规则，但该报文被直接丢弃了。</p><p>2、案例6-4 高级ACL配置示例<br>（1）案例背景与要求：如图所示网络拓扑，在路由器R1和R2上配置OSPF协议实现网络通信。在路由器R2上配置高级ACL，要求如下：<br>①允许主机PC1访问路由器R2的TELNET服务。<br>②允许主机PC2访问路由器R2的的FTP服务。</p><p><a href="https://imgtu.com/i/Ti2kqK"><img src="https://s4.ax1x.com/2021/12/17/Ti2kqK.png" alt="Ti2kqK.png"></a></p><p>①配置路由器R1和R2的接口IP、OSPF协议等，实现全网通信。<br>②在路由器R2上创建高级ACL服务。<br>③在路由器R2的GE0/0/0接口的入方向和VTY（Virtual Type Terminal）上应用所配置的高级ACL服务。</p><p>（3）案例配置过程<br>①配置路由器R2的高级ACL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt; system-view</span><br><span class="line">[R2] acl 3000</span><br><span class="line">[R2-acl-adv-3000] rule 5 permit tcp source 192.168.1.1 0.0.0.0 destination 10.10.1.2 0.0.0.0 destination-port eq 23</span><br><span class="line">[R2-acl-adv-3000]rule 10 permit tcp source 192.168.2.1 0.0.0.0 destination 10.10.2.253 0.0.0.0 destination-port range 20 21</span><br><span class="line">[R2-acl-adv-3000]rule 15 deny ip</span><br></pre></td></tr></table></figure><p>要在路由器R2上创建高级ACL，必须首先进入系统视图，然后执行【acl acl-number】命令。对于高级ACL，acl-number的值必须在3000~3999的范围内，我们这里确定为3000。创建了高级ACL 3000后，我们便可以使用rule命令来制定相应的规则。</p><p>②在路由器R2的GE0/0/0接口应用ACL 3000</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R2]interface GigabitEthernet0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]traffic-filter inbound acl 3000</span><br></pre></td></tr></table></figure><p>③在路由器R2的VTY上应用ACL 3000</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;system-view</span><br><span class="line">[R2]user-interface vty 0 4</span><br><span class="line">[R2-ui-vty0-4]acl 3000 inbound    </span><br></pre></td></tr></table></figure><p>（4）案例验证<br>①在路由器上使用 display acl 3000命令来查看ACL 3000的配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[R2-acl-adv-3000]display acl 3000</span><br><span class="line">Advanced ACL 3000, 3 rules</span><br><span class="line">Acl&#x27;s step is 5</span><br><span class="line"> rule 5 permit tcp source 192.168.1.1 0.0.0.0 destination 10.10.1.0 0.0.0.0 </span><br><span class="line">destination-port eq telnet </span><br><span class="line"> rule 10 permit tcp source 192.168.2.1 0.0.0.0 destination 10.10.2.253 0.0.0.0</span><br><span class="line"> destination-port range ftp-data ftp </span><br><span class="line"> rule 15 deny ip</span><br></pre></td></tr></table></figure><p>从回显信息中我们可以看到，高级ACL 3000中已经存在3条规则，路由器Router为这两条规则自动分配的规则编号分别是5、10和15。另外，回显信息中的“ACL’s step is 5”表示该ACL的规则编号的步长为5。</p><p>（4）案例验证<br>②我们在主机PC1上使用Telnet方式登录路由器，发现可以正常登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;PC&gt; telnet 10.10.1.2</span><br><span class="line">Trying 10.10.1.2. . .</span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Connected to 10.10.1.2 . . .</span><br><span class="line">Info：The max number of VTY users is 10, and the number of current VTY users on line is I</span><br><span class="line">The current login time is 2019-12-09 03: 09: 00</span><br></pre></td></tr></table></figure><p>③我们在主机PC2上登录Server1的FTP，发现可以正常登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;PC&gt; ftp 10.10.2.253   </span><br><span class="line">Trying 10.10.2.253 ...</span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Connected to 10.10.2.253.</span><br><span class="line">220 FTP service ready.</span><br><span class="line">User(10.10.2.253:(none)):huawei</span><br><span class="line">331 Password required for huawei.</span><br><span class="line">Enter password:</span><br><span class="line">230 User logged in.</span><br></pre></td></tr></table></figure><p>④我们在主机PC2上使用 Telnet方式登录路由器，发现无法正常登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;PC&gt; telnet 10.10.1.2</span><br><span class="line">Press CTRL_] to quit telnet mode</span><br><span class="line">Trying 10.10.1.2 ...</span><br><span class="line">Error: Can&#x27;t connect to the remote host</span><br></pre></td></tr></table></figure><h1 id="网络地址转换NAT"><a href="#网络地址转换NAT" class="headerlink" title="网络地址转换NAT"></a>网络地址转换NAT</h1><h2 id="NAT的工作原理"><a href="#NAT的工作原理" class="headerlink" title="NAT的工作原理"></a>NAT的工作原理</h2><p>1、NAT的基本概念<br>（1）NAT的概念<br>         NAT的英文全称是“Network Address Translation”，即“网络地址转换”，它是一个IETF(Internet Engineering Task Force, Internet工程任务组)标准，NAT是一种把内部私有网络地址转换成合法的外部公有网络地址的技术。<br>由于当前TCP/IP协议版本是IPv4，它具有天生的缺陷，就是IP地址数量不够多，难以满足目前爆炸性增长的IP需求。<br>          如果专用网络的计算机要访问Internet，则组织机构在连接Internet的设备上至少需要一个公有的IP地址，然后采用NAT技术，将内部专用网络的计算机专用私有IP地址转换为公有的IP地址，从而让使用专用IP地址的计算机能够和Internet的计算机进行通信。</p><hr><p><strong>tip:</strong></p><p>当今的Internet使用TCP/IP实现了全世界的计算机互联互通，每一台连入Internet的计算机要和别的计算机通信，都必需拥有一个唯一的、合法的IP地址，此IP地址由Internet管理机构NIC统一进行管理和分配。而NIC分配的IP地址称为公有的、合法的IP地址，这些IP地址具有唯一性，连入Internet的计算机只要拥有NIC分配的IP地址就可以和其他计算机通信。<br>但是，由于当前TCP/IP协议版本是IPv4，它具有天生的缺陷，就是IP地址数量不够多，难以满足目前爆炸性增长的IP需求。所以，不是每一台计算机都能申请并获得NIC分配的IP地址。一般而言，需要连上Internet的个人或家庭用户，通过Internet的服务提供商ISP间接获得合法的公有IP地址（例如，用户通过ADSL线路拨号，从电信获得临时租用的公有IP地址）；对于大型机构而言，它们可能直接向Internet管理机构申请并使用永久的公有IP地址，也可能是通过ISP间接获得永久或临时的公有IP地址。<br>由于无论是通过哪种方式获得公有的IP地址，实际上当前的可用IP地址数量依然不足。IP 地址作为有限的资源，NIC要为网络中数以亿计的计算机都分配公有的IP 地址是不可能的。同时，为了使计算机能够具有IP地址并在专用网络（内部网络）中通信，Internet管理机构NIC定义了供专用网络内的计算机使用的专用IP地址。这些IP地址地址是在局部使用的（非全局的、不具有唯一性）、非公有的（私有的）IP地址，这些IP地址的地址范围具体如下：<br>A类地址：10.0.0.0～10.255.255.255<br>B类地址：172.16.0.0～172.31.255.255<br>C类地址：192.168.0.0～192.168.255.255<br>组织机构可根据自身园区网的大小以及计算机数量的多少来采用不同类型的专用地址范围或者它们的组合。但是，这些IP地址不可能出现在Internet上，也就是说源地址或目的地址为这些专有IP地址的数据包不可能在Internet上被传输，这样的数据包只能在内部专用网络中被传输。</p><hr><p>（2）NAT地址转换示意图<br>通过NAT设备，能够将专用网络内的专用IP地址和公有IP地址互相转换，从而实现专用网络内使用专用地址的计算机能够和Internet的计算机通信。NAT地址转换示意图如下：</p><p><a href="https://imgtu.com/i/TiWPHK"><img src="https://s4.ax1x.com/2021/12/17/TiWPHK.png" alt="TiWPHK.png"></a></p><p>2、NAT的类型<br>（1）静态NAT</p><p>（1）静态NAT：静态NAT是指在路由器中，将内网IP地址固定的转换为外网IP地址，通常应用在允许外网用户访问内网服务器的场景。静态NAT的工作过程如图所示。</p><p><a href="https://imgtu.com/i/TiW34g"><img src="https://s4.ax1x.com/2021/12/17/TiW34g.png" alt="TiW34g.png"></a></p><p>第①步：计算机C发送数据包给计算机A，数据包的源IP地址(Source Address，SA)为8.8.8.8，目标IP地址（Destination Address，DA）为8.8.8.3（在外网，计算机A的IP为8.8.8.3）。<br>第②步：数据包到达路由器时，路由器将查询本地的NAT映射表，找到映射条目后将数据包的目的地址（8.8.8.3）转换为内网IP地址（192.168.1.1），源地址保持不变。NAT路由器上有一个公有的IP地址池，在本次通信前，网络管理员已经在NAT路由器上做静态NAT地址映射关系，指定192.168.1.1与8.8.8.3映射。<br>第③步：转换后的数据包经在内网中传输，最终将被计算机A接收。<br>第④步：计算机A收到数据包后，将响应内容封装在目的地址为8.8.8.8的数据包中，然后将该数据包发送出去。<br>第⑤步：目的地址为8.8.8.8数据包到达路由器后，路由器将对照自身的NAT映射表，找出对应关系，将源地址192.168.1.1转换为8.8.8.3，然后将该数据包发送到外部网络中。<br>第⑥步：目的地址为8.8.8.8的数据包在外部网络中传送，最终到达计算机C。计算机C通过数据包的源地址（8.8.8.3）只知道此数据包路由器发送过来的，实际上，该数据包是计算机A发送的。</p><p>（2）动态NAT</p><p>（2）动态NAT：动态NAT，是将一个内部IP地址转换为一组外部IP地址池中的一个IP地址（公有地址）。动态NAT和静态NAT的在地址转换上很相似，只是可用的公有IP地址不是被某个专用网络的计算机所永久独自占有。动态NAT的工作过程如图所示。 </p><p><a href="https://imgtu.com/i/TiWsC4"><img src="https://s4.ax1x.com/2021/12/17/TiWsC4.png" alt="TiWsC4.png"></a></p><p>动态NAT的工作过程如图所示。与静态NAT类似，路由器上有一个公有IP地址池，地址池中有四个公有IP地址，它们是8.8.8.2/24-8.8.88.8.8.5/24。假设专用网络的计算机A需要和互联网的计算机C通信，其通信过程如下。<br>第①步：计算机A发送源IP地址(Source Address，SA)为192.168.1.1的数据包给计算机C。<br>第②步：数据包经过路由器的时候，路由器采用NAT技术，将数据包的源地址（192.168.1.1）转换为公有IP地址（8.8.8.2）。为什么会转换为8.8.8.2？由于路由器上的地址池有多个公有IP地址，当需要进行地址转换时，路由器会在地址池中选择一个未被占用的地址来进行转换。这里假设四个地址都未被占用，路由器挑选了第一个未被占用的地址而已。如果紧接着计算机A要发送数据包到Internet，则路由器会挑选第二个未被占用的IP地址，也就是8.8.8.3来进行转换。地址池中的公有IP地址的数量决定了可以同时访问Internet的内网计算机的数量，如果地址池中的IP地址都被使用了，那么内网的其他计算机就不能够和Internet的计算机通信了。当内网计算机和外网计算机的通信连接结束后，路由器将释放被占用的公有IP地址，这样，被释放的IP地址则又可以为其他内网计算机提供公网接入服务了。<br>第③步：源地址为8.8.8.2的数据包在Internet上转发，最终被计算机C接收。<br>第④步：计算机C收到源地址为8.8.8.2的数据包后转发，将响应内容封装在目的地址（Destination Address，DA）为8.8.8.2的数据包中，然后将该数据包发送出去。<br>第⑤步：目的地址为8.8.8.2数据包最终经过路由转发，到达连接专用网络的路由器上，路由器对照自身的NAT映射表，找出对应关系，将目的地址为8.8.8.2的数据包转换为目的地址为192.168.1.1的数据包，然后发送到内部专用网络中。<br>第⑥步：目的地址为192.168.1.1的数据包在专用网络中传送，最终到达计算机A。计算机A通过数据包的源地址（8.8.8.8）知道此数据包是Internet上的计算机C发送过来的。</p><p>（3）动态NAPT</p><p>（3）动态NAPT：动态NAPT，是以IP地址及端口号（TCP或UDP）为转换条件，将专用网络的内部私有IP地址及端口号转换成外部公有IP地址及端口号。在静态NAT和动态NAT中，都是“IP地址”到“IP地址”的转换关系，而动态NAPT，则是“IP地址+端口”到“IP地址+端口”的转换关系。动态NAPT的工作过程如图所示。 </p><p><a href="https://imgtu.com/i/TiWRDx"><img src="https://s4.ax1x.com/2021/12/17/TiWRDx.png" alt="TiWRDx.png"></a></p><p>“IP地址”到“IP地址”的转换关系局限性很大，因为公网IP地址一旦被占用，内网的其他计算机就不能再使用被占用的公网IP地址访问外网。对于“IP地址+端口”的转换关系则非常灵活，一个IP地址可以和多个端口进行组合（自由使用的端口号有几万个：1024-65535），所以，路由器上可用的网络地址映射关系条目数量就很多，完全可以满足大量的内网计算机访问外网需求。<br>动态NAPT的工作过程如图6-8所示。假设专用网络的计算机A要访问外网的服务器B的Web站点，其通信过程如下。<br>第①步：计算机A发送数据包给计算机B。数据包的源IP地址为192.168.1.1，源端口号为2000（2000为一个计算机A随机分配的端口号）；数据包的目的地址为8.8.8.8，目的端口号为80（Web服务器默认端口号是80）。<br>第②步：数据包经过路由器的时候，路由器采用了动态NAPT技术，以“IP+端口”形式进行转换。数据包的源地址及源端口号将从192.168.1.1:2000转化为8.8.8.1:3000（300为路由器随机分配的端口号），目的地址及端口号不变，仍然指向计算机B的Web服务。转换后的源IP地址为路由器在外网的接口IP地址，源端口为路由器上未被使用的可分配端口号，这里假设为3000。<br>第③步：转换后的数据包在Internet上转发，最终被计算机B接收。<br>第④步：计算机B收到数据包后，将响应内容封装在目的地址为8.8.8.1，目的端口号为3000的数据包中（源地址及端口为8.8.8.8:80），然后将数据包发送出去。<br>第⑤步：响应的数据包最终经过路由转发，到达连接专用网络的路由器上，路由器对照NAPT映射表，找出对应关系，将目的地址及端口号为8.8.8.1:3000的数据包转换为目的地址及端口号为192.168.1.1:2000的数据包，然后发送到内部专用网络中。<br>第⑥步：目的地址及端口号为192.168.1.1:2000的数据包在专用网络中传送，最终到达计算机A。计算机A通过数据包的源地址及端口号（8.8.8.8:80）知道此数据包是外网的计算机B发送过来的。<br>动态NAPT的内外网“IP+端口号”映射关系是临时性的，因此，它主要应用在为内网计算机提供外网访问服务的场景。典型的应用有：家庭的宽带路由器拥有动态NAPT功能，它可以满足家庭电子设备访问Internet；网吧的出口网关也拥有动态NAPT功能，它可以满足网吧电脑访问Internet。</p><p>（4）静态NAPT</p><p>（4）静态NAPT：静态NAPT，是指在路由器中以 “IP+端口”形式，将内网IP及端口固定的转换为外网IP及端口，应用在允许外网用户访问内网计算机特定服务的场景。静态NAPT的工作工程如图所示。 </p><p><a href="https://imgtu.com/i/TiWT8H"><img src="https://s4.ax1x.com/2021/12/17/TiWT8H.png" alt="TiWT8H.png"></a></p><p>静态NAPT的工作工程如图所示。假设外网的计算机B需要访问服务器A的Web站点，其通信过程如下：<br>第①步：计算机B发送数据包给服务器A。数据包的源IP地址为8.8.8.8，源端口号为2000；数据包的目的地址为8.8.8.1，目的端口号为80（Web服务器默认端口号是80）。<br>第②步：数据包经过路由器的时候，路由器查询NAPT地址映射表，找到对应的映射条目后，数据包的目的地址及目的端口号将从8.8.8.1:80转化为192.168.1.1:80，源地址及目的端口号不变。这里转换后的目的IP地址为内网服务器A的IP地址，目的端口为服务器A的web服务端口号。<br>第③步：转换后的数据包在专用网络上转发，最终被服务器A接收。<br>第④步：服务器A收到数据包后，将响应内容封装在目的地址为8.8.8.8，目的端口号为2000的数据包中，然后将数据包发送出去。<br>第⑤步：响应数据包经过路由转发，将到达路由器上，路由器对照静态NAPT映射表，找出对应关系，将源地址及端口号为192.168.1.1:80的数据包转换为源地址及端口号为8.8.8.1:80的数据包，然后发送到Internet中。<br>第⑥步：目的地址及端口号为8.8.8.8:2000的数据包在Internet中传送，最终到达计算机B。计算机B通过数据包的源地址及端口号(8.8.8.1:80)知道这是它访问Web服务的响应数据包。但是，计算机B并不知道Web服务其实是由专用网络内的服务器A所提供的，它只知道这个Web服务是由Internet上的IP地址为8.8.8.1的机器提供的。<br>静态NAPT的内外网“IP+端口”映射关系是永久性的，因此，它主要应用在为内网服务器的指定服务（如Web、FTP等）向外网提供服务的场景。典型的应用为，公司将内部网络的门户网站映射到公网IP的80端口上，满足互联网用户访问公司门户网站需求。</p><p>（5）Easy IP</p><p>（5）Easy IP：Easy IP技术，是NAPT的一种简化情况。Easy IP无需建立公有IP地址资源池，因为Easy IP只会用到一个公有IP地址，该IP地址就是路由器R连接公网的出口IP地址。Easy IP也会建立并维护一张动态地址及端口映射表，并且，Easy IP会将这张表中的公有IP地址绑定成路由器R的公网的出口IP地址。路由器RTA的出口IP地址如果发生了变化，那么，这张表中的公有IP地址也会自动跟着变化。路由器RTA的出口IP地址可以是手工配置的，也可以是动态分配的。下图所示的网络是一个典型的小型公司Easy IP拓扑。</p><p><a href="https://imgtu.com/i/TifFrq"><img src="https://s4.ax1x.com/2021/12/17/TifFrq.png" alt="TifFrq.png"></a></p><p>Easy IP适用于小规模局域网中的主机访问Internet的场景。小规模局域网通常部署在小型的网吧或者办公室中，这些地方内部主机不多，出接口可以通过拨号方式获取一个临时公网IP地址。Easy IP可以实现内部主机使用这个临时公网IP地址访问Internet。<br>Easy IP的工作过程与NAPT完全一样的。</p><h2 id="NAT的配置"><a href="#NAT的配置" class="headerlink" title="NAT的配置"></a>NAT的配置</h2><p>1、案例6-5 静态NAT配置示例<br>（1）案例背景与要求：如图所示，Jan16公司通过路由器R1接入到Internet，网络拓扑如图6-11所示，项目背景和需求如下。<br>①公司向Internet申请了2个公网IP：200.10.1.2和200.10.1.3。<br>②公司的Web服务器需要以静态NAT的方式对外提供服务，映射IP为200.10.1.3。</p><p><a href="https://imgtu.com/i/TifnG4"><img src="https://s4.ax1x.com/2021/12/17/TifnG4.png" alt="TifnG4.png"></a></p><p>（2）案例配置思路<br>①为各设备接口配置IP地址。<br>②在路由器R1配置NAT，将Web服务器映射到200.10.1.3。<br>③案例测试。</p><p>（3）案例配置过程<br>①路由器R1的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 192.168.0.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip add 200.10.1.2 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat static global 200.10.1.3 inside 192.168.0.2</span><br><span class="line">[R1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>②其他设备的IP配置（省略）。</p><p>备注：【nat static global global-address inside host-address】命令，该命令的作用是将公网IP地址 global-ades映射到私网IP地址 host-addres。</p><p>（4）案例验证<br>①在路由器R1上执行【display nat static】命令，查看公有IP地址与私有IP地址的映射关系。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;display nat static </span><br><span class="line">  Static Nat Information:</span><br><span class="line">  Interface  : GigabitEthernet0/0/1</span><br><span class="line">    Global IP/Port     : 200.10.1.3/---- </span><br><span class="line">    Inside IP/Port     : 192.168.0.2/----</span><br><span class="line">    Protocol : ----     </span><br><span class="line">    VPN instance-name  : ----                            </span><br><span class="line">    Acl number         : ----</span><br><span class="line">    Netmask  : 255.255.255.255 </span><br><span class="line">Description : ----</span><br><span class="line">  Total :    1</span><br></pre></td></tr></table></figure><p>②在公网主机PC1中，执行【ping 200.10.1.3】命令，测试与内网WEB服务器的连通性，结果显示可以成功连接Web服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 200.10.1.3</span><br><span class="line">Ping 200.10.1.3: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 200.10.1.3: bytes=32 seq=1 ttl=127 time=47 ms</span><br><span class="line">From 200.10.1.3: bytes=32 seq=2 ttl=127 time=47 ms</span><br><span class="line">From 200.10.1.3: bytes=32 seq=3 ttl=127 time=47 ms</span><br><span class="line">From 200.10.1.3: bytes=32 seq=4 ttl=127 time=31 ms</span><br><span class="line">From 200.10.1.3: bytes=32 seq=5 ttl=127 time=63 ms</span><br><span class="line"> </span><br><span class="line">--- 200.10.1.3 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 31/47/63 ms</span><br></pre></td></tr></table></figure><p>以上测试结果可以看出，成功在路由器R1上配置静态NAT，实现Web服务器的私网地址192.168.0.2与公网地址202.10.1.3的映射。</p><p>2、案例6-6 动态NAT配置示例<br>（1）案例背景与要求：Jan16公司通过路由器R1接入到Internet，网络拓扑如图6-12所示，案例背景和需求如下。<br>①公司向Internet申请了1批公网IP：200.10.1.1~200.10.1.20。<br>②公司的内网计算机（192.168.1.0/24）可通过路由器R1随机映射到公网，实现内外网互访。</p><p><a href="https://imgtu.com/i/TifbYF"><img src="https://s4.ax1x.com/2021/12/17/TifbYF.png" alt="TifbYF.png"></a></p><p>（2）案例配置思路<br>①为各设备接口配置IP地址。<br>②在路由器R1配置公网IP地址池。<br>③在路由器R1配置ACL规则，该规则定义了可用于映射公网的主机。<br>④在路由器R1配置动态NAT，将符合ACL规则的主机自动映射到公网地址池IP中。<br>⑤案例测试。</p><p>（3）案例配置过程<br>①路由器R1的主要配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 192.168.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip add 200.10.1.1 24</span><br><span class="line">[R1]nat address-group 1 200.10.10.2 200.10.10.20 </span><br><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[R1-acl-basic-2000]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat outbound 2000 address-group 1 no-pat</span><br></pre></td></tr></table></figure><p>备注：<br>【nat address-group】命令用来配置NAT地址池（申请到的公网IP不能全部纳入地址池，必须至少保留1个用于路由器与公网通信），【nat outbound】命令用来将一个访问控制列表ACL和一个地址池关联起来，其表示ACL中规定的地址可以使用地址池进行NAT转换。参数no-pat表示只转换数据报文的IP地址而不转换端口信息。</p><p>（4）案例验证<br>在路由器R1上执行【display nat address-group group-index】命令，查看NAT地址池配置信息或执行【display nat outbound】命令，查看动态NAT配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]display nat address-group 1</span><br><span class="line">NAT Address-Group Information:</span><br><span class="line">--------------------------------------</span><br><span class="line">Index   Start-address      End-address</span><br><span class="line">1       200.10.1.2        200.10.1.20</span><br><span class="line">[R1]display nat outbound </span><br><span class="line">NAT Outbound Information:</span><br><span class="line"> ----------------------------------------------------------------</span><br><span class="line">Interface              Acl       Address-group/IP/Interface     Type</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">GigabitEthernet0/0/1   2000                        1             no-pat</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Total : 1</span><br></pre></td></tr></table></figure><p>测试结果显示动态NAT配置成功。</p><p>3、案例6-7 NAPT配置示例<br>（1）案例背景与要求：Jan16公司通过动态NAT实现了内网主机和公网之间的通信，但随着人员的增加，有限的公网IP地址已不能满足所有员工上网的需求，公司希望采用NAPT来解决更多员工的外网接入需求。公司拓扑图如图所示。</p><p><a href="https://imgtu.com/i/Tihife"><img src="https://s4.ax1x.com/2021/12/17/Tihife.png" alt="Tihife.png"></a></p><p>（2）案例配置思路<br>①为各设备接口配置IP地址。<br>②在路由器R1配置公网IP地址池。<br>③在路由器R1配置ACL规则，该规则定义了可用于映射公网的主机。<br>④在路由器R1配置NAPT，将符合ACL规则的主机自动映射到公网地址池IP中。<br>⑤案例测试。</p><p>（3）案例配置过程<br>①路由器R1的主要配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 192.168.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip add 200.10.1.1 24</span><br><span class="line">[R1]nat address-group 1 200.10.1.2 200.10.1.20 </span><br><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[R1-acl-basic-2000]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat outbound 2000 address-group 1 </span><br></pre></td></tr></table></figure><p>备注：<br>【nat outbound】命令同样也可用来配置NAPT，命令中没有no-pat参数表示NAPT。</p><p>（4）案例验证<br>①私网主机PC1和PC2中，执行【ping 200.10.1.201】命令，测试内网主机与外网的连通性，结果显示可以成功连接外网。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 200.10.1.201</span><br><span class="line"></span><br><span class="line">Ping 200.10.1.201: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 200.10.1.201: bytes=32 seq=1 ttl=127 time=15 ms</span><br><span class="line">From 200.10.1.201: bytes=32 seq=2 ttl=127 time=15 ms</span><br><span class="line">From 200.10.1.201: bytes=32 seq=3 ttl=127 time=32 ms</span><br><span class="line">From 200.10.1.201: bytes=32 seq=4 ttl=127 time=31 ms</span><br><span class="line">From 200.10.1.201: bytes=32 seq=5 ttl=127 time=16 ms</span><br><span class="line"></span><br><span class="line">--- 200.10.1.201 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 15/21/32 ms</span><br></pre></td></tr></table></figure><p>②在路由器R1上执行【display nat session all】命令，查看NAPT会话信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> [R1]disp nat session all</span><br><span class="line">  NAT Session Table Information:</span><br><span class="line">     Protocol          : ICMP(1)</span><br><span class="line">     SrcAddr   Vpn     : 192.168.1.1                                    </span><br><span class="line">     DestAddr  Vpn     : 200.10.1.201                                      </span><br><span class="line">     Type Code IcmpId  : 0   8   16411</span><br><span class="line">     NAT-Info</span><br><span class="line">       New SrcAddr     : 200.10.1.2   </span><br><span class="line">       New DestAddr    : ----</span><br><span class="line">       New IcmpId      : 10263</span><br><span class="line">     Protocol          : ICMP(1)</span><br><span class="line">     SrcAddr   Vpn     : 192.168.1.2                                    </span><br><span class="line">     DestAddr  Vpn     : 200.10.1.201                                      </span><br><span class="line">     Type Code IcmpId  : 0   8   16416</span><br><span class="line">     NAT-Info</span><br><span class="line">       New SrcAddr     : 200.10.1.15    </span><br><span class="line">       New DestAddr    : ----</span><br><span class="line">       New IcmpId      : 10265</span><br><span class="line">……（省略部分）</span><br><span class="line">Total : 9</span><br></pre></td></tr></table></figure><p> 从以上信息可以看出，PC1和PC2的两个私网IP地址同时映射同一个公网IP地址，只是映射了不同的端口号。从测试结果得知，一个公网IP地址可以为多个私网IP提供NAPT服务，解决了更多内网终端连接外网的问题。</p><p>4、案例6-8 Easy IP配置示例<br>（1）案例背景与要求：Jan16公司通过路由器R1接入到Internet，网络拓扑如图6-13所示，项目案例背景和需求如下。<br>①公司通过拨号接入Internet，并申请到一个固定公网IP：200.10.1.1。<br>②公司要求使用Easy IP技术实现全部内网计算机快速访问Internet。</p><p><a href="https://imgtu.com/i/TihdtU"><img src="https://s4.ax1x.com/2021/12/17/TihdtU.png" alt="TihdtU.png"></a></p><p>（2）案例配置思路<br>①为各设备接口配置IP地址。<br>②在路由器R1配置公网IP地址池。<br>③在路由器R1配置ACL规则，该规则定义了可用于映射公网的主机。<br>④在路由器R1配置Easy IP，将符合ACL规则的主机允许访问外网。<br>⑤案例测试。</p><p>（3）案例配置过程<br>路由器R1的主要配置如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 192.168.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/0]quit</span><br><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip add 200.10.1.1 24</span><br><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule 5 permit source 192.168.1.0 0.0.0.255</span><br><span class="line">[R1-acl-basic-2000]quit</span><br><span class="line">[R1]interface GigabitEthernet0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]nat outbound 2000</span><br></pre></td></tr></table></figure><p>备注：<br>Easy IP技术是对NAPT技术的简化，因为Easy IP只会用到一个公有IP地址，所以它无需建立公有IP地址地址池，用于转换的公网IP就是该路由器接口的IP地址。<br>在本示例中，【nat outbound 2000】命令表示对ACL 2000定义的地址段进行地址转换，并且直接使用g0/0/1接口的IP地址作为Easy IP转换后的地址。<br>【nat outbound acl-number】命令用于配置Easy IP地址转换。Easy IP的配置与动态NAT的配置类似，需要定义ACL和执行【nat outbound】命令，主要区别是Easy IP不需要配置地址池，所以【nat outbound】命令中不需要配置参数【address-group】。</p><p>（4）案例验证<br>在路由器R1上执行【display nat outbound】命令，查看【nat outbound】命令的配置结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[R1]display nat outbound </span><br><span class="line"> NAT Outbound Information:</span><br><span class="line"> ---------------------------------------------------------------------</span><br><span class="line"> Interface                 Acl     Address-group/IP/Interface      Type</span><br><span class="line"> ---------------------------------------------------------------------</span><br><span class="line"> GigabitEthernet0/0/1       2000      200.10.1.1                  easyip  </span><br><span class="line"> ---------------------------------------------------------------------</span><br><span class="line"> Total : 1</span><br></pre></td></tr></table></figure><p>【Address-group/IP/Interface】表项表明接口和ACL 2000允许的私网网段192.168.1.0/24已经关联成功，【Type】表项表明Easy IP已经配置成功。</p><h1 id="AAA认证"><a href="#AAA认证" class="headerlink" title="AAA认证"></a>AAA认证</h1><h2 id="AAA认证的基本概念"><a href="#AAA认证的基本概念" class="headerlink" title="AAA认证的基本概念"></a>AAA认证的基本概念</h2><p>1、AAA认证的基本概念：<br>         AAA是Authentication（认证）、Authorization（授权）和Accounting（计费）的简称，它提供了认证、授权、计费三种安全功能。<br>（1）认证：验证用户的身份和可使用的网络服务。<br>（2）授权：依据认证结果开放网络服务给用户。<br>（3）计费：记录用户对各种网络服务的用量，并提供给计费系统。</p><p>AAA可以通过多种协议来实现，目前华为大部分设备支持基于远程认证拨号用户服务（Remote Authentication Dial-In User Service，RADIUS）协议或华为终端访问控制器控制系统（Huawei Terminal Access Controller Access Control System，HWTACACS）协议来实现AAA。</p><p>2、AAA认证的基本模型<br>（1）认证：<br>1）AAA支持的认证方式有：不认证，本地认证，远端认证。<br>①不认证：完全信任用户，不对用户身份进行合法性检查。鉴于安全考虑，这种认证方式很少被采用。<br>②本地认证：将用户信息（包括用户名、密码等属性）配置在本地的接入服务器上。本地认证的优点是处理速度快、运营成本低；缺点是存储信息量受设备硬件条件限制。在华为解决方案中，通常使用路由器作为接入服务器。<br>③远端认证：将用户信息配置在认证服务器上。AAA支持通过RADIUS协议或HWTACACS协议进行远端认证。</p><p>（1）认证<br>2）认证模型1：大规模公司的认证模型如图所示，总公司部署了AAA服务器，用户将通过AAA服务器进行身份认证；分公司的接入路由器作为AAA Client，负责将用户的认证、授权和计费信息发给AAA Server，能加快验证用户，提高AAA认证的效率；出差的员工则通过远程方式连接到总公司AAA服务器进行身份认证。用户通过身份认证后，就能访问公司网络的相关服务。 </p><p><a href="https://imgtu.com/i/TihRAK"><img src="https://s4.ax1x.com/2021/12/17/TihRAK.png" alt="TihRAK.png"></a></p><p>（1）认证<br>3）认证模型2：小公司的认证模型如图6-15所示，公司在路由器上部署了AAA服务器，用户通过身份认证后，就能访问公司网络的相关服务。需要注意的是，在路由器上部署AAA服务只能实现简单的认证和授权业务，不具备计费功能。</p><p><a href="https://imgtu.com/i/Tih51H"><img src="https://s4.ax1x.com/2021/12/17/Tih51H.png" alt="Tih51H.png"></a></p><p>（2）授权<br>         AAA支持的授权方式有不授权，本地授权，远端授权。<br>①不授权：不对用户进行授权处理。<br>②本地授权：根据接入服务器上配置的本地用户账号的相关属性进行授权。<br>③远端授权：由HWTACACS或RADIUS授权。其中，RADIUS协议的认证和授权是绑定在一起的，不能单独使用RADIUS进行授权。<br>如果在一个授权方案中使用多种授权方式，这些授权方式按照配置顺序生效，不授权方式最后生效。</p><p> （3）计费<br>        计费功能用于监控授权用户的网络行为和网络资源的使用情况。AAA支持以下两种计费方式。<br>①　不计费：为用户提供免费上网服务，不产生相关活动日志。<br>②　计费：通过RADIUS服务器或HWTACACS服务器进行计费。</p><p>3、路由器AAA认证服务的配置<br>（1）当采用本地方式进行认证和授权时，需要在设备上配置用户的认证和授权信息，如用户名、密码、优先级等。<br>（2）下面的一段配置用于在路由器（AAA认证服务器）创建用户，配置密码和优先级，演示了在路由器创建本地用户jan16，设置密码为huawei@123，权限等级为15即最高权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]aaa</span><br><span class="line">[Huawei-aaa]local-user jan16 password cipher huawei@123</span><br><span class="line">Info: Add a new user.</span><br><span class="line">[Huawei-aaa]local-user jan16 privilege level 15</span><br></pre></td></tr></table></figure><p>（3）下面端配置用于设置用户的服务类型，演示了在路由器中进一步配置了用户jan16服务于telnet协议，即终端采用telnet协议远程登录到该路由器时，可以使用jan16作为身份认证信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei-aaa]local-user jan16 service-type telnet</span><br></pre></td></tr></table></figure><h2 id="认证服务器的配置"><a href="#认证服务器的配置" class="headerlink" title="认证服务器的配置"></a>认证服务器的配置</h2><p>1、案例6-9 AAA认证服务器的配置<br>（1）案例背景与要求：以Jan16公司为例，公司出口路由器采用企业级路由器，为方便远程管理，计划创建admin和public两个远程账号，admin账号作为管理员账号，拥有最高权限可以配置路由器，public账号作为普通用户账号，仅可以查看路由器当前状态信息。案例拓扑如图所示。</p><p><a href="https://imgtu.com/i/Ti4kNT"><img src="https://s4.ax1x.com/2021/12/17/Ti4kNT.png" alt="Ti4kNT.png"></a></p><p>（2）案例配置思路<br>①配置设备的接口IP。<br>②在路由器R1配置本地用户admin和public的账户、密码和权限。<br>③配置路由器的远程登录认证方式为aaa。</p><p>（3）案例配置过程<br>①在路由器R1的接口上配置IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]interface GigabitEthernet 0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip address 192.168.10.254 24</span><br></pre></td></tr></table></figure><p>②创建本地用户admin和public，配置用户的权限等级。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]aaa</span><br><span class="line">[R1-aaa]local-user admin password cipher admin@123</span><br><span class="line">[R1-aaa]local-user admin privilege level 15</span><br><span class="line">[R1-aaa]local-user admin service-type telnet </span><br><span class="line">[R1-aaa]local-user public password cipher 123456@p</span><br><span class="line">[R1-aaa]local-user public privilege level 2</span><br><span class="line">[R1-aaa]local-user public service-type telnet</span><br></pre></td></tr></table></figure><p>③配置路由器启用telnet服务，认证方式为aaa认证。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R1]user-interface vty 0 4</span><br><span class="line">[R1-ui-vty0-4]protocol inbound telnet </span><br><span class="line">[R1-ui-vty0-4]authentication-mode aaa</span><br></pre></td></tr></table></figure><p>（4）案例验证<br>在路由器上使用【display local-user】命令查看创建的用户信息，结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis local-user </span><br><span class="line">  ---------------------------------------------------------------------------</span><br><span class="line">  User-name                      State  AuthMask  AdminLevel  </span><br><span class="line">  ---------------------------------------------------------------------------</span><br><span class="line">  admin                          A      T         15         </span><br><span class="line">  public                         A      T         2          </span><br><span class="line">  ---------------------------------------------------------------------------</span><br><span class="line">  Total 2 user(s)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.华为1+X-广域网技术</title>
      <link href="2021/12/16/%E5%8D%8E%E4%B8%BA1+X/5.%E5%8D%8E%E4%B8%BA1+X-%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/"/>
      <url>2021/12/16/%E5%8D%8E%E4%B8%BA1+X/5.%E5%8D%8E%E4%B8%BA1+X-%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-广域网技术</p><h1 id="广域网概述"><a href="#广域网概述" class="headerlink" title="广域网概述"></a>广域网概述</h1><h2 id="广域网基本概念"><a href="#广域网基本概念" class="headerlink" title="广域网基本概念"></a>广域网基本概念</h2><p><strong>广域网的概念：</strong>广域网（Wide Area Network）简称WAN，是指跨越很大地域范围的数据通信网络。广域网通常使用因特网服务提供商（ISP）提供的设备作为信息传输平台，对网络通信的要求较高。<br>广域网对应的OSI三层模型，如下图所示：</p><p><a href="https://imgtu.com/i/TiS8Df"><img src="https://s4.ax1x.com/2021/12/16/TiS8Df.png" alt="TiS8Df.png"></a></p><hr><p><strong>tip：</strong></p><p>PPP主要被设计用来在支持全双工的同异步链路上进行点到点之间的数据传输。PPP是一个适用于通过调制解调器、点到点专线、HDLC比特串行线路和其他物理层的多协议帧机制，它支持错误检测、选项商定、头部压缩等机制，在当今的网络中得到普遍的应用。<br>PPP在物理上可使用各种不同的传输介质，包括双绞线、光纤及无线传输介质，在数据链路层提供了一套解决链路建立、维护、拆除和上层协议协商、认证等问题的方案；协议支持同步串行连接、异步串行连接、ISDN连接、HSSI连接等连接类型，具有以下特性。<br>能够控制数据链路的建立。<br>能够对IP地址进行分配和使用。<br>允许同时采用多种网络层协议。<br>能够配置和测试数据链路。<br>能够进行错误检测。<br>有协商选项，能够对网络层的地址和数据压缩等进行协商。</p><hr><p><strong>广域网的链路类型</strong><br>广域网的链路类型可以分为宽带广域网和窄带广域网，宽带广域网包括ATM异步传输模式网和SDH同步数字系列，窄带广域网包括ISDN综合业务数字网、DDN数字数据网、帧中继Frame Relay、X.25公用分组交换网和PSTN公共交换电话网。<br><strong>广域网的协议概述</strong><br>广域网协议通常是指在因特网上负责路由器之间连接的数据链路层协议。广域网数据封装协议包括点到点型的PPP、PPPoE协议和HDLC协议，也包括逐渐被淘汰的电路交换型ISDN协议和分组交换型的ATM、帧中继协议。</p><hr><p><strong>tip：</strong></p><p>广域网的接口类型主要包括同步和异步串口。同步串口有DTE和DCE两种工作方式，可以支持多种链路层协议，可以支持网络层的IP和IPX协议，也可以支持多种类型的线缆。异步串口分为手工设置的异步串口和专用异步串口，可以设置为专线方式和拨号方式。<br>其中，HDLC(High-Level Data Link Control)称为高级数据链路控制协议，工作在数据链路层，是国际标准化组织（ISO）以IBM公司系统网络架构的SDLC协议作为基础开发出来的协议。<br>PPP和PPPoE协议将在本章中进行详细介绍。</p><hr><h2 id="广域网接入"><a href="#广域网接入" class="headerlink" title="广域网接入"></a>广域网接入</h2><p>DDN接入：DDN是数字数据网(Digital Data Network)的简称。它由光纤、数字微波或卫星等数字传输通道和数字交叉复用设备组成，为用户提供高质量的数据传输通道，传送各种数据业务；<br>电缆调制解调器远程接入：电缆调制解调器运行在有线电视（CATV）的铜轴电缆上，可以提供比传统电话线更高的传输速率；<br>PSTN公共电话网接入：PSTN公共电话网的优点是覆盖区域广、易于使用、价格较低，缺点是网络线路质量较差，传输速率较低；<br>DSL远程接入：DSL称为数字用户线路，DSL远程接入方式是通过DSL调制解调器实现用户数据在传统电话线上的高速传输。DSL技术常见的类型包括ADSL、VDSL、SDSL、HDSL和ISDN DSL等。其中，ASDL已经成为广域网接入的主要技术。 </p><h1 id="点对点协议-PPP"><a href="#点对点协议-PPP" class="headerlink" title="点对点协议-PPP"></a>点对点协议-PPP</h1><h2 id="PPP基本概念"><a href="#PPP基本概念" class="headerlink" title="PPP基本概念"></a>PPP基本概念</h2><p>PPP的基本概念<br>PPP是 Point-to-Point Protocol的简称，也叫做P2P，目前是TCP/IP网络中最重要的点到点数据链路层协议。 PPP在点对点中的应用，如下图所示：</p><p><a href="https://imgtu.com/i/Ti1Qu6"><img src="https://s4.ax1x.com/2021/12/17/Ti1Qu6.png" alt="Ti1Qu6.png"></a></p><p><strong>PPP的成员协议：主要包括链路控制协议（LCP）和网络控制协议（NCP）。</strong><br>LCP：链路控制协议(LCP，Link Control Protocol)，主要用于数据链路连接的建立、拆除和监控；LCP主要完成MTU（最大传输单元）、质量协议、验证协议、魔术字、协议域压缩、地址和控制域压缩协商等参数的协商；<br>NCP：网络层控制协议族(NCP，Network Control Protocol)，主要用于协商在该链路上所传输的数据包的格式与类型，建立和配置不同网络层协议。</p><p><strong>PPP配置PPP帧格式</strong></p><p>关于PPP帧格式中各字段的含义描述如下图所示：</p><p><a href="https://imgtu.com/i/Ti1GUe"><img src="https://s4.ax1x.com/2021/12/17/Ti1GUe.png" alt="Ti1GUe.png"></a></p><hr><p><strong>tip：</strong></p><p>（1）Flag字段<br>该字段的长度为8bit，标识一个物理帧的起始和结束。PPP帧都是以01111110（0X7E）开始的。<br>（2）Address字段<br>该字段的长度为8bit，字节固定值为11111111（0XFF），该字段并非是一个MAC地址，它表明主从端的状态都为接收状态，可以理解为“所有的接口”。<br>PPP帧是在一条单一的PPP链路上固定地从此接口传输到对端接口，因此PPP帧不像以太帧那样包含了源MAC地址和目的MAC地址这些信息。事实上，PPP接口根本就不需要属于自己的MAC地址，MAC地址对于PPP接口来说毫无意义。<br>（3）Control字段<br>该字段的长度为8bit，取值固定为00000011(0X03)。该字段并没有什么特别的作用，表明为无序号帧。<br>（4）Protocol字段<br>该字段的长度为16bit，是告知在信息字段中使用的是哪类分组，针对LCP、NCP、IP、IPX、AppleTalk及其他协议，定义了相应的代码。例如，当 Protocol字段的取值为0xc021时，就表明Information字段是一个LCP报文；当Protocol字段的取值为0x0021时，就表明 Information字段是一个IP报文。<br>（5）Information字段<br>该字段是PPP帧的载荷数据，其长度是可变的。信息字段包含协议字段中指定协议的数据包。数据字段的默认最大长度（不包括协议字段）称为最大接收单元MRU（Maximum Receive Unit），MRU的默认值为1500字节。<br>（6）FCS<br>FCS是Frame Checksum的缩写，该字段的长度为16bit，其作用是对PPP帧进行差错校验。</p><hr><p><strong>PPP的基本建链过程：</strong></p><p> PPP在建立链路之前要进行一些列的协商过程。PPP大致可以分为如下几个阶段：Dead （链路不可行）阶段、Establish(链路建立)阶段、Authenticate（验证）阶段、Network（网络层协议）阶段、Terminate（链路终止）阶段。如图所示：</p><p><a href="https://imgtu.com/i/Ti10Df"><img src="https://s4.ax1x.com/2021/12/17/Ti10Df.png" alt="Ti10Df.png"></a></p><hr><p><strong>tip：</strong></p><p>PPP链路的建立是通过一些列的协商完成的。其中，链路控制协议除了用于建立、拆除和监控PPP数据链路，还主要进行数据链路层特性的协商，如MTU、验证方式等；网络层控制协议族主要用于协商在该数据链路上所传输的数据的格式和类型，如IP地址。<br>   （1）Dead（链路不可用）阶段。<br>链路必须从这个阶段开始和结束。当一个外部事件（如一个载波信号或网络管理员配置）检测到物理层可用，PPP就会进入到Establish阶段。在Dead阶段，LCP状态机有两个状态：Initial和Starting。从这个状态迁移到Establish状态会给LCP状态机送一个Up事件。当断开连接后，链路会自动的回到这个状态。在一般情况下这个阶段是很短的，仅仅只是检测到设备在线。</p><p>（2）在Establish（链路建立）阶段。<br>该阶段PPP链路将进行LCP参数协商，协商内容包括最大接收单元MRU、认证方式、魔术字（Magic Number）等选项。LCP参数协商成功后会进入Opened状态，表示底层链路已经建立。<br>（3）Authenticate（验证）阶段。<br>某些链路可能要求对端验证自己之后才允许网络层协议数据包在链路上传输，在默认值中验证是不要求的。如果某个应用要求对端采用特定的验证协议进行验证，则必须在链路建立阶段发出使用这种协议的请求。只有当验证通过时才可以进入网络层协议阶段，如果验证不通过，则应继续验证而不是转到链路终止阶段。在这个阶段只允许链路控制协议、验证协议和链路质量检测的数据包进行传输，其他的数据报都应丢弃。<br>（4）Network-Layer Protocol（网络层协议）阶段。<br>该阶段PPP链路将进行NCP协商。通过协商来选择和配置一个网络层协议及相关参数。只有相应的网络层协议协商成功后，才可以通过这条PPP链路发送报文。NCP协商成功后，PPP链路将保持通信状态。<br>（5）Link Terminate（链路终止）阶段。<br>PPP终止链路，这可能是由于载波信号的丢失、验证不通过、链路质量不好、定时器超时或管理员关闭链路。PPP通过交换终止链路的数据包来关闭链路，当交换结束时，应用就会告诉物理层拆除连接从而强行终止链路。但验证失败时，发出终止请求的一方必须等到收到终止应答或者重起计数器超过最大终止计数次数才断开连接。收到终止请求的一方必须等对方先断开连接，而且在发送终止应答之后必须等至少一次重起计数器超时之后才能断开连接，之后PPP回到链路不可用状态。</p><hr><p><strong>PPP的身份认证</strong><br>PPP包含了通信双方身份验证的安全性协议，即在网络层协商IP地址之前，首先必须通过身份验证。<br>PPP的身份验证有两种方式：CHAP和PAP。</p><p>（1）PAP验证 ： PAP（Password Authentication Protocol）协议是两次握手协议，它通过用户名及口令来进行用户的验证，其过程如下：<br>① 当开始验证阶段时，被验证方首先将自己的用户名及口令发送到验证方，验证方根据本端的用户数据库（或Radius服务器）察看是否有此用户，口令是否正确，<br>② 如果正确则发送Ack报文通知对端进入下一阶段协商，否则发送Nak报文通知对端验证失败。</p><p><a href="https://imgtu.com/i/Ti1g8s"><img src="https://s4.ax1x.com/2021/12/17/Ti1g8s.png" alt="Ti1g8s.png"></a></p><p>PAP是在网络上以明文的方式传送用户名及口令，所以安全性不高。</p><p>（2）CHAP验证： CHAP为三次握手协议，它只在网络上传用户名而不传口令，因此安全性比PAP高。其验证过程为：<br>① 首先验证方向被验证方发送一些随机的报文，并加上自己的主机名；<br>② 被验证方收到验证方的验证请求，通过收到的主机名和本端的用户数据库查找用户口令字（密钥），如果找到用户数据库中和验证方主机名相同的用户，便利用接收到的随机报文、此用户的密钥和报文ID用Md5加密算法生成应答，随后将应答和自己的主机名送回；<br>③ 验证方收到此应答后，利用对端的用户名在本端的用户数据库中查找本方保留的口令字，用本方保留的用户的口令字（密钥）、随机报文和报文ID用Md5加密算法生成结果，与被验证方的应答比较，相同则返回Ack，否则返回Nak。其报文交互过程如图所示。</p><p><a href="https://imgtu.com/i/Ti1fK0"><img src="https://s4.ax1x.com/2021/12/17/Ti1fK0.png" alt="Ti1fK0.png"></a></p><p>CHAP不仅在连接建立阶段进行，在以后的数据传输阶段也可以按随机间隔继续进行，但每次验证方和被验证方的随机数据都应不同，以防被第三方猜出密钥。如果验证方发现结果不一致，将立即切断线路。它的特点是只在网络上传输用户名，而并不传输用户口令，因此它的安全性要比PAP高。</p><p><strong>1、案例5-1 PPP的基本配置</strong><br>（1）案例背景与要求：根据如图5-7所示的网络拓扑要求，完成两台路由器的PPP通信配置，实现PC1和PC2互通。</p><p><a href="https://imgtu.com/i/Ti1Lx1"><img src="https://s4.ax1x.com/2021/12/17/Ti1Lx1.png" alt="Ti1Lx1.png"></a></p><p>（2）案例配置思路<br>①在路由器R1和R2的串行连接接口上启用PPP；<br>②对拓扑的所有设备上配置IP地址。</p><p>（3）案例配置过程<br>①配置路由器R1的串口IP和PPP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt; system-view</span><br><span class="line">[R1] interface serial 0/0/1</span><br><span class="line">[R1-Serial0/0/1] ip address 10.10.10.1 24 </span><br><span class="line">[R1-Serial0/0/1] link-protocol ppp</span><br></pre></td></tr></table></figure><p>②配置路由器R2的串口IP和PPP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt; system-view</span><br><span class="line">[R2] interface serial 0/0/1</span><br><span class="line">[R2-Serial0/0/1] ip address 10.10.10.2 24 </span><br><span class="line">[R2-Serial0/0/1] link-protocol ppp</span><br></pre></td></tr></table></figure><p>4、案例验证<br>在路由器R1的S0/0/1接口上输入【display int serial 0/0/1】命令，测试PPP封装情况。测试结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1-Serial0/0/1]display int S0/0/1</span><br><span class="line">Serial0/0/1 current state : UP</span><br><span class="line">Line protocol current state : UP</span><br><span class="line">Last line protocol up time : 2020-01-20 15:44:49 UTC-08:00</span><br><span class="line">Description:HUAWEI, AR Series, Serial4/0/0 Interface</span><br><span class="line">Route Port,The Maximum Transmit Unit is 1500, Hold timer is 10(sec)</span><br><span class="line">Internet Address is 10.10.10.2/24</span><br><span class="line">Link layer protocol is PPP</span><br><span class="line">LCP opened, IPCP opened</span><br><span class="line">（省略部分内容）</span><br></pre></td></tr></table></figure><hr><p><strong>tip：</strong></p><p>上面的回显信息中，“Internet Address is 10.10.10.1/24”表示路由器R1的 Serial4/0/0接口的IP地址为10.10.10.1/24 。“Link layer protocol is PPP”表示路由器R1的 Serial4/0/0接口的数据链路层协议为PPP。“LCP opened，IPCP opened”表示LCP和IPCP协商已经成功。注意，既然NCP采用的是IPCP，就说明PPP链路上已经可以传递IP报文了。</p><hr><p>2、案例5-2 PAP认证通信的配置<br>（1）案例背景与要求：根据下图所示的网络拓扑要求，完成两台路由器的PAP认证通信配置，认证的用户名为“jan16”，密码为“huawei”，采用加密方式密文方式。</p><p><a href="https://imgtu.com/i/Ti3mdS"><img src="https://s4.ax1x.com/2021/12/17/Ti3mdS.png" alt="Ti3mdS.png"></a></p><p>（2）案例配置思路<br>①配置路由器R1和R2的接口IP；<br>②在路由器R1上配置认证的账号和密码，并制定该账号和密码用于PPP的PAP认证；<br>③在路由器R2上启用PPP，并设置PAP认证的账号和密码。</p><p>（3）案例配置过程<br>① 认证方路由器R1的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//在路由器R1上配置PAP认证的账号和密码</span><br><span class="line">[R1]aaa </span><br><span class="line">[R1-aaa]local-user jan16 password cipher huawei</span><br><span class="line">//在路由器R1指定该密码应用于PPP认证</span><br><span class="line">[R1-aaa]local-user jan16 service-type ppp </span><br><span class="line">//配置路由器R1的S 0/0/1接口的IP</span><br><span class="line">[R1]interface Serial 0/0/1  </span><br><span class="line">[R1-Serial0/0/1] ip address 10.10.10.1 24 </span><br><span class="line">//在S 0/0/1接口启用ppp，并指定认证方式为PAP</span><br><span class="line">[R1-Serial0/0/1]link-protocol ppp</span><br><span class="line">[R1-Serial0/0/1]ppp authentication-mode pap</span><br></pre></td></tr></table></figure><p>（3）案例配置过程<br>② 被认证方路由器R2的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//在路由器R2上配置S 0/0/1接口的IP</span><br><span class="line">[R2]interface Serial 0/0/1  </span><br><span class="line">[R2-Serial0/0/1] ip address 10.10.10.2 24 </span><br><span class="line">//在接口S 0/0/1启用PPP，并指定PAP认证的账号和密码</span><br><span class="line">[R2-Serial0/0/1]link-protocol ppp</span><br><span class="line">[R2-Serial0/0/1]ppp pap local-user jan16 password cipher huawei </span><br></pre></td></tr></table></figure><p>（4）案例验证<br>使用命令【Debugging PPP PAP all】在路由器R2上查看PAP认证的详细信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;debugging ppp pap all</span><br><span class="line">Aug 25 2019 05:30:24.280.4+00:00 R2 PPP/7/debug2:</span><br><span class="line">  PPP State Change: </span><br><span class="line">      Serial4/0/0 PAP : Initial --&gt; SendRequest </span><br><span class="line">Aug 25 2019 05:30:24.290.3+00:00 R2 PPP/7/debug2:</span><br><span class="line">  PPP State Change: </span><br><span class="line">      Serial4/0/0 PAP : SendRequest --&gt; ClientSuccess</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>从上面的验证的信息中可以看到PAP认证已成功配置。</p><p>3、案例5-3 CHAP认证的配置<br>（1）案例背景与要求：根据下图所示的网络拓扑要求，完成两台路由器的CHAP认证通信配置，认证的用户名为“jan16”，密码为“huawei”，采用加密方式密文方式。</p><p><a href="https://imgtu.com/i/Ti3YZT"><img src="https://s4.ax1x.com/2021/12/17/Ti3YZT.png" alt="Ti3YZT.png"></a></p><p>（2）案例配置思路<br>①配置路由器R1和R2的接口IP；<br>②在路由器R1上配置认证的账号和密码，并制定该账号和密码用于PPP的CHAP认证；<br>③在路由器R2上启用PPP，并设置CHAP认证的账号和密码。</p><p>（3）案例配置过程<br>①路由器R1的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//在路由器R1上配置CHAP认证的账号和密码</span><br><span class="line">[R1]aaa </span><br><span class="line">[R1-aaa]local-user jan16 password cipher huawei</span><br><span class="line">//在路由器R1指定该密码应用于PPP认证</span><br><span class="line">[R1-aaa]local-user jan16 service-type ppp </span><br><span class="line">//配置路由器R1的S 0/0/1接口的IP</span><br><span class="line">[R1]interface Serial 0/0/1  </span><br><span class="line">[R1-Serial0/0/1] ip address 10.10.10.1 24 </span><br><span class="line">//在S 0/0/1接口启用ppp，并指定认证方式为CHAP</span><br><span class="line">[R1-Serial0/0/1]link-protocol ppp</span><br><span class="line">[R1-Serial0/0/1]ppp authentication-mode chap//在路由器R1上配置CHAP认证的账号和密码</span><br><span class="line">[R1]aaa </span><br><span class="line">[R1-aaa]local-user jan16 password cipher huawei</span><br><span class="line">//在路由器R1指定该密码应用于PPP认证</span><br><span class="line">[R1-aaa]local-user jan16 service-type ppp </span><br><span class="line">//配置路由器R1的S 0/0/1接口的IP</span><br><span class="line">[R1]interface Serial 0/0/1  </span><br><span class="line">[R1-Serial0/0/1] ip address 10.10.10.1 24 </span><br><span class="line">//在S 0/0/1接口启用ppp，并指定认证方式为CHAP</span><br><span class="line">[R1-Serial0/0/1]link-protocol ppp</span><br><span class="line">[R1-Serial0/0/1]ppp authentication-mode chap</span><br></pre></td></tr></table></figure><p>②路由器R2的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//在路由器R2上配置S 0/0/1接口的IP</span><br><span class="line">[R2]interface Serial 0/0/1  </span><br><span class="line">[R2-Serial0/0/1] ip address 10.10.10.2 24 </span><br><span class="line">//在接口S 0/0/1启用PPP，并指定CHAP认证的账号和密码</span><br><span class="line">[R2-Serial0/0/1]link-protocol ppp</span><br><span class="line">[R2-Serial0/0/1]ppp chap user jan16</span><br><span class="line">[R2-Serial0/0/1]ppp chap password cipher huawei</span><br></pre></td></tr></table></figure><p>（4）案例验证<br>使用命令【Debugging PPP CHAP all】在路由器R2上查看CHAP认证的详细信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;debugging ppp chap all</span><br><span class="line">Aug 26 2019 05:15:54.230.1+00:00 RTB PPP/7/debug2:</span><br><span class="line">PPP State Change: </span><br><span class="line">      Serial0/0/1 CHAP : Initial --&gt; ListenChallenge </span><br><span class="line">Aug 20 2019 05:15:54.230.7+00:00 R2 PPP/7/debug2:</span><br><span class="line">  PPP State Change: </span><br><span class="line">      Serial0/0/1 CHAP : ListenChallenge --&gt; SendResponse </span><br><span class="line">Aug 20 2019 05:15:54.250.3+00:00 R2 PPP/7/debug2:</span><br><span class="line">  PPP State Change: </span><br><span class="line">     Serial0/0/1 CHAP : SendResponse --&gt; ClientSuccess </span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>从上面的测试信息中可以看到CPAP认证已成功配置。</p><h1 id="以太网上的点对点协议-PPPoE"><a href="#以太网上的点对点协议-PPPoE" class="headerlink" title="以太网上的点对点协议-PPPoE"></a>以太网上的点对点协议-PPPoE</h1><h2 id="PPPoE基本概念"><a href="#PPPoE基本概念" class="headerlink" title="PPPoE基本概念"></a>PPPoE基本概念</h2><p><strong>1、PPPoE协议的基本概念</strong><br>PPPoE，即以太网上的点对点协议（Point-to-Point Protocol Over Ethernet）是一个允许在以太广播域中的两个以太网接口之间创建点对点隧道的协议。<br>下图所示是一个典型的PPPoE网络模型，多个PPPoE客户端通过以太网（同一个广播域）接入到PPPoE服务端。</p><p><a href="https://imgtu.com/i/Ti3wW9"><img src="https://s4.ax1x.com/2021/12/17/Ti3wW9.png" alt="Ti3wW9.png"></a></p><p>2、PPPoE协议报文格式<br>PPPoE报文格式如图所示</p><p><a href="https://imgtu.com/i/Ti3DQ1"><img src="https://s4.ax1x.com/2021/12/17/Ti3DQ1.png" alt="Ti3DQ1.png"></a></p><hr><p><strong>tip:</strong></p><p>关于PPPoE报文中各字段的含义描述如下：<br>（1）DMAC：表示以太网目标设备的MAC地址，通常为以太网单播目的地址或者以太网广播地址（0xFFFFFFFF）。<br>（2）SMAC：表示以太网源设备的MAC地址。<br>（3）Type：表示协议类型字段，当值为0x8863时表示承载的是PPPoE发现阶段的报文。当值为0x8864时表示承载的是PPPoE会话阶段的报文。<br>（4）FCS：表示校验域，用来确保数据链路层数据帧传输的正确性。<br>（5）PPPoE字段。<br>① VER：表示PPPoE版本号，协议规定固定为0x01。<br>② Type：表示类型，协议规定固定为0x01。<br>③ Code：表示PPPoE报文类型，不同取值标识不同的PPPoE报文类型。<br>④ Session ID：当访问集中器（PPPoE Server）还未分配唯一的会话ID给用户主机时，该字段填充为0x0000，一旦主机获取了会话ID后，那么在后续的所有报文中都都填充这个会话ID。<br>⑤ Length：表示PPPoE报文的Payload长度。</p><hr><p>3、PPPoE的工作过程<br>PPPoE的工作过程，分为3个不同的阶段，即 Discovery阶段（发现阶段）、Session阶段（会话阶段）和Session Terminate阶段（会话终结阶段）。 PPPoE的通信流程如图所示。</p><p><a href="https://imgtu.com/i/Ti3sL6"><img src="https://s4.ax1x.com/2021/12/17/Ti3sL6.png" alt="Ti3sL6.png"></a></p><p>（1）发现阶段：在这个阶段一开始，由于客户端并不知道服务端的MAC地址，它将使用类似于ARP解析的过程的机制来获取服务端的MAC地址，并建立连接，这个过程主要有4个步骤：<br>① PADI（PPPoE Active Discovery Initiation）报文。<br>② PADO（PPPoE Active Discovery Offer）报文。<br>③ PADR（PPPoE Active Discovery Request）报文。<br>④ PADS（PPPoE Active Discovery Session Configuration）报文。</p><hr><p><strong>tip:</strong></p><p>① PADI（PPPoE Active Discovery Initiation）报文。<br>PPPoE Client发起的PPPoE服务器探测报文，目的MAC地址为广播地址，通过以太网广播寻找服务器。<br>② PADO（PPPoE Active Discovery Offer）报文。<br>PPPoE服务器收到PADI报文之后回应给发起方的回应报文，目的地址为客户端的MAC地址，源地址为服务器的MAC。<br>③ PADR（PPPoE Active Discovery Request）报文。<br>客户端收到PADO报文后，将通过PADR报文向服务端发起建立会话的请求报文，目的地之为服务器的MAC地址，源地址为客户端的MAC地址。<br>④ PADS（PPPoE Active Discovery Session Configuration）报文。<br>PPPoE服务器收到客户端的会话请求报文PADR时，当该客户端满足建立会话连接时，它将为这个会话分配一个唯一的会话ID，并发送会话建立确认报文PADS给客户端；否则将发送会话终止报文PADS给客户端，终止连接。</p><hr><p>（2）会话阶段<br>一旦PPPOE进入到会话阶段，则PPP的数据报文就会被填充在PPPOE的净载荷中被传送，这时两者所发送的所有以太网包均是单目地址。PPPOE会话阶段以太网帧的协议域填充为0x8864，代码域填充0x00，整个会话的过程就是PPP的会话过程，它可分为两部分：PPP协商阶段和PPP报文传输阶段。<br>PPP协商阶段和普通的PPP协商方式一致，具体流程如本节图5-4所示。PPPoE Session的PPP协商成功后，就可以承载PPP数据报文。在这一阶段传输的数据包中必须包含在发现阶段确定的Session ID，并保持不变。<br>（3）会话终结阶段<br>在PPPoE中定义了一个PADT 报文用来结束会话，PPPoE Client或者PPPoE Server可以在会话开始后的任何时候通过发送PADT报文来结束会话。</p><hr><p><strong>tip:</strong></p><p>① PADI（PPPoE Active Discovery Initiation）报文。<br>PPPoE Client发起的PPPoE服务器探测报文，目的MAC地址为广播地址，通过以太网广播寻找服务器。<br>② PADO（PPPoE Active Discovery Offer）报文。<br>PPPoE服务器收到PADI报文之后回应给发起方的回应报文，目的地址为客户端的MAC地址，源地址为服务器的MAC。<br>③ PADR（PPPoE Active Discovery Request）报文。<br>客户端收到PADO报文后，将通过PADR报文向服务端发起建立会话的请求报文，目的地之为服务器的MAC地址，源地址为客户端的MAC地址。<br>④ PADS（PPPoE Active Discovery Session Configuration）报文。<br>PPPoE服务器收到客户端的会话请求报文PADR时，当该客户端满足建立会话连接时，它将为这个会话分配一个唯一的会话ID，并发送会话建立确认报文PADS给客户端；否则将发送会话终止报文PADS给客户端，终止连接。</p><hr><h2 id="PPPoE配置"><a href="#PPPoE配置" class="headerlink" title="PPPoE配置"></a>PPPoE配置</h2><p>1、案例5-4 PPPoE的配置<br>（1）案例背景与需求：路由器R1是Jan16工作室的路由器，路由器R2是ISP的PPPoE服务器，路由器R1和R2通过以太网连接。路由器R1通过PPPoE拨号连接到路由器R2，并接入Internet。PC1通过路由器R1的NAT服务接入Internet。案例拓扑如图所示。</p><p><a href="https://imgtu.com/i/Ti3fWd"><img src="https://s4.ax1x.com/2021/12/17/Ti3fWd.png" alt="Ti3fWd.png"></a></p><hr><p><strong>tip:</strong></p><p> 案例需求如下：<br> （1）路由器R2的PPPoE Server的IP为1.1.1.254/24, 它通过G0/0/0口与路由器R1相连。<br> （2）PPPoE采用PPP的CHAP认证，用户名为jan16，密码为huawei@123。<br> （3）本案例仅实现路由器R1通过PPPoE同路由器R2互联。<br> （4） PC1的IP地址为：192.168.1.1，网关为192.168.1.254，路由器R2的LoopBack 0接口IP地址为2.2.2.2/24。</p><hr><p>（2）案例配置思路<br>1）PPPoE服务端R2的配置<br>① 配置Virtual-Template虚拟模板接口。<br>② 配置PPP的其他选项。<br>③ 将VT虚拟接口和PPPoE服务端以太口绑定。<br>④配置从PPPoE Server到 PPPoE Client的默认路由，实现网络互通。<br>2）PPPoE客户端R1的配置<br>① DCC（拨号控制中心）虚拟拨号接口（dialer）的配置。<br>② 将DCC的dialer虚拟拨号接口和PPPoE客户端以太网接口绑定。<br>③ 指定配置的拨号访问控制列表允许IPv4协议的数据报文。<br>④ 配置从PPPoE Client到 PPPoE Server的默认路由，实现网络互通。</p><hr><p><strong>tip:</strong></p><p>案例配置思路详细描述如下:<br>（1）PPPoE服务端R2的配置<br>① 配置Virtual-Template虚拟模板接口。<br>为了让以太网承载PPP，那么就需要配置虚拟模板（VT，Virtual-Template），虚拟模板就是为了让一条链路上可以封装多种同层协议的虚拟接口。因为现在的以太网物理接口已经默认封装了以太网协议，无法再封装其他协议了。所以需要通过VT来模拟一个PPP接口，然后封装其他协议如PPP，最后在把VT绑定到物理接口，实现PPP和以太网协议的嵌套。<br>② 配置PPP的其他选项。<br>包括PPPoE客户端分配的IP地址、DNS、网关以及用于PPP认证的用户名和密码等。<br>③ 将VT虚拟接口和PPPoE服务端以太口绑定。<br>把VT虚拟接口和连接PPPoE服务端的物理以太网接口绑定，完成PPPoE协议的封装。<br>④配置从PPPoE Server到 PPPoE Client的默认路由，实现网络互通。<br>（2）PPPoE客户端R1的配置<br>① DCC（拨号控制中心）虚拟拨号接口（dialer）的配置。<br>DDC虚拟拨号接口就是专门用来控制拨号的接口，在这个接口下配置封装协议、PPP认证、IP地址自动获得、dialer接口拨号使用的用户名、PPPoE连接建立的等待时间、dialer所属的组、指定dialer接口的编号（这个编号是用来和物理接口绑定时候用到的编号）、NAT地址转换等配置，都在是该拨号接口下完成的。<br>② 将DCC的dialer虚拟拨号接口和PPPoE客户端以太网接口绑定。<br>把DCC的dialer虚拟拨号接口和PPPoE客户端以太网接口绑定，完成PPPoE协议的封装。<br>③ 指定配置的拨号访问控制列表允许IPv4协议的数据报文。<br>④ 配置从PPPoE Client到 PPPoE Server的默认路由，实现网络互通。</p><hr><p>（3）案例配置步骤<br>1）PPPoE服务端R2的配置<br>① 配置VT及PPP的各种参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]interface Virtual-Template 1    //创建VT接口，编号可自定义，这里定为1</span><br><span class="line">[R2-Virtual-Template1]ppp authentication-mode chap //定义PPP采用CHAP方式认证</span><br><span class="line">[R2-Virtual-Template1]remote address pool jan16ippool //为PPPoE客户端指定IP地址池，名称自定义为jan16ippool</span><br><span class="line">[R2-Virtual-Template1]ip address 1.1.1.254 24   //设置VT接口的IP</span><br><span class="line">[R2-Virtual-Template1]quit</span><br></pre></td></tr></table></figure><p>② 配置PPP的其他选项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R2]ip pool jan16ippool                         //创建IP地址池“jan16ippool”</span><br><span class="line">[R2-ip-pool-jan16ippool]gateway-list 1.1.1.254  //为客户端指定网关</span><br><span class="line">[R2-ip-pool-jan16ippool]network 1.1.1.0 mask 24 //指定客户端分配的IP地址范围</span><br><span class="line">[R2-ip-pool-jan16ippool]dns-list 114.114.114.114 //为客户端指定DNS</span><br><span class="line">[R2-ip-pool-jan16ippool]quit</span><br><span class="line">[R2]aaa                                      //进入AAA本地用户数据库</span><br><span class="line">[R2-aaa]local-user jan16 password cipher huawei@123 //创建用于PPP认证的用户</span><br><span class="line">[R2-aaa]local-user jan16 service-type ppp    //指定用户“jan16”用于PPP认证</span><br><span class="line">[R2-aaa]quit</span><br></pre></td></tr></table></figure><p>③ 将物理接口与VT虚拟接口进行绑定，实现pppoe协议的封装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R2]int g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]pppoe-server bind virtual-template 1  </span><br><span class="line">//将G0/0/0接口与VT 1接口绑定</span><br></pre></td></tr></table></figure><p>④配置从PPPoE Server到 PPPoE Client的默认路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[R2]ip route-static 0.0.0.0 0.0.0.0 Virtual-Template1</span><br></pre></td></tr></table></figure><p>⑤配置路由器R2的LoopBack 0接口IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R2]int LoopBack 0</span><br><span class="line">[R2-LoopBack0]ip address 2.2.2.2 24</span><br><span class="line">[R2-LoopBack0]quit</span><br></pre></td></tr></table></figure><p>2）PPPoE客户端路由器R1的配置<br>①配置路由器R1的GE0/0/1接口的IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">[Huawei]sys R1</span><br><span class="line">[R1]int g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip address 192.168.1.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>②DCC虚拟拨号接口dialer的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R1]int Dialer 1        //创建DCC的dialer接口，编号可自定义，这里定义为1</span><br><span class="line">[R1-Dialer1]link-protocol ppp               //封装PPP</span><br><span class="line">[R1-Dialer1]ppp chap user jan16             //配置PPP的chap认证用户名</span><br><span class="line">[R1-Dialer1]ppp chap password simple huawei@123  //配置chap认证的密码</span><br><span class="line">[R1-Dialer1]ip address ppp-negotiate        //设置PPPoE客户端自动获取IP地址</span><br><span class="line">[R1-Dialer1]dialer user jan16              //指定dialer接口拨号使用的用户名</span><br><span class="line">[R1-Dialer1]dialer bundle 1                //指定dialer接口的编号</span><br><span class="line">[R1-Dialer1]dialer-group 1           //将该接口置于一个拨号组中，编号</span><br><span class="line">[R1-Dialer1]quit</span><br></pre></td></tr></table></figure><p>③将DCC的dialer虚拟拨号接口和PPPoE客户端以太网接口绑定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]pppoe-client dial-bundle-number 1</span><br><span class="line">//将G0/0/0接口与dialer 1 接口绑定</span><br></pre></td></tr></table></figure><p>④指定配置的拨号访问控制列表允许IPv4协议的数据报文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]dialer-rule </span><br><span class="line">[R1]dialer-rule 1 ip permit</span><br></pre></td></tr></table></figure><p>⑤配置从PPPoE Client到 PPPoE Server的默认路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]ip route-static 0.0.0.0 0 dialer 1 </span><br><span class="line">[R1]quit</span><br></pre></td></tr></table></figure><p>（4）案例验证<br>① 在PPPoE客户端R1执行【display pppoe-client session summary】命令，查看PPPoE client会话的状态和配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis pppoe-client session summary </span><br><span class="line">PPPoE Client Session:</span><br><span class="line">ID   Bundle  Dialer  Intf             Client-MAC    Server-MAC    State</span><br><span class="line">1    1       1       GE0/0/0          00e0fc385510  00e0fc8c5842  UP</span><br></pre></td></tr></table></figure><p>②在PPPoE服务器端R2执行【display pppoe-server session all】命令，查看PPPoE server会话的状态和配置信息。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R2]display pppoe-server session all</span><br><span class="line">SID Intf                   State OIntf          RemMAC         LocMAC</span><br><span class="line">1   Virtual-Template1:0    UP    GE0/0/0        00e0.fc38.5510 00e0.fc8c.5842</span><br></pre></td></tr></table></figure><p>③ 在内网主机PC1执行【ping 2.2.2.2】，测试与服务端R2的LoopBack 0接口的连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 2.2.2.2</span><br><span class="line"> </span><br><span class="line">Ping 2.2.2.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 2.2.2.2: bytes=32 seq=1 ttl=254 time=32 ms</span><br><span class="line">From 2.2.2.2: bytes=32 seq=2 ttl=254 time=31 ms</span><br><span class="line">From 2.2.2.2: bytes=32 seq=3 ttl=254 time=16 ms</span><br><span class="line">From 2.2.2.2: bytes=32 seq=4 ttl=254 time=15 ms</span><br><span class="line">From 2.2.2.2: bytes=32 seq=5 ttl=254 time=31 ms</span><br><span class="line"> </span><br><span class="line">--- 2.2.2.2 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 15/25/32 ms</span><br></pre></td></tr></table></figure><p>结果显示，内网PC1成功连接到路由器R2的LoopBack 0接口。</p>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.华为1+X-网络可靠性</title>
      <link href="2021/12/15/%E5%8D%8E%E4%B8%BA1+X/4.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E5%8F%AF%E9%9D%A0%E6%80%A7/"/>
      <url>2021/12/15/%E5%8D%8E%E4%B8%BA1+X/4.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E5%8F%AF%E9%9D%A0%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-网络可靠性</p><p>网络可靠性是影响网络运行质量的重要指标，一个可靠性强的网络既要有很强的网络弹性（Resilience）以保证故障的快速复原，又要有很高的吞吐量以保证出入流量的负载均衡。</p><h1 id="VRRP协议"><a href="#VRRP协议" class="headerlink" title="VRRP协议"></a>VRRP协议</h1><h2 id="VRRP概述"><a href="#VRRP概述" class="headerlink" title="VRRP概述"></a>VRRP概述</h2><p>VRRP定义：虚拟路由器冗余协议（Virtual Router Redundancy Protocol），是一种容错协议；<br>VRRP的作用：VRRP提供了将多台路由器虚拟成一台路由器的服务，它通过虚拟化技术，将多台物理设备在逻辑上合并为一台虚拟设备，同时让物理路由器对外隐藏各自的信息，以便针对其他设备提供一致性的服务。<br>实现网关冗余<br>提升网络可靠性</p><p>VRRP通过把几台路由设备联合组成一台虚拟的路由设备，并通过一定的机制来保证当主机的下一跳设备出现故障时，可以及时将业务切换到其他设备，从而保持通讯的连续性和可靠性。<br>VRRP提供了将多台路由器虚拟成一台路由器的服务，它通过虚拟化技术，将多台物理设备在逻辑上合并为一台虚拟设备，同时让物理路由器对外隐藏各自的信息，以便针对其他设备提供一致性的服务。</p><h2 id="VRRP工作原理"><a href="#VRRP工作原理" class="headerlink" title="VRRP工作原理"></a>VRRP工作原理</h2><p><strong>VRRP相关术语</strong></p><p>VRRP组：当管理员为了实现网关设备的冗余而通过配置的手段，将连接在同一个局域网中的一组VRRP路由器（接口）划分到同一个逻辑网关（接口）组中让它们充当这个局域网中终端设备的主用/备用网关时，管理员所创建的这个逻辑组就是VRRP组。<br>虚拟IP地址：由于在一个VRRP组中，多个路由器（的接口）需要作为一台虚拟路由器对外提供服务。因此，这些路由器（接口）需要对外使用相同的IP地址来响应终端发送给默认网关目的IP地址的流量，这个IP地址也就是VRRP组的虚拟IP地址。<br>虚拟MAC地址：由于在一个VRRP组中，多个路由器（的接口）需要作为一台虚拟路由器对外提供服务。因此，这些路由器（接口）需要对外使用一个（不同于自己实际MAC地址的）一致的虛拟MAC地址来响应终端发送给默认网关流量的目的MAC地址，这个MAC地址也就是VRRP组的虚拟MAC地址。<br>VRID：同一个VRRP路由器（接口）有时需要参与多个VRRP组，因此需要有种标识能够区分每个VRRP组，VRID就是标识不同VRRP组的标识符。<br>主用设备（Master）与备用设备（Backup）：每个VRRP组中会有一个VRRP路由器（接口）充当主用（ Master）设备，这个主用设备会承担局域网网关的角色，负责转发数据报文和周期性向备用设备发送VRRP报文；其他参与这个VRRP组的VRRP设备接口则充当备用（Backup）设备，备用设备不负责转发数据报文。<br>优先级：优先级是管理员在每个VRRP组中分配给各个VRRP路由器（接口）的参数，一个VRRP组中优先级最高的那个VRRP路由器（接口）会在主用路由器选举胜出，承担主用路由器的角色。<br>抢占：如果一台VRRP路由器工作在抢占模式（Preempt Mode）下，那么当这台VRRP路由器（接口）的VRRP优先级值高于这个VRRP组中当前主用路由器的VRRP优先级值，这台VRRP路由器（的接口）就会成为主用路由器。</p><p><a href="https://imgtu.com/i/TuZ6Vx"><img src="https://s4.ax1x.com/2021/12/20/TuZ6Vx.png" alt="TuZ6Vx.png"></a></p><p><strong>VRRP封装格式</strong><br>虚拟路由器ID、优先级<br>类型、IP地址数<br>认证类型、通告时间间隔<br>校验和、IP地址<br>认证数据</p><p><a href="https://imgtu.com/i/TuZfRe"><img src="https://s4.ax1x.com/2021/12/20/TuZfRe.png" alt="TuZfRe.png"></a></p><p>虚拟路由器ID和优先级取值的上限皆为“255”，即8位二进制数全部取“1”时对应的十进制数。其中，虚拟路由器ID的取值范围是1<del>255，而优先级字段的取值范围是0</del>255。<br>优先级值越大则这个接口在主用路由器选举中的优先级就越高，“0”表示这个VRRP路由器接口立刻停止参与这个VRRP组，如果管理员给主用路由器赋予了“0”这个优先级，那么优先级值最高的备用路由器就会被选举为新的主用路由器，而IP地址拥有者的优先级为“255”，优先级为“255”的设备会直接成为主用设备，华为路由器接口默认的优先级值为“100”。</p><p><strong>VRRP工作过程</strong><br>(1) VRRP组选举出主用路由器（master）<br>①对比优先级<br>优先级最高的成为主用路由器。<br>②对比接口IP地址<br>如果优先级相同，接口IP地址最高的成为主用路由器。</p><p><a href="https://imgtu.com/i/TuZOJS"><img src="https://s4.ax1x.com/2021/12/20/TuZOJS.png" alt="TuZOJS.png"></a></p><p>VRRP组中的路由器在选举主用路由器时，会首先对比优先级，优先级最高的接口会成为主用路由器。如果多个VRRP路由器接口的优先级相同，它们之间则会继续对比接口的IP地址，接口IP地址最高的会成为主用路由器。<br>如果VRRP 路由器接口的 IP 地址和虚拟路由器的 IP 地址相同，则称该路由器为 VRRP 组中的 IP 地址所有者，具有最高优先级（255），自动成为 主用路由器，无需进行选举。</p><p>(2) 主用路由器发送ARP通告和VRRP通告<br>① 用ARP消息通告虚拟IP地址和MAC地址<br>② 用VRRP消息通告VRRP头部\组号\优先级等</p><p><a href="https://imgtu.com/i/TueSLn"><img src="https://s4.ax1x.com/2021/12/20/TueSLn.png" alt="TueSLn.png"></a></p><p>主用路由器主动在这个局域网中发送ARP响应消息来通告这个VRRP组虚拟的MAC地址，并且开始周期性地向VRRP组中的其他路由器通告自己的信息和状态，通告虚拟MAC地址和本身的信息状态。</p><p>(3) VRRP主用路由器负责转发往返于内外部网络的流量。</p><p><a href="https://imgtu.com/i/TueAWF"><img src="https://s4.ax1x.com/2021/12/20/TueAWF.png" alt="TueAWF.png"></a></p><p>当这个局域网中的终端都获得了网关地址（也即VRRP组虚拟IP地址）所对应的MAC地址（即VRRP组虚拟MAC地址）之后，它们就会使用虚拟IP地址和虚拟MAC地址封装数据。同时，在所有接收到发送给网关虚拟地址的VRRP组成员设备中，只有主用设备会对这些数据进行处理或转发，备用路由器则会丢弃发送给虚拟地址的数据。</p><h2 id="VRRP配置"><a href="#VRRP配置" class="headerlink" title="VRRP配置"></a>VRRP配置</h2><p><strong>案例4-1 VRRP基本配置</strong><br>案例背景与要求<br>在企业拓扑环境中，路由器R1和R2是两台连接企业网关（GW）的路由器，GW通过ISP（服务器提供商）接入Internet；<br>企业网要求管理员使用VRRP实现路由器R1和R2做路由备份，提高外网接入的可靠性。在默认情况下，路由器R1为主用路由器，路由器R2为备用路由器，企业内部用户（如图中的PC10）使用虚拟路由器的IP地址（10.10.10.254）作为网关地址。</p><p><a href="https://imgtu.com/i/TueJQH"><img src="https://s4.ax1x.com/2021/12/20/TueJQH.png" alt="TueJQH.png"></a></p><p><strong>接口与地址规划</strong></p><table><thead><tr><th>设备接口</th><th>IP地址</th></tr></thead><tbody><tr><td>VRRP虚拟路由器VRID 10</td><td>10.1.1.254/24</td></tr><tr><td>路由器R1接口G0/0/0</td><td>10.1.1.251/24</td></tr><tr><td>路由器R1接口G0/0/1</td><td>1.1.1.1/30</td></tr><tr><td>路由器R2接口G0/0/0</td><td>10.1.1.252/24</td></tr><tr><td>路由器R2接口G0/0/1</td><td>2.1.1.1/30</td></tr><tr><td>PC10 IP地址</td><td>10.1.1.10/24</td></tr><tr><td>PC10 网关地址</td><td>10.1.1.254</td></tr><tr><td>GW与路由器R1相连接口</td><td>1.1.1.2/30</td></tr><tr><td>GW与路由器R2相连接口</td><td>2.1.1.2/30</td></tr><tr><td>模拟Internet设备</td><td>172.16.1.1</td></tr></tbody></table><p><strong>案例配置过程</strong><br>在路由器接口添加VRRP配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]vrrp vrid 10 virtual-ip 10.1.1.254  //vrrp vrid 10指定了VRRPD备份组为VRID 10，virtual-ip 10.1.1.254指定虚拟IP地址为10.1.1.254</span><br><span class="line">[R1-GignbitEthernet0/0/0]vrrp vrid 10 priority 150   //调整接口在VRID 10中的优先级为150</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R2]interface g0/0/0</span><br><span class="line">[R2-GigahitEthernet0/0/0]vrrp vrid 10 virtual-ip 10.1.1.254    //设置备份组VRID10的虚拟IP地址</span><br></pre></td></tr></table></figure><p>以上配置中，在路由器R1的接口G0/0/0上配置了【vrrp vrid 10 virtual-ip 10. 1. 1.254】命令，这条命令中指定了VRRP备份组为VRID 10。虚拟IP地址为10.1.1.254。在实际工作中，管理员可以根据VLAN ID来设置VRRP备份组的VRID。同时这个接口上还配置了【vrrp vrid 10 priority 150】命令，这条命令会把这个接口在VRID 10中的优先级调整为150，使其大于默认值100，从而令路由器R1能够成为VRID 10的主用路由器。<br>同时，在路由器R2接口G0/0/0上也指定了VRID 10和虚拟IP地址10.1.1.254，没有配置优先级是为了保留VRRP优先级100的默认设置。</p><p><strong>检查VRRP状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1]display vrrp brief</span><br><span class="line">Total:1    Master:1      Backup:0     Non-active:0</span><br><span class="line">VRID  State     Interface             Type      Virtual IP</span><br><span class="line">                                                         </span><br><span class="line">10    Master    GE0/0/0               Normal    10.1.1.254</span><br><span class="line">//Master VRRP主用路由器用来传输数据流量</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R2]display vrrp brief</span><br><span class="line">Total:1    Master:0      Backup:1     Non-active:0</span><br><span class="line">VRID  State     Interface            Type      Virtual IP</span><br><span class="line">                                                         </span><br><span class="line">10    Backup    GE0/0/0              Normal    10.1.1.254</span><br><span class="line">//Backup VRRP备用路由器</span><br></pre></td></tr></table></figure><p>从上面的显示信息可以看出，在路由器R1和R2上使用了相同的【display vrrp brief】命令，这条命令可以用来查看VRRP简化信息，不仅可以看到接口上配置的VRID和虚拟IP地址，还可以看到接口的角色。路由器R1上显示的“Master”表示本地路由器是VRRP主用路由器用来传输数据流量；路由器R2上显示的“Backup”表示本地路由器是VRRP备用路由器，当主用路由器失效时，它能够成为VRRP主用设备。</p><p><strong>查看VRRP版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1]display vrrp protocol-information</span><br><span class="line">VRRP protocol information is shown as below</span><br><span class="line">VRRP protocol version： v2  //VRRP协议版本为version2</span><br><span class="line">Send advertisement packet node send v2 only </span><br></pre></td></tr></table></figure><p><strong>检测VRRP连通性及路径</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  PC10&gt;ping 172.16.1.1</span><br><span class="line">  PING 172.16.1.1: 32 data bytes, press CTRL_C to break</span><br><span class="line">  Reply from 172.16.1.1: bytes=32 Sequence=1 ttl=254 time=57ms</span><br><span class="line">  Reply from 172.16.1.1: bytes=32 Sequence=2 ttl=254 time=45ms</span><br><span class="line">  Reply from 172.16.1.1: bytes=32 Sequence=3 ttl=254 time=47ms</span><br><span class="line">  Reply from 172.16.1.1: bytes=32 Sequence=4 ttl=254 time=42ms</span><br><span class="line">  Reply from 172.16.1.1: bytes=32 Sequence=5 ttl=254 time=46ms</span><br><span class="line">//pc10能够正常访问Internet设备</span><br><span class="line">  PC10&gt;tracert 172.16.1.1</span><br><span class="line">  traceroute to 172.16.1.1 ,  8 hops max</span><br><span class="line">  （ICMP）,press Ctrl+C to stop</span><br><span class="line">   1  10.1.1.251   32ms  43ms  32ms</span><br><span class="line">   2  172.16.1.1   56ms  48ms  42ms</span><br><span class="line">//传输的路径是pc10-R1-GW</span><br></pre></td></tr></table></figure><p>要查看当前路由器上运行的VRRP版本，可以使用【display vrrp protocol-information】命令。在路由器R1上运行这条命令后可以输出VRRP的版本等内容信息，如下划线部分输出的是VRRP版本2。</p><p><strong>配置VRRP追踪上行接口状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]vrrp vrid 10 track interface G0/0/1 reduced 100</span><br><span class="line">//track interface G0/0/1在VRRP 10中追踪接口G0/0/1的状态，reduced 100 把VRRP VRID 10的优先级减少100</span><br></pre></td></tr></table></figure><p><strong>手动关闭路由器R1的接口G0/0/1来模拟上行链路故障</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]shutdown</span><br><span class="line">Jan 20 2020 05:50:09-08:00 R1  %%01IFNET/4/LINK_STATE(l)[1]:The line protocol IP</span><br><span class="line"> on the interface GigabitEthernet0/0/1 has entered the DOWN state. </span><br><span class="line">Jan 20 2020 05:50:09-08:00 R1  %%01VRRP/4/STATEWARNINGEXTEND(l)[2]:Virtual Router state MASTER changed to BACKUP, because of priority calculation. (Interface=GigabitEthernet0/0/0, VrId=167772160, InetType=IPv4)</span><br><span class="line">[R1-GigabitEthernet0/0/1]</span><br><span class="line">Jan 20 2020 05:50:09-08:00 R1 VRRP/2/ VRRPMASTERDOWN:OID 16777216.50331648.10066</span><br><span class="line">3296.16777216.67108864.16777216.3674669056.83886080.419430400.2130706432.3355443</span><br><span class="line">2.503316480.16777216 The state of VRRP changed from master to other state. (Vrrp</span><br><span class="line">IfIndex=50331648, VrId=167772160, IfIndex=50331648, IPAddress=251.1.1.10, NodeNa</span><br><span class="line">me=R1, IfName=GigabitEthernet0/0/0, CurrentState=Backup, ChangeReason=priority Calculation(GE0/0/1 down))</span><br><span class="line">//MASTER changed to BACKUP, because of priority calculation. VRRP状态从主用变为备用，ChangeReason=priority Calculation(GE0/0/1 down))原因是G0/0/1接口状态变为“DOWN”</span><br></pre></td></tr></table></figure><p>从配置命令可以看出：路由器R1要在VRRP VRID 10中追踪接口G0/0/1的状态，当G0/0/0的状态变为DOWN时，把VRRP VRID 10的优先级减少100。如果将路由器R1接口G0/0/0的VRID 10优先级配置为“150”，那么，当优先级减少100后，它的优先级就变为“50”，从而低于路由器R2接口G0/0/0的优先级100。这样一来，路由器R2就可以通过优先级抢占主用角色。</p><p><strong>执行【tracert】命令进行路径跟踪测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC10&gt;tracert 172.16.1.1</span><br><span class="line">traceroute to 172.16.1.1 ,  8 hops max</span><br><span class="line">（ICMP）,press Ctrl+C to stop</span><br><span class="line">1  10.1.1.252   92ms  45ms  30ms</span><br><span class="line">2  172.16.1.1   46ms  42ms  46ms</span><br><span class="line">//1  10.1.1.252   92ms  45ms  30ms传输路径是pc10-R2-GW</span><br></pre></td></tr></table></figure><p><strong>VRRP的抢占</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]undo shutdown</span><br><span class="line">[R1-GigabitEthernet0/0/1]</span><br><span class="line">Jan 20 2020 07:41:17-08:00 R1 %%01IFPDT/4/IF_STATE(l)[4]:Interface GigabitEthernet0/0/1 has turned into UP state.</span><br><span class="line">[R1-GigabitEthernet0/0/1]</span><br><span class="line">Jan 20 2020 07:41:17-08:00 R1%%01IFNET/4/LINK_STATE(l)[5]:The line protocol IP on the interface GigabitEthernet0/0/1 has entered the UP state.</span><br><span class="line">[R1-GigabitEthernet0/0/1]</span><br><span class="line">Jan 20 2020 07:41:17-08:00 R1 %%01VRRP/4/STATEWARNINGEXTEND(1)[6]: Virtual Router state BACKUP changed to MASTER, because of priority calculation. (Interface=GigabitEthernet0/0/0, VrId=167772160, InetType=IPv4)</span><br><span class="line">//Virtual Router state BACKUP changed to MASTER, because of priority calculation. 路由器R1重新夺会了主用路由器的角色</span><br></pre></td></tr></table></figure><p>从路径跟踪显示的下划线行可以清楚地知道，当前PC10已经开始通过路由器R2的G0/0/0接口来访问Internet了，因此，VRRP的故障切换成功。</p><p><strong>查看路由器R1上VRRP的抢占状态</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/1</span><br><span class="line">[R1]display vrrp 10</span><br><span class="line">GigabitEthernet0/0/0 ｜Virtual Router 10</span><br><span class="line">State : master</span><br><span class="line">Virtual IP : 10.1.1.254</span><br><span class="line">Master IP : 10.1.1.251</span><br><span class="line">PriorityRun：150</span><br><span class="line">PriorityConfig ：150</span><br><span class="line">MasterPriority：150</span><br><span class="line">Preempt： YES   Delay Time：0 s</span><br><span class="line">TimerRun：1 s</span><br><span class="line">Timer Config： 1 s</span><br><span class="line">//Preempt： YES   Delay Time：0 s开启了抢占功能，延迟时间为0S</span><br></pre></td></tr></table></figure><p>从下划线部分我们可以看到抢占功能是开启的，并且延迟时间为0s（默认设置）。也就是说，当路由器感知到需要切换VRRP状态的事件后，它会立即进行切换。除此之外，这条命令的输出内容中还包括接口上有关VRRP的其他配置信息。</p><p><strong>查看路由器R1的VRRP状态变化情况</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R1]display vrrp state-change interface GigabitEthernet 0/0/0 vrid 10</span><br><span class="line"></span><br><span class="line">Time                            Sourcestate    DestState   Reason                                                            </span><br><span class="line">2020-01-20 05:42:00 UTC-08:00   Iinitialist     Backup     Interface up</span><br><span class="line">2020-01-20 05:42:03 UTC-08:00   Backup          Master     Protocol timer expired</span><br><span class="line">2020-01-20 06:32:00 UTC-08:00   Master          Backup     Priority calculation</span><br><span class="line">2020-01-20 07:42:08 UTC-08:00   Backup          Master     Priority calculation</span><br><span class="line">//2020-01-20 06:32:00 UTC-08:00   Master          Backup     Priority calculation</span><br><span class="line">2020-01-20 07:42:08 UTC-08:00   Backup          Master     Priority calculation关闭和启用路由器R1接口G0/0/1导致的VRRP状态切换事件</span><br></pre></td></tr></table></figure><p>为了查看路由器R1的G0/0/0接口的VRID 10中的VRRP状态变化情况，可以使用【display vrrp state-change interface GigabitEthernet0/0/0 vrid 10】命令进行查看。方框内展示的正是关闭和启用路由器R1接口G0/0/1导致的VRRP状态切换事件。</p><p><strong>案例4-2  VRRP认证配置</strong><br>案例背景与要求<br>企业网络拓扑中有一台PC20，IP地址为10.1.1.20/24，网关地址为10.1.1.253。管理员要在路由器R1和R2上添加一个VRRP备份组，将VRID设置为20，虚拟IP地址设置为10.1.1.253，主用路由器为路由器R2，备用路由器为路由器R1，并且它们之间需要使用密码进行VRRP通信。</p><p><a href="https://imgtu.com/i/TuKVtx"><img src="https://s4.ax1x.com/2021/12/20/TuKVtx.png" alt="TuKVtx.png"></a></p><p><strong>案例配置过程</strong><br>在路由器R1和R2上配置VRRP VRID 20并启用认证功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]vrrp vrid 20 virtual-ip 10.1.1.253</span><br><span class="line">[R1-GigabitEthernet0/0/0]vrrp vrid 20 authentication-mode simple plain huawei</span><br><span class="line">//authentication-mode simple plain huawei 启用VRRP认证，密钥为Huawei</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R2]interface g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]vrrp vrid 20 virtual-ip 10.1.1.253</span><br><span class="line">[R2-GigabitEthernet0/0/0]vrrp vrid 20 priority 150</span><br><span class="line">[R2-GigabitEthernet0/0/0]vrrp vrid 20 authentication-mode simple plain huawei</span><br></pre></td></tr></table></figure><p>【vrrp vrid 20 priority 150】命令是把路由器R2在VRID 20中的优先级调整为150，使路由器R2成为主用路由器。启用VRRP认证的命令为【vrrp vrid 20 authentication-mode simple plain huawei】，此命令的完整语法是【vrrp vrid virtual-router-id authentication-mode{simple {key| plain key |cipher cipher-key}|md5 md5-key}】。</p><p><strong>VRRP认证验证结果</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]display vrrp 20</span><br><span class="line">GigabitEthernet0/0/0 ｜ Virtual Router 20</span><br><span class="line">State : Backup</span><br><span class="line">Virtual IP：10.1.1.253</span><br><span class="line">Master ip：10.1.1.252</span><br><span class="line">PriorityRun : 100</span><br><span class="line">PriorityConfig : 100</span><br><span class="line">MasterPriority : 150</span><br><span class="line">Preempt : YES   Delay Time : 0 s</span><br><span class="line">TimerRun : 1 s</span><br><span class="line">TimerConfig : 1 s</span><br><span class="line">Auth type : SIMPLE   Auth key : huawei</span><br><span class="line">//Auth type : SIMPLE   Auth key : huawei认证模式为“SIMPLE”，认证密钥为“huawei”</span><br></pre></td></tr></table></figure><p>从验证状态信息的阴影行可以知道，在路由器R1上已经启用了VRRP认证，认证模式为“SIMPLE”，认证密钥为“huawei”。<br>对比分析VRRP的VRID 10和VRID 20的配置，我们可以知道，VRRP的认证是基于VRRP备份组进行设置的，认证模式和密码不是固定的，可以为不同的VRRP备份组设置不同的认证模式和不同的认证密码。</p><p><strong>VRRP的负载均衡</strong><br>VRRP负载均衡概述<br>VRRP负载均衡模式中，Master路由器负责为备份组中的路由器分配虚拟MAC地址，并为来自不同主机的ARP请求应答不同的虚拟MAC地址，从而实现流量在多台路由器之间均衡分担。</p><p><a href="https://imgtu.com/i/TuKXKe"><img src="https://s4.ax1x.com/2021/12/20/TuKXKe.png" alt="TuKXKe.png"></a></p><p>从拓扑图的路径可以看出，基于前面的配置，网络环境中已经通过VRRP实现了流量的负载均衡，PC10和PC20分别通过路由器R1和R2成功访问Internet。</p><p>VRRP负载均衡验证：通过分别在PC10和PC20上执行【tracert】命令验证负载均衡的结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC10&gt;tracert 172.16.1.1</span><br><span class="line">traceroute to 172.16.1.1 , 8 hops max</span><br><span class="line">（ICMP）,press Ctrl+C to stop</span><br><span class="line">1  10.1.1.251   95ms  47ms  43ms</span><br><span class="line">2  172.16.1.1   46ms  48ms  40ms</span><br><span class="line">//1  10.1.1.251   95ms  47ms  43ms传输的路径是PC10→R1→GW</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC20&gt;tracert 172.16.1.1</span><br><span class="line">traceroute to 172.16.1.1 ,  8 hops max</span><br><span class="line">（ICMP）,press Ctrl+C to stop</span><br><span class="line">1  10.1.1.252   75ms  64ms  46ms</span><br><span class="line">2  172.16.1.1   64ms  72ms  67ms</span><br><span class="line">//1  10.1.1.252   75ms  64ms  46ms传输的路径是PC20→R2→GW</span><br></pre></td></tr></table></figure><p>VRRP负载均衡的验证：通过分别在R1和R2上执行【display vrrp brief】命令查看VRRP的状态信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1]display vrrp brief</span><br><span class="line">Total:2    Master:1      Backup:1     Non-active:0</span><br><span class="line">VRID  State     Interface             Type      Virtual IP</span><br><span class="line">                                                         </span><br><span class="line">10    Master    GE0/0/0               Normal    10.1.1.254</span><br><span class="line">20    Backup    GE0/0/0               Normal    10.1.1.253</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R2]display vrrp brief</span><br><span class="line">Total:2    Master:1      Backup:1     Non-active:0</span><br><span class="line">VRID  State     Interface             Type      Virtual IP</span><br><span class="line">                                                         </span><br><span class="line">10    Backup    GE0/0/0               Normal    10.1.1.254</span><br><span class="line">20    Master    GE0/0/0               Normal    10.1.1.253</span><br></pre></td></tr></table></figure><p>从【display vrrp brief】命令的回显信息可以明确看出，路由器R1是VRID 10的主用路由器，是VRID 20的备用路由器；路由器R2是VRID20的主用路由器，是VRID 10的备用路由器。接下来，给用户PC设置网关时，类似PC10和PC20的两部分用户主机分别以10.1.1.254和10.1.1.253作为网关地址，就实现了负载均衡。</p><h1 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h1><h2 id="链路聚合介绍"><a href="#链路聚合介绍" class="headerlink" title="链路聚合介绍"></a>链路聚合介绍</h2><p><strong>链路聚合概述</strong><br>链路聚合的作用<br>链路聚合技术可以将多个以太网链路捆绑为一条逻辑的以太网链路。因此，在采用通过多条以太网链路连接两台设备的链路聚合设计方案时，所有链路的带宽都可以充分用来转发两台设备之间的流量，如果使用三层链路连接两台设备，这种方案可以起到节省IP地址的作用。</p><p><a href="https://imgtu.com/i/TuMWJP"><img src="https://s4.ax1x.com/2021/12/20/TuMWJP.png" alt="TuMWJP.png"></a></p><p>无论在接入层、汇聚层还是核心层，链路聚合这种捆绑技术可以将多个以太网链路捆绑为一条逻辑的以太网链路。因此，在采用通过多条以太网链路连接两台设备的链路聚合设计方案时，所有链路的带宽都可以充分用来转发两台设备之间的流量，如果使用三层链路连接两台设备，这种方案可以起到节省IP地址的作用。</p><p><strong>链路聚合的基本概念</strong><br><strong>链路聚合组</strong><br>二层聚合组，是随着二层聚合端口的创建自动生成的，只包含二层以太网端口；<br>三层聚合组，是随着三层聚合端口的创建自动生成的，只包含三层以太网端口。<br><strong>链路聚合成员端口状态</strong><br>Selected状态<br>Unselected状态<br><strong>链路聚合的实现方式</strong><br>link-aggregation group聚合组<br>IP-Trunk组和Eth-Trunk组</p><p>Selected状态，接口处于此状态时可以参与转发用户业务流量。聚合端口的速率、双工状态由其Selected成员端口决定，速率是各成员端口的速率和，双工状态与成员端口的双工状态一致。<br>Unselected状态，接口处于此状态时不可以参与转发用户业务流量。<br> link-aggregation group聚合组，主要交换机上的以太网链路聚合。<br> IP-Trunk组，主要用于带POS接口的路由器、交换机、BAS的链路聚合。<br> Eth-Trunk组，主要用于交换机、路由器、BAS的以太网接口聚合。</p><h2 id="链路聚合模式"><a href="#链路聚合模式" class="headerlink" title="链路聚合模式"></a>链路聚合模式</h2><p><strong>链路聚合的两种模式</strong><br>手动模式<br>动态协商模式（LACP模式）<br>手动模式<br>采用Eth-Trunk手动模式时，设备执行链路捆绑，采用负载均衡的方式通过捆绑的链路发送数据；<br>某条线路出现故障后，Eth-Trunk手动模式会使用其他链路发送数据。  </p><p><a href="https://imgtu.com/i/TuMWJP"><img src="https://s4.ax1x.com/2021/12/20/TuMWJP.png" alt="TuMWJP.png"></a></p><p>在一台设备上创建出Eth-Trunk，然后根据自己的需求将多条连接同一台交换机的端口都添加到这个Eth-Trunk中，然后再在对端交换机上执行对应的操作。因此，对于采用手动模式配置的Eth-Trunk，设备之间不会就建立Eth-Trunk而交互信息，它们只会按照管理员的操作执行链路捆绑，然后采用负载均衡的方式通过捆绑的链路发送数据。</p><p><strong>LACP模式基本概念</strong><br>定义：LACP也称为链路聚合控制协议（Link Aggregation Control Protocol）；<br>作用：为建立链路聚合的设备之间提供协商和维护这条Eth-Trunk的标准；<br>步骤：首先在两边的设备上创建Eth-Trunk逻辑端口，然后将此端口配置为LACP模式，最后再把需要捆绑的物理端口添加到这个Eth-Trunk中。</p><p><strong>LACP模式的协商过程</strong><br>确定LACP主动端<br>系统优先级高的交换机将成为LACP主动端。如果系统优先级相同，则MAC地址较小的交换机会成为LACP主动端。<br>确定主用链路<br>端口优先级最高的N个端口会与对端建立Eth-Trunk主用链路，其余端口为备用链路。</p><p>两台设备会分别在管理员完成LACP配置之后，开始向对端发送LACP数据单元（简称LACPDU），在双方交换的LACPDU中，包含了一个称为系统优先级的参数。在完成 LACPDU交换之后，双方交换机会使用系统优先级来判断谁充当两者中的LACP主动端。如双方系统优先级相同，则MAC地址较小的交换机会成为LACP主动端。<br>确定LACP主动端后，继续依次比较LACP主动端设备各个端口的LACP优先级。端口优先级同样包含在各个端口发出的LACPDU当中，其中端口优先级最高（端口优先级的数值越低，代表优先级越高）的N个端口会与对端建立Eth-Trunk主用链路，其余端口则会与对端建立Eth-Trunk备用链路。就是LACP模式Eth-Trunk提供的M：N备份机制。</p><p><strong>LACP模式的协商示例</strong><br>假定交换机SW1的系统优先级高于交换机SW2，因此，交换机SW1成为LACP主动端；<br>假定将SW1主用链路的数量设置为了两条，而SW1的端口1、3的端口优先级最高，因此Eth-Trunk中的1、3两个端口所连接的链路为主用链路，端口2连接的链路则为备用链路；<br>如果SW1的端口1或端口3无法通信，那么端口2所连接的链路就会被激活并且开始承担流量负载。</p><p><a href="https://imgtu.com/i/TulFBQ"><img src="https://s4.ax1x.com/2021/12/20/TulFBQ.png" alt="TulFBQ.png"></a></p><p>如果在Eth-Trunk的LACP主动端上，有一个比主用链路端口优先级值更优的端口被添加进来或者故障端口得到了恢复，那么这个端口所连接的链路是否会作为主用链路被添加到Eth-Trunk中，取决于Eth-Trunk是否配置了抢占模式。</p><h2 id="链路聚合配置"><a href="#链路聚合配置" class="headerlink" title="链路聚合配置"></a>链路聚合配置</h2><p><strong>案例4-3 手动配置链路聚合</strong><br>案例要求：通过手动方式配置交换机SW1和SW2的GE0/0/1和GE0/0/2的端口进行链路聚合.</p><p><a href="https://imgtu.com/i/TulEAs"><img src="https://s4.ax1x.com/2021/12/20/TulEAs.png" alt="TulEAs.png"></a></p><p>配置过程 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface eth-trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]trunkport GigabitEthernet0/0/1 to 0/0/2</span><br><span class="line">[SW1-Eth-Trunk1]port link-type trunk</span><br><span class="line">[SW1-Eth-Trunk1]port trunk allow-pass vlan all</span><br><span class="line">//interface eth-trunk 创建并进入Eth-Trunk接口，编号为1</span><br><span class="line">trunkport GigabitEthernet0/0/1 to 0/0/2  向Eth-Trunk接口中添加成员接口</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface eth-trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]trunkport GigabitEthernet0/0/1 to 0/0/2</span><br><span class="line">[SW2-Eth-Trunk1]port link-type trunk</span><br><span class="line">[SW2-Eth-Trunk1]port trunk allow-pass vlan all </span><br></pre></td></tr></table></figure><p>命令注释如下。<br>①interface eth-trunk 1：系统视图命令，用来创建并进入Eth-Trunk接口，可以指定Eth-Trunk接口的编号，取值范围视设备类型不尽相同，一般为0-63，此处为1。<br>②trunkport GigabitEthernet 0/0/1 to 0/0/2：Eth-Trunk接口视图命令，作用是向Eth-Trunk接口中添加成员接口，管理员可以使用关键字“to”快速添加多个编号连续的接口。在一个 Eth-Trunk中必须指定相同类型的接口。此处是把接口GE0/0/1和GE0/0/2作为成员接口添加到Eth-Trunk 1中。<br>③port link-type trunk：接口视图命令，命令的功能是设置接口的链路类型为Trunk，这与普通物理接口的命令相同。<br>④port trunk allow-pass vlan all：接口视图命令，命令的功能是允许这个Trunk链路能够发送VLAN流量，这与普通物理接口的命令相同。此处用“all”表示放行所有VLAN的流量，可以使用【display eth-trunk 1】命令来检查这个Eth-Trunk以及成员接口的状态。</p><p><strong>案例4-4 LACP配置链路聚合</strong><br>案例要求：通过LACP方式配置交换机SW1和SW2的GE0/0/1和GE0/0/2的端口进行链路聚合。</p><p><a href="https://imgtu.com/i/TuUsUO"><img src="https://s4.ax1x.com/2021/12/20/TuUsUO.png" alt="TuUsUO.png"></a></p><p>配置过程  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Eth-Trunk 2</span><br><span class="line">[SW1-Eth-Trunk2]mode lacp-static</span><br><span class="line">[SW1-Eth-Trunk2]trunkport GigabitEthernet0/0/1 to 0/0/2</span><br><span class="line">//mode lacp-static启用LACP工作模式</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface Eth-Trunk 2</span><br><span class="line">[SW2-Eth-Trunk2]mode lacp-static</span><br><span class="line">[SW2-Eth-Trunk2]trunkport GigabitEthernet0/0/1 to 0/0/2</span><br></pre></td></tr></table></figure><p>mode lacp-static：Eth- Trunk接口视图命令，用来启用LACP工作模式。默认情况下Eth-Trunk的工作模式是手动模式，如果需要把当前为LACP工作模式的Eth-Trunk接口更改为手动配置，需要在Eth-Trunk接口视图中使用【mode manual】命令。两端设备的Eth-Trunk工作模式必须相同，并且需要注意在把Eth-Trunk接口更改为LACP工作模式时，Eth-Trunk中可以包含成员接口，但反之把Eth-Trunk接口更改为手动工作模式时，Eth-Trunk接口中不能有任何成员接口。手动模式是默认的Eth-Trunk模式。</p><p>案例验证：使用【display Eth-trunk 2】命令来检查这个Eth-Trunk以及成员接口的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[SW1]display eth-trunk 2 </span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">…………</span><br><span class="line">Operate status：up           Number of Up Port In Trunk：2</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/1   Selected 1GE      32768   2      7729    10111100  1     </span><br><span class="line">GigabitEthernet0/0/2   Selected 1GE      32768   3      7729    10111100  1   </span><br><span class="line">Partner:</span><br><span class="line">//GigabitEthernet0/0/1   Selected 1GE      32768   2      7729    10111100  1     </span><br><span class="line">GigabitEthernet0/0/2   Selected 1GE      32768   3      7729    10111100  1</span><br><span class="line">在LACP模式下,本地成员接口的状态</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/1   32768    4c1f-cc75-3550  32768   2      7729    10111100</span><br><span class="line">GigabitEthernet0/0/2   32768    4c1f-cc75-3550  32768   3      7729    10111100</span><br><span class="line">//GigabitEthernet0/0/1   32768    4c1f-cc75-3550  32768   2      7729    10111100</span><br><span class="line">GigabitEthernet0/0/2   32768    4c1f-cc75-3550  32768   3      7729    10111100</span><br><span class="line">对端成员接口的状态</span><br></pre></td></tr></table></figure><p>此处【display eth-trunk 2】命令的输出信息要比手动配置时的信息丰富很多，并且显示信息分为两个部分，前面为本地成员接口信息，后面加粗文本部分为对端成员接口信息。部分输出字段的含义如下。<br>①ActorPortName：本地成员接口或对端成员接口的名称。<br>②Status：本地成员接口的状态，在LACP模式下状态分为Selected（表示接口被选中并成为主用接口）和 Unselect（表示接口未被选中并成为备用接口），在手动配置模式下状态分为Up（表示接口状态正常）和Down（表示接口出现物理故障）。<br>③PortType：本地成员接口的类型。<br>④PortPri：本地成员接口或对端成员接口的LACP端口优先级。</p><p><strong>LACP系统优先级</strong><br>示例：配置SW1成为主动端，将它的LACP系统优先级设置为3000。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[SW1]lacp priority 3000</span><br><span class="line">[SW1]display eth-trunk 2</span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID:2                     WorkingMode： STATIC</span><br><span class="line">Preempt Delay: Disabled      Hash arithetic：According to SIP-XOR-DIP</span><br><span class="line">System Priority: 3000        System ID：4cbf-ecc1-344a</span><br><span class="line">Least Active-linknumber: 1   Max Active-linknumber：8</span><br><span class="line">Operate status：up           Number of Up Port In Trunk：2</span><br><span class="line">                                                                  </span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/1   Selected 1GE      32768   2      7729    10111100  1     </span><br><span class="line">GigabitEthernet0/0/2   Selected 1GE      32768   3      7729    10111100  1 </span><br><span class="line">//System Priority: 3000  交换机SW1的LACP系统优先级值为3000</span><br></pre></td></tr></table></figure><p>LACP会根据系统优先级确定主动端，并让主动端来选择活动接口。管理员可以手动更改这个参数，优先级的取值范围是0~65535，默认值为32768，数值越小优先级越高。在默认情况下，两端优先级相同，这时它们会使用系统MAC地址来确定谁是主动端，MAC地址小的为主动端。<br>使用系统视图命令【lacp priority 3000】，把交换机SW1的LACP系统优先级更改为3000，然后使用【display eth-trunk 2】命令确认了配置的变更结果，下线线部分显示出交换机SW1本地的LACP系统优先级值为3000。</p><p><strong>LACP接口优先级</strong></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]lacp priority 1000</span><br><span class="line">[SW1-GigabitEthernet0/0/1]interface GigabitEthernet0/0/2</span><br><span class="line">[SW1-GigabitEthernet0/0/2]lacp priority 2000</span><br><span class="line">[SW1-GigabitEthernet0/0/2]quit</span><br><span class="line">[SW1]display eth-Trunk 2</span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID:2                     WorkingMode： STATIC</span><br><span class="line">Preempt Delay: Disabled      Hash arithetic：According to SIP-XOR-DIP</span><br><span class="line">System Priority: 2000        System ID：4cbf-ecc1-344a</span><br><span class="line">Least Active-linknumber: 1   Max Active-linknumber：8</span><br><span class="line">Operate status：up           Number of Up Port In Trunk：2</span><br><span class="line">                                                                    </span><br><span class="line">ActorPortName         Status    PortType PortPri  PortNo PortKey PortState  Weight</span><br><span class="line">GigabitEthernet0/0/1  Selected  1GE      1000     2      7729    10111100   1</span><br><span class="line">GigabitEthernet0/0/2  Selected  1GE      2000     3      7729    10111100   1</span><br><span class="line">//PortNo下的2,3：SW1接口的LACP系统优先级值的变化</span><br></pre></td></tr></table></figure><p>LACP接口优先级的配置命令与LACP系统优先级类似，只是这时需要管理员在成员接口的接口视图中进行配置。<br>以上配置先在交换机SW1上对G0/0/1和G0/0/2的LACP优先级进行了设置，分别配置为1000和2000，然后使用【display eth-trunk 2】命令确认了配置的变更结果，加粗文本部分显示出交换机SW1本地成员接口的LACP优先级数值。</p><p><strong>Eth-Trunk中活动接口的数量</strong>   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface eth-trunk 2</span><br><span class="line">[SWI-Eth-Trunk2]max active-linknumber 1</span><br><span class="line">//max active-linknumber 1 配置活动接口的数量为1</span><br><span class="line">[SWI-Eth-Trunk2]quit</span><br><span class="line">[SWI]display eth-trunk 2</span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID:2                     WorkingMode： STATIC</span><br><span class="line">Preempt Delay: Disabled      Hash arithetic：According to SIP-XOR-DIP</span><br><span class="line">System Priority: 2000        System ID：4cbf-ecc1-344a</span><br><span class="line">Least Active-linknumber: 1   Max Active-link number：1</span><br><span class="line">//Max Active-link number：1 验证活动接口的数量</span><br><span class="line">Operate status：up           Number of Up Port In Trunk：1                                                                 </span><br><span class="line"></span><br><span class="line">ActorPortName         Status    PortType PortPri  PortNo PortKey PortState  Weight</span><br><span class="line">GigabitEthernet0/0/1  Selected  1GE      1000     2      7729    10111100   1</span><br><span class="line">GigabitEthernet0/0/2  Unselect  1GE      2000     3      7729    10111100   1</span><br><span class="line">//GigabitEthernet0/0/2  Unselect  1GE      2000     3      7729    10111100   1LACP接口优先级最低的接口成为备用接口</span><br></pre></td></tr></table></figure><p>在交换机SW1的Eth-Trunk接口视图下使用【max active-link number 1】命令更改了Eth-Trunk 2中的活动接口数量；然后使用【display eth-trunk 2】命令确认了配置的变更结果，由“Max Active-link number：1”可以看出Max Active-Iink number（最大活动链路数量）已经由默认的8更改为1。同时，由“Unselect”可以看出LACP接口优先级最低的接口成为备用接口。</p><p>使用【shutdown】命令在SW1上关闭G0/0/1接口模拟接口物理故障，查看抢占结果 </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]shutdown</span><br><span class="line">[SW1-GigabitEthernet0/0/1]quit</span><br><span class="line">[SW1]display eth-Trunk 2</span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID:2                     WorkingMode： STATIC</span><br><span class="line">Preempt Delay: Disabled      Hash arithetic：According to SIP-XOR-DIP</span><br><span class="line">System Priority: 2000        System ID：4cbf-ecc1-344a</span><br><span class="line">Least Active-linknumber: 1   Max Active-linknumber：1</span><br><span class="line">Operate status：up           Number of Up Port In Trunk：1</span><br><span class="line">                                                                    </span><br><span class="line">ActorPortName         Status    PortType PortPri  PortNo PortKey PortState  Weight</span><br><span class="line">GigabitEthernet0/0/1  Unselect  1GE      1000     2      7729    10111100   1</span><br><span class="line">GigabitEthernet0/0/2  Selected  1GE      2000     3      7729    10111100   1</span><br><span class="line">//GigabitEthernet0/0/1  Unselect  1GE      1000     2      7729    10111100   1</span><br><span class="line">GigabitEthernet0/0/2  Selected  1GE      2000     3      7729    10111100   1</span><br><span class="line">备用接口变为活动接口,状态为Selected </span><br></pre></td></tr></table></figure><p>从以上回显信息结果的加粗文本部分可以看出，G0/0/1接口不是活动接口，而G0/0/2由备用接口变为活动接口,状态为Selected，承担流量的转发任务。</p><p> <strong>LACP的抢占功能</strong>      </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet0/0/1</span><br><span class="line">[SW1]interface Eth-Trunk 2</span><br><span class="line">[SW1-Eth-Trunk2]lacp preempt enable</span><br><span class="line">//lacp preempt enable启用抢占功能</span><br><span class="line">[SW1-Eth-Trunk2]lacp preempt delay 10</span><br><span class="line">[SW1-GagibitEthernet0/0/1]undo shutdown</span><br><span class="line">[SW1]display eth-trunk 2</span><br><span class="line">Eth-Trunk 2’s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID:2                         WorkingMode： STATIC</span><br><span class="line">Preempt Delay Time: 10           Hash arithetic：According to SIP-XOR-DIP</span><br><span class="line">//Preempt Delay Time: 10抢占延迟时间为10S</span><br><span class="line">System Priority: 2000            System ID：4cbf-ecc1-344a</span><br><span class="line">Least Active-linknumber: 1       Max Active-link number：1</span><br><span class="line">Operate status：up               Number of Up Port In Trunk：1</span><br><span class="line">                                                                    </span><br><span class="line">ActorPortName         Status    PortType PortPri  PortNo PortKey PortState  Weight</span><br><span class="line">GigabitEthernet0/0/1  Selected  1GE      1000     2      7729    10111100   1</span><br><span class="line">GigabitEthernet0/0/2   Unselect  1GE      2000     3      7729    10111100   1</span><br><span class="line">//GigabitEthernet0/0/1  Selected  1GE      1000     2      7729    10111100   1</span><br><span class="line">成功抢占成为活动接口</span><br></pre></td></tr></table></figure><p>LACP的抢占功能的作用：接口恢复正常工作后，自动切换到优先级高的接口。<br>在交换机SW1的Eth-Trunk接口视图下使用【lacp preempt enable】命令，为Eth-Trunk 2启用了抢占功能，然后使用【lacp preempt delay 10】命令更改了抢占延迟时间，这个参数以秒为单位，取值范围是10-180，默认值为30。<br>启用GagibitEthernet0/0/1接口，并使用【display eth-trunk 2】命令验证当前的Eth-Trunk状态，第一个加粗文本显示出 Preempt Delay Time:10，表示启用了抢占功能，并且延迟时间为10秒。第二个加粗文本显示出GigabitEthernet0/0/1在启用后已经再次抢占为活动接口，抢占功能测试成功。</p><h2 id="堆叠技术"><a href="#堆叠技术" class="headerlink" title="堆叠技术"></a>堆叠技术</h2><h3 id="堆叠技术基本原理"><a href="#堆叠技术基本原理" class="headerlink" title="堆叠技术基本原理"></a>堆叠技术基本原理</h3><p><strong>堆叠技术概述</strong><br>堆叠是指将多台支持堆叠特性的交换机通过堆叠线缆连接在一起，从逻辑上变成一台交换设备，作为一个整体参与数据转发。<br>华为堆叠类型：<br>集群交换机系统（Cluster Switch System，CSS）<br>智能堆叠（Intelligent Stack，iStack）<br>堆叠作用<br>简化交换机的本地管理，将一组交换机作为一个对象进行管理；<br>提高交换机之间的级联带宽和大规模局域网终端间的连接带宽。.</p><p>在华为交换机中，iStack最多支持9台交换机做堆叠，而CSS集群只支持两台交换机。<br>通过专用堆叠模块和堆叠线缆，将多台交换机堆叠互联。</p><p><strong>堆叠的基本原理</strong><br>堆叠交换机的角色<br>主交换机（Master）<br>备交换机（Standby）<br>从交换机（Slave）<br>主交换机选举规则<br>①首先比较交换机的运行状态，最先处于启动状态的交换机将被选举为主交换机；<br>②如果有多台成员交换机都已处于启动状态，则进行堆叠优先级比较，优先级高的交换机被选举为主交换机；<br>③如果堆叠优先级相同，则MAC地址最小的交换机优先被选举为主交换机。</p><p>主交换机（Master）：负责管理整个堆叠系统，一个堆叠系统中有且只有一个主交换机。<br>备交换机（Standby）：充当主交换机的备份角色，负责在主交换机故障时接替其所有业务，一个堆叠系统中有且只有一个备交换机。<br>从交换机（Slave）：负责业务转发，一个堆叠系统中的从交换机越多，转发能力越强，除了主、备交换机外的所有成员交换机都是从交换机。<br>备交换机选举规则<br>①除主交换机外其他各成员交换机中最先处于启动状态的交换机成为备份交换机。<br>②如果有多台除主交换机外的其他交换机同时完成启动时，则堆叠优先级最高的交换机成为备交换机。<br>③如果交换机的堆叠优先级相同，则MAC地址最小的交换机优先被选举为备交换机。</p><h3 id="堆叠技术在交换上的实现"><a href="#堆叠技术在交换上的实现" class="headerlink" title="堆叠技术在交换上的实现"></a>堆叠技术在交换上的实现</h3><p><strong>堆叠连接拓扑结构</strong><br>环形连接： 环形连接拓扑结构是指堆叠成员交换机通过堆叠端交叉相连形成一个“环”形结构；<br>链形连接： 链形堆叠中处于链两端的交换机只使用一个堆叠端口与邻居交换机相连，最终形成一个“链条”形结构（类似于交换机“级连”）。</p><p><a href="https://imgtu.com/i/Tu4jyt"><img src="https://s4.ax1x.com/2021/12/21/Tu4jyt.png" alt="Tu4jyt.png"></a></p><p>就可靠性而言，环形堆叠比链形堆叠可靠性更高，因为当链形堆叠中的链路出现故障时会引起堆叠分裂，导致堆叠失败；而当环形堆叠中某条链路出现故障时会形成链形连接，不会影响整体堆叠的业务。所以，在实际部署业务时，环形堆叠最为常见。</p><p><strong>堆叠的管理和维护</strong><br>管理规则：成员交换机的资源由堆叠主交换机统一管理。<br>端口管理：加入堆叠后，交换机端口编号采用堆叠ID/子卡号/端口号。<br>堆叠成员加入<br>如果新加入的交换机本身未形成堆叠，则新加入的交换机会被选为从交换机，堆叠系统中原有主、备角色不变；<br>如果新加入的交换机本身已经形成了堆叠，此时相当于两个堆叠合并。<br>堆叠成员退出<br>主交换机退出：备交换机升级为主交换机，更新堆叠拓扑结构并指定一个新的备交换机；<br>备交换机退出：主交换机更新堆叠拓扑结构并指定一个新的备交换机。<br>堆叠主、备切换和堆叠系统MAC地址切换</p><p>当iStack堆叠系统成功建立后，如果主交换机因故障脱离堆叠系统，则备交换机会自动提升为主交换机，然后再由新的主交换机指定新的备交换机，并进行主、备交换机数据同步。堆叠主、备切换，以及堆叠系统MAC地址的切换</p><h3 id="堆叠技术常见应用"><a href="#堆叠技术常见应用" class="headerlink" title="堆叠技术常见应用"></a>堆叠技术常见应用</h3><p><strong>堆叠技术的应用场景</strong><br>堆叠技术主要应用于接入端口密度要求较高，且需要统一管理与维护多台交换机的场景。<br><strong>实施堆叠安装前的准备</strong><br>安装部件是专用堆叠线缆，如华为QSFP-40G-CU万兆高速堆叠线缆。<br>安装工具是防静电腕带或防静电手套。<br><strong>堆叠技术的适用设备</strong><br>智能堆叠iStack技术适用于华为S6700、S5700和S3700等中低端交换机。<br>集群交换系统CSS技术适用于华为S9700、S9300和S7700等高端交换机。</p><p>堆叠方式比传统的级联方式优势明显，因为专门的堆叠模块能够提供10Gbit/s甚至更高的互联带宽，带宽的优势是企业组网采用堆叠技术的一个重要原因。<br>堆叠技术主要应用在教育和医疗等行业以及一些中小企业。</p><p><strong>堆叠技术常见应用场景拓扑</strong></p><p><a href="https://imgtu.com/i/Tu5PYQ"><img src="https://s4.ax1x.com/2021/12/21/Tu5PYQ.png" alt="Tu5PYQ.png"></a></p><p>华为常见堆叠技术的应用场景拓扑结构。在接入层，每个楼层的用户通过二层交换机接入到汇聚层网络，现将相距较远楼层的两台二层交换机连接起来组成堆叠，这相当于减少了接入设备的数量，使网络结构变得更加简单。每栋楼有多条链路到达汇聚层网络，大大提高了网络的健壮性和可靠性。同时，对多台二层交换机的配置简化成对堆叠系统的配置，大大降低了管理和维护的成本。</p>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.华为1+X-路由技术</title>
      <link href="2021/12/14/%E5%8D%8E%E4%B8%BA1+X/3.%E5%8D%8E%E4%B8%BA1+X-%E8%B7%AF%E7%94%B1%E6%8A%80%E6%9C%AF/"/>
      <url>2021/12/14/%E5%8D%8E%E4%B8%BA1+X/3.%E5%8D%8E%E4%B8%BA1+X-%E8%B7%AF%E7%94%B1%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-路由技术</p><h1 id="路由基础"><a href="#路由基础" class="headerlink" title="路由基础"></a>路由基础</h1><h2 id="路由概述"><a href="#路由概述" class="headerlink" title="路由概述"></a>路由概述</h2><p><strong>路由、路由器及路由表</strong></p><p><a href="https://imgtu.com/i/ov2fat"><img src="https://s4.ax1x.com/2021/12/14/ov2fat.png"></a></p><p>跨越一个从源主机到目标主机的网络来转发数据包－路由</p><p>将数据包转发到正确的目的地，并在转发过程中能选择最佳的路径的设备－路由器</p><table><thead><tr><th><strong>路由表</strong></th><th></th></tr></thead><tbody><tr><td>网段</td><td>接口</td></tr><tr><td>10.1.1.0</td><td>G0/0/1</td></tr><tr><td>20.1.1.0</td><td>G0/0/2</td></tr><tr><td>30.1.1.0</td><td>G0/0/3</td></tr></tbody></table><hr><p><strong>tip：</strong></p><p>①路由：在网络通信中，路由（Route）是一个网络层的术语，作为名词它是指从某一网络设备出发去往某个目的地的路径，作为动词它是指跨越一个从源主机到目标主机的网络来转发数据包。<br>②路由器：路由器（Router）是执行路由动作的一种网络设备，它能够将数据包转发到正确的目的地，并在转发过程中能选择最佳的路径，路由器工作在网络层。<br>③路由表：路由表（Routing Table）是若干条路由信息的一个集合体。在路由表中，一条路由信息也被称为一个路由项或一个路由条目，路由设备根据路由表的路由条目做路径选择。</p><hr><p><strong>路由器的工作原理</strong><br>某公司网络拓扑<br>路由器R1是该网络中正在运行的一台路由器，通过对网络设备进行配置之后，可以查看路由器R1的路由表。</p><p><a href="https://imgtu.com/i/ovWF1S"><img src="https://s4.ax1x.com/2021/12/14/ovWF1S.png"></a></p><p>查看到路由器R1的路由表<br>在路由器R1上执行【display ip routing-table】命令便可查看到路由器R1的路由表，在这个路由表中，每一行就是一条路由信息（一个路由项或一个路由条目）。通常情况下，一条路由信息由3个要素组成：目标网络/掩码（Destination/Mask）、出接口（Interface）和下一跳IP地址（NextHop）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Destination/Mask  Proto   Pre  Cost    Flags  NextHop    Interface</span><br><span class="line">2.2.2.0/24        Direct  0    0       D      2.2.2.1    GigabitEthernet1/0/1</span><br><span class="line">2.2.2.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">3.3.3.0/24        Static  60   0       D      1.1.1.2    GigabitEthernet1/0/2</span><br><span class="line">1.1.1.0/24        Direct  0    0       D      127.0.0.1  GigabitEthernet1/0/2</span><br><span class="line">1.1.1.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">......</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>补充说明<br>①如果目的地/掩码中的掩码长度为32，则目的地将是一个主机接口地址，否则目的地就是一个网络地址。通常，我们总是说一个路由项的目的地是一个网络地址（即目标网络地址），而把主机接口地址视为目的地的一种特殊情况。<br>②如果一个路由项的下一跳IP地址与出接口的IP地址相同，则说明目标网络和本地接口是一个直连网络（双方在同一个网络）。<br>③下一跳IP地址所对应的那个主机接口与出接口一定是位于同一个二层网络（二层广播域）。</p><hr><p><strong>路由信息的3个要素</strong><br>我们现在以Destination/Mask为3.3.3.0/24这个路由项为例，具体说明路由信息的3个要素。<br>3.3.3.0是一个网络地址，掩码长度是24。由于路由器R1的路由表中存在3.3.3.0/24这个路由项，就说明路由器R1知道自己所在的网络上存在一个网络地址为3.3.3.0的网络；<br>3.3.3.0这个路由项的出接口是GigabitEthernet1/0/2，其含义是，如果路由器R1需要将一个IP报文送往3.3.3.0/24这个目标网络，那么路由器R1应该把这个IP报文从路由器R1的GigabitEthernet1/0/2接口发送出去；<br>3.3.3.0这个路由项下一跳IP地址（NextHop）是1.1.1.2，其含义是，如果路由器R1需要将一个IP报文送往3.3.3.0/24这个目标网络，则路由器R1应该把这个IP报文从路由器R1的GigabitEthernet1/0/2接口发送出去，并且这个IP报文离开路由器R1的GigabitEthernet1/0/2接口后应该到达的下一个路由器的接口的IP地址是1.1.1.2。</p><hr><p><strong>tip:</strong></p><p>除了这3个要素外，一个路由项通常还包含其他一些属性，例如，产生这个路由项的Protocol（路由表中Proto列），该路由项的Preference（路由表中Pre列），该条路由的代价值（路由表中Cost列）等。<br>那么，路由器是如何基于IP路由表进行转发工作的呢？以图3-2所示的路由器R1的IP路由表为例，如果一个IP报文的目的IP地址为3.3.3.0，那么这个IP报文就匹配上了3.3.3.0/24这个路由项，且路由表里仅有一个3.3.3.0的表项，因此，路由器根据此表项进行IP报文的转发。当一个IP报文同时匹配上了多个路由项时，路由器将根据“最长掩码匹配”原则来确定出一条最优路由，并根据最优路由来进行IP报文的转发，如果没有匹配项（包括默认路由），路由器将丢弃该数据包。</p><hr><p><strong>路由协议的分类：</strong><br>路由设备之间要相互通信，需通过路由协议来相互学习，以构建一个到达其他设备的路由信息表，然后才能根据路由表，实现IP数据包的转发。路由协议的常见分类如下。<br>根据不同路由算法分类，可分为以下两种：距离矢量路由协议和链路状态路由协议；<br>根据不同的工作范围，可分为以下两种：内部网关协议（IGP）和外部网关协议（EGP）；<br>根据手动配置或自动学习两种不同的方式建立路由表，可分为以下两种：静态路由协议和动态路由协议。</p><hr><p><strong>tip:</strong></p><p>①根据不同路由算法分类，可分为以下两种。<br>距离矢量路由协议：通过判断数据包从源主机到目的主机所经过的路由器的个数来决定选择哪条路由，如RIP等。<br>链路状态路由协议：不是根据路由器的数目选择路径，而是综合考虑从源主机到目的主机间的各种情况（如带宽、延迟、可靠性、承载能力和最大传输单元等），最终选择一条最优路径，如OSPF、IS-IS等。<br>②根据不同的工作范围，可以分为以下两种。<br>内部网关协议（IGP）：在一个自治系统内进行路由信息交换的路由协议，如RIP、OSPF、ISIS等<br>外部网关协议（EGP）：在不同自治系统间进行路由信息交换的路由协议，如BGP。<br>③根据手动配置或自动学习两种不同的方式建立路由表，可以分为以下两种。<br>静态路由协议：由网络管理人员手动配置路由器的路由信息。<br>动态路由协议：路由器自动学习路由信息，动态建立路由表。</p><hr><h2 id="路由表的生成与路由条目"><a href="#路由表的生成与路由条目" class="headerlink" title="路由表的生成与路由条目"></a>路由表的生成与路由条目</h2><p><strong>路由表的3种来源</strong><br>直连路由：设备自动发现、手动配置或通过动态路由协议生成。我们把设备自动发现的路由信息称为直连路由（Direct Route）；<br>静态路由：把手动配置的路由信息称为静态路由（Static Route）；<br>动态路由：把网络设备通过运行动态路由协议而得到路由信息称为动态路由（Dynamic Route）。</p><hr><p><strong>tip:</strong></p><p>事实上，网络设备还可以通过运行动态路由协议来获取路由信息。网络设备通过运行路由协议而获取到的路由被称为动态路由。由于设备运行了路由协议，所以设备的路由表中的动态路由信息能够实时地反映出网络结构的变化。<br>路由器是可以同时运行多种路由协议，如RIP路由协议和OSPF路由协议。此时，该路由器除了会创建并维护一个IP路由表外，还会分别创建并维护一个RIP路由表和一个OSPF路由表。RIP路由表用来专门存放RIP发现的所有路由，OSPF路由表用来专门存放OSPF协议发现的所有路由。通过一些优选法则的筛选后，某些IP路由表中的路由项以及某些OSPF路由表中的路由项才能被加入进IP路由表，而路由器最终是根据IP路由表来进行IP报文的转发工作的。</p><hr><p><strong>路由优先级</strong></p><p>设备上的路由优先级一般都有默认值，不同厂家设备对于优先级的默认值可能不同。华为AR路由器上部分路由类型与优先级的默认值的对应关系，如下表所示。</p><table><thead><tr><th><strong>路由类型</strong></th><th><strong>优先级的默认值</strong></th></tr></thead><tbody><tr><td>直连路由</td><td>0</td></tr><tr><td>OSPF</td><td>10</td></tr><tr><td>静态路由</td><td>60</td></tr><tr><td>RIP</td><td>100</td></tr><tr><td>BGP</td><td>255</td></tr></tbody></table><hr><p><strong>tip:</strong></p><p>路由器可以自动发现直连路由，手动配置静态路由或动态路由协议等方式学习到路由信息，当路由器通过不同的方式学习到同一个目标网络的多条路由条目信息时，它会根据路由的优先级进行路由选择，优先选择值最小的路由。<br>事实上，网络设备还可以通过运行动态路由协议来获取路由信息。网络设备通过运行路由协议而获取到的路由被称为动态路由。由于设备运行了路由协议，所以设备的路由表中的动态路由信息能够实时地反映出网络结构的变化。<br>路由器是可以同时运行多种路由协议，如RIP路由协议和OSPF路由协议。此时，该路由器除了会创建并维护一个IP路由表外，还会分别创建并维护一个RIP路由表和一个OSPF路由表。RIP路由表用来专门存放RIP发现的所有路由，OSPF路由表用来专门存放OSPF协议发现的所有路由。通过一些优选法则的筛选后，某些IP路由表中的路由项以及某些OSPF路由表中的路由项才能被加入进IP路由表，而路由器最终是根据IP路由表来进行IP报文的转发工作的。</p><hr><p>**路由的开销 **<br>什么是路由的开销：一条路由的开销是指到达这条路由的目的地/掩码需要付出的代价值。<br>路由开销的选择：同一种路由协议发现有多条路由可以到达同一目的地/掩码时，将优选开销最小的路由，即只把开销最小的路由加入进本协议的路由表中。<br>路由开销举例：不同的路由协议对于开销的具体定义是不同的，例如，RIP只能以“跳数（Hop Count）”作为开销。 </p><p><a href="https://imgtu.com/i/ovh5wj"><img src="https://s4.ax1x.com/2021/12/14/ovh5wj.png"></a></p><hr><p><strong>tip:</strong></p><p>同一种路由协议发现有多条路由可以到达同一目的地/掩码时，如果这些路由的开销（代价）是相等的，那么开销相等的路由称为等价路由。需要特别强调的是，不同的路由协议对于开销的具体定义是不同的，开销值大小的比较只在同一种路由协议内才有意义，不同路由协议之间的路由开销值没有可比性，也不存在换算关系。</p><hr><h1 id="静态路由与默认路由"><a href="#静态路由与默认路由" class="headerlink" title="静态路由与默认路由"></a>静态路由与默认路由</h1><h2 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h2><p><strong>静态路由概述</strong><br>静态路由（Static Route）是指通过手动方式为路由器配置路由信息，可以简单地让路由器获知达到目标网络的路由。<br><strong>静态路由的优缺点</strong><br>优点：静态路由配置简单、路由器资源负载小、可控性强等优点；<br>缺点：不能动态反映网络拓扑，当网络拓扑发生变化时，网络管理员就必须手动配置改变路由表，因此静态路由不适合于在大型网络中使用。</p><p>案例3-1 静态路由的配置<br>案例背景与要求：在路由器R1和路由器R2上配置静态路由，实现网络互联互通。</p><p><a href="https://imgtu.com/i/ovImWt"><img src="https://s4.ax1x.com/2021/12/14/ovImWt.png"></a></p><p><strong>案例配置思路</strong><br>在路由器R1上配置一条静态路由，目的地/掩码为3.3.3.0/24，出接口为GE1/0/2，下一跳IP地址为1.1.1.2；<br>在路由器R2上配置一条静态路由，目的地/掩码为2.2.2.0/24，出接口为GE1/0/2，下一跳IP地址为1.1.1.1。<br><strong>案例配置过程</strong><br>配置路由器R1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ip route-static 3.3.3.0 24 1.1.1.2</span><br></pre></td></tr></table></figure><p>3.3.3.0目的地    24掩码   1.1.1.2下一跳地址</p><p>配置路由器R2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ip route-static 2.2.2.0 24 1.1.1.1</span><br></pre></td></tr></table></figure><p>案例验证<br>在路由器R1系统视图状态下输入【display ip routing-table】命令查看其路由表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Destination/Mask  Proto   Pre  Cost    Flags  NextHop    Interface</span><br><span class="line">2.2.2.0/24        Direct  0    0       D      2.2.2.1    GigabitEthernet1/0/1</span><br><span class="line">2.2.2.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">3.3.3.0/24        Static  60   0       D      1.1.1.2    GigabitEthernet1/0/2</span><br><span class="line">1.1.1.0/24        Direct  0    0       D      127.0.0.1  GigabitEthernet1/0/2</span><br><span class="line">1.1.1.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>查看路由表命令：display ip routing-table </p><h2 id="默认路由"><a href="#默认路由" class="headerlink" title="默认路由"></a>默认路由</h2><p><strong>默认路由概述</strong><br>我们把目的地/掩码为0.0.0.0/0的路由称为默认路由（Default Route）。<br>如果网络设备的路由表中存在默认路由，那么当一个待发送或待转发的IP报文不能匹配IP路由表中的任何非默认路由时，就会根据默认路由来进行发送或转发；<br>如果网络设备的IP路由表中不存在默认路由，那么当一个待发送或待转发的IP报文不能匹配IP路由表中的任何路由时，该IP报文就会被直接丢弃。</p><p><strong>案例3-2 默认路由的配置</strong><br>案例背景与要求：网络管拓扑所示，路由器R3是因特网服务提供商(Internet Service Provider, ISP）路由器，并且假设路由器R3上已经有了通往Internet的路由。要求管理员配置路由器，实现所有的PC都能够互通，并且都能够访问Internet。 </p><p><a href="https://imgtu.com/i/ovoVnU"><img src="https://s4.ax1x.com/2021/12/14/ovoVnU.png"></a></p><p><strong>案例配置思路</strong><br>在路由器R1上配置一条静态路由，目的地/掩码为3.3.3.0/24，下一跳地址为路由器R2的GE1/0/2接口的IP地址1.1.1.2，出接口为路由器R1的GE1/0/2接口。另外，在路由器R1上配置一条默认路由，该默认路由的下一跳地址为路由器R3的GE1/0/0接口的IP地址4.4.4.2，出接口为路由器R1的GE1/0/0接口。<br>在路由器R2上配置一条默认路由，该默认路由的下一跳地址为路由器R1的GE1/0/2口的E地址1.1.1.1，出接口为路由器R2的GE1/0/2接口。<br>在路由器R3上配置一条默认路由，下一跳IP地址均为路由器R1的GE1/0/0接口的IP地址4.4.4.1，出接口均为路由器R3的GE1/0/0接口。</p><p><strong>案例配置步骤</strong><br>配置路由器R1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ip route-static 3.3.3.0 24 1.1.1.2(配置静态路由)</span><br><span class="line">[R1]ip route-static 0.0.0.0  0 4.4.4.2(配置默认路由)</span><br></pre></td></tr></table></figure><p>配置路由器R1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ip route-static 0.0.0.0 0 1.1.1.1(配置默认路由)</span><br></pre></td></tr></table></figure><p>配置路由器R1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R3</span><br><span class="line">[R3]ip route-static 0.0.0.0 0 4.4.4.1(配置默认路由)</span><br></pre></td></tr></table></figure><p>案例验证<br>完成以上配置后，在路由器R1系统视图状态下输入【display ip routing-table】命令查看其路由表。从输出结果显示，路由器R1的路由表中己经有了一条默认路由。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[R1]display ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Destination/Mask  Proto   Pre  Cost    Flags  NextHop    Interface</span><br><span class="line">0.0.0.0/24        Static  60   0       RD     4.4.4.2    GigabitEthernet1/0/0</span><br><span class="line">2.2.2.0/24        Direct  0    0       D      2.2.2.1    GigabitEthernet1/0/1</span><br><span class="line">2.2.2.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">3.3.3.0/24        Static  60   0       D      1.1.1.2    GigabitEthernet1/0/2</span><br><span class="line">1.1.1.0/24        Direct  0    0       D      127.0.0.1  GigabitEthernet1/0/2</span><br><span class="line">1.1.1.1/32        Direct  0    0       D      127.0.0.1  InLoopBack0</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="静态路由汇总"><a href="#静态路由汇总" class="headerlink" title="静态路由汇总"></a>静态路由汇总</h2><p>静态路由汇总概念：将多个路由条目进行汇总的方式称为路由汇总</p><p><a href="https://imgtu.com/i/ovTIJA"><img src="https://s4.ax1x.com/2021/12/14/ovTIJA.png" alt="汇总前的静态路由"></a></p><p>汇总前的静态路由</p><p><a href="https://imgtu.com/i/ovTjoQ"><img src="https://s4.ax1x.com/2021/12/14/ovTjoQ.png" alt="汇总后的静态路由"></a></p><p>汇总后的静态路由</p><hr><p><strong>tip:</strong></p><p>在如左图所示的拓扑中，如果路由器R1要访问路由器R2右侧的172.16.1.0/24等目标网络，则需要在路由器R1上配置路由。假如配置静态路由，需要在路由器R1上配置4条静态路由对应图中的4个网段，如果路由器R2右侧有200个甚至更多的网段，那么就需要在路由器R1上手动配置200条甚至更多的静态路由。庞大的路由条目会让路由器R1的路由表变的非常臃肿，大大降低路由器的工作效率。<br>这时我们就需要使用静态路由汇总的方法来解决该问题，路由汇总能减小路由条目的数量，降低路由设备资源的消耗，提高网络基础设施的转发效率，突出IP地址作为逻辑地址的可汇总优势。<br>从左图中我们可以看到4条【ip route-static】命令开头的路由明细，而在右图中，通过静态路由汇总后，仅仅只有1条静态路由【ip route-static 172.16.0.0 16 11.1.1.2】命令，就可以实现相同的访问效果。<br>路由汇总是一种重要的网络设计思想。通常，在大中型网络中，要使用路由汇总技术进行优化设计。路由汇总除了静态路由汇总外，还有动态路由汇总，由于本书知识范围所限，动态路由汇总配置不作介绍。</p><hr><p>静态路由汇总计算与配置<br>路由汇总的前提是IP子网及网络模型的科学合理设计，路由汇总的计算是通过对子网掩码的操作进行的，以下图为例介绍路由汇总的计算方法。</p><p><a href="https://imgtu.com/i/ov71eO"><img src="https://s4.ax1x.com/2021/12/14/ov71eO.png"></a></p><p>通过前面的学习，我们知道，可变长子网掩码（VLSM）是一种在有类网络中通过子网掩码划分多个IP子网的技术，是无类编址方式的有效解决方案。</p><p>路由器R1左侧的IP网段明细为172.16.1.0/24~172.16.31.0/24，将这些IP网段写成二进制的形式如下图所示。</p><p><a href="https://imgtu.com/i/ov7wOf"><img src="https://s4.ax1x.com/2021/12/14/ov7wOf.png"></a></p><p>从网络拓扑图可以看出，这个IP子网是连续的，对连续的IP子网进行汇总的计算方法如下。<br>①将所有的十进制的IP网段写成二进制形式，实际操作中，只需要将所有IP网段中的不相同的十进制数写成二进制，如本例中十进制的IP网段的第三位；<br>②画一根分隔线将所有IP网段进行分隔，从上图中可见，分隔线左侧的每一列的二进制数都完全相同，而右侧列的二进制数则不完全一样；<br>③分隔线的位置确定后，分隔线左侧的二进制数不变，而右侧的第一位开始到最后一位全部写0。因汇总后的掩码长度为分隔线左侧的二进制的位数为16+3=19位，因此，通过计算得到汇总后的地址段为172.16.0.0/19；<br>④同理，可算出路由器R3右侧的所有IP网段经过汇总后的地址段为10.1.32.0/19。由于静态路由汇总的配置与静态路由的配置相同。因此，以路由器R2为例进行配置，配置命令如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ip route-static 172.16.0.0 19 2.1.1.1</span><br><span class="line">[R2]ip route-static 10.1.32.0 19 1.1.1.1</span><br></pre></td></tr></table></figure><h2 id="静态路由的典型应用"><a href="#静态路由的典型应用" class="headerlink" title="静态路由的典型应用"></a>静态路由的典型应用</h2><p><strong>浮动静态路由的概念</strong><br>浮动静态路由（Floating Static Route）是一种特殊的静态路由，通过配置去往相同的目标网络，但优先级不同的静态路由，以保证在网络中优先级较高的路由工作。而一旦主路由失效，备份路由会接替主路由，增强网络的可靠性。<br><strong>载均衡的概念</strong><br>当有多条可选路径前往同一目标网络，可以通过配置相同优先级和开销的静态路由实现负载均衡，使得数据的传输均衡地分配到多条路径上，从而实现数据分流、减轻单条路径负载过重的效果。而当其中某一条路径失效时，其他路径仍然能够正常传输数据，也起到了冗余作用。仅负载均衡条件下，路由器才会同时显示两条去往同一目标网络的路由条目。</p><p><strong>案例3-3 浮动静态路由及负载均衡的配置</strong><br>案例背景与要求：路由器R1模拟某公司总部，路由器R2与路由器R3模拟两个分部，主机PC1与PC2所在的网段分别模拟两个分部中的办公网络。现需要总部与各个分部、分部与分部之间都能够通信，且分部之间在通信时，直连链路为主用链路，通过总部的链路为备用链路。本实验要求使用浮动静态路由实现路由备份，并可以通过调整优先级的值实现路由器R2到12.1.1.0/24网络的负载均衡。浮动静态路由及负载均衡的拓扑，如下图所示。 </p><p><a href="https://imgtu.com/i/ov7qpR"><img src="https://s4.ax1x.com/2021/12/14/ov7qpR.png"></a></p><p>案例配置思路<br>①在路由器R1上配置两条静态路由，第一条：目的地/掩码为12.1.1.0/24，出接口为GE2/0/0，下一跳IP地址为2.1.1.2。第二条：目的地/掩码为11.1.1.0/24，出接口为GE1/0/0，下一跳IP地址为1.1.1.2。<br>②在路由器R2上配置一条静态路由，目的地/掩码为12.1.1.0/24，出接口为GE2/0/0，下一跳IP地址为3.1.1.2。<br>③在路由器R2上配置一条优先级为100的静态路由，目的地/掩码为12.1.1.0/24，出接口为GE1/0/0，下一跳IP地址为1.1.1.1。<br>④在路由器R3上配置一条静态路由，目的地/掩码为11.1.1.0/24，出接口为GE1/0/0，下一跳IP地址为3.1.1.1。<br>⑤在路由器R3上配置一条优先级为100的静态路由，目的地/掩码为11.1.1.0/24，出接口为GE2/0/0，下一跳IP地址为2.1.1.1。<br>⑥根据路由器R2的路由信息，调整到12.1.1.0/24网段的静态路由优先级，实现负载均衡。 </p><p>案例配置步骤<br>路由器R1的配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R1</span><br><span class="line">[R1]ip route-static 12.1.1.0 24 2.1.1.2</span><br><span class="line">[R1]ip route-static 11.1.1.0 24 1.1.1.2</span><br></pre></td></tr></table></figure><p>路由器R2的配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R2</span><br><span class="line">[R2]ip route-static 12.1.1.0 24 3.1.1.2</span><br><span class="line">[R2]ip route-static 12.1.1.0 24 1.1.1.1 preference 100</span><br></pre></td></tr></table></figure><p>路由器R3的配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname R3</span><br><span class="line">[R3]ip route-static 11.1.1.0 24 3.1.1.1</span><br><span class="line">[R3]ip route-static 11.1.1.0 24 2.1.1.1 preference 100</span><br></pre></td></tr></table></figure><p>案例验证<br>①完成以上配置后，在路由器R2系统视图状态下输入【display ip routing-table】命令查看其路由表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;display ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 14       Routes : 14       </span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">        1.0.0.0/8   Direct  0    0           D   1.1.1.2         GigabitEthernet1/0/0</span><br><span class="line">        1.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">  1.255.255.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">        3.0.0.0/8   Direct  0    0           D   3.1.1.1         GigabitEthernet2/0/0</span><br><span class="line">        3.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet2/0/0</span><br><span class="line">  3.255.255.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet2/0/0</span><br><span class="line">       11.1.1.0/24  Direct  0    0           D   11.1.1.1        GigabitEthernet3/0/0</span><br><span class="line">       11.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">     11.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">       12.1.1.0/24  Static  60   0          RD   3.1.1.2         GigabitEthernet2/0/0</span><br><span class="line">      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br></pre></td></tr></table></figure><p>结果：路由器R2的路由表中己经有了目标网段为12.1.1.0/24，优先级为60的静态路由信息，但没有优先级为100的路由信息。</p><p>②通过对路由器R2执行【display ip routing-table protocol static】命令查看到优先级为100的路由条目。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R2]display ip routing-table protocol static</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Public routing table : Static</span><br><span class="line">         Destinations : 1        Routes : 2        Configured Routes : 2</span><br><span class="line">Static routing table status : &lt;Active&gt;</span><br><span class="line">         Destinations : 1        Routes : 1</span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">       12.1.1.0/24  Static  60   0          RD   3.1.1.2         GigabitEthernet2/0/0</span><br><span class="line">Static routing table status : &lt;Inactive&gt;</span><br><span class="line">         Destinations : 1        Routes : 1</span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">       12.1.1.0/24  Static  100  0          R    1.1.1.1         GigabitEthernet1/0/0</span><br></pre></td></tr></table></figure><p>③用【shutdown】命令断开路由器R2的G2/0/0接口，模拟主链路故障，验证浮动静态路由的效果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[R2]interface gigabitEthernet2/0/0</span><br><span class="line">[R2-gigabitEthernet2/0/0]shutdown</span><br><span class="line">[R2]display ip routing-table </span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 11       Routes : 11       </span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">        1.0.0.0/8   Direct  0    0           D   1.1.1.2         GigabitEthernet1/0/0</span><br><span class="line">        1.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">  1.255.255.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">       11.1.1.0/24  Direct  0    0           D   11.1.1.1        GigabitEthernet3/0/0</span><br><span class="line">       11.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">     11.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">       12.1.1.0/24  Static  100  0          RD   1.1.1.1         GigabitEthernet1/0/0</span><br><span class="line">      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br></pre></td></tr></table></figure><p>用【shutdown】命令断开路由器R2的G2/0/0接口，模拟主链路故障，回显信息可以看到路由器R2的路由表中出现了优先级为100的路由条目，从而验证了浮动静态路由的效果。</p><p>④为了检验负载均衡的效果，用【undo shutdown】命令重新开启路由器R2的G2/0/0接口，同时，在路由器R2上用【ip route-static 12.1.1.0 24 1.1.1.1】命令将这条路由的优先级（preference）从100改为60，通过查看路由器R2的路由表的回显信息可以看到有两条路径不同（下一跳地址不同）去往12.1.1.0/24目标网段的路由条目，从而验证了负载均衡的效果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[R2]display ip routing-table </span><br><span class="line"> Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 14       Routes : 15       </span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line">        1.0.0.0/8   Direct  0    0           D   1.1.1.2         GigabitEthernet1/0/0</span><br><span class="line">        1.1.1.2/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">  1.255.255.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet1/0/0</span><br><span class="line">        3.0.0.0/8   Direct  0    0           D   3.1.1.1         GigabitEthernet2/0/0</span><br><span class="line">        3.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet2/0/0</span><br><span class="line">  3.255.255.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet2/0/0</span><br><span class="line">       11.1.1.0/24  Direct  0    0           D   11.1.1.1        GigabitEthernet3/0/0</span><br><span class="line">       11.1.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">     11.1.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet3/0/0</span><br><span class="line">       12.1.1.0/24  Static  60   0          RD   3.1.1.2         GigabitEthernet2/0/0</span><br><span class="line">                    Static  60   0          RD   1.1.1.1         GigabitEthernet1/0/0</span><br><span class="line">      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br></pre></td></tr></table></figure><h1 id="OSPF路由协议"><a href="#OSPF路由协议" class="headerlink" title="OSPF路由协议"></a>OSPF路由协议</h1><h2 id="OSPF概述"><a href="#OSPF概述" class="headerlink" title="OSPF概述"></a>OSPF概述</h2><p><strong>OSPF的概念</strong><br>开放最短路径优先（Open Shortest Path First，OSPF）是由IETF组织开发的开放性标准协议，它是一个链路状态内部网关路由协议，运行OSPF协议的路由器会将自己拥有的链路状态信息，通过启用了OSPF协议的接口发送给其他0SPF设备，同一个OSPF区域中的每台设备都会参与链路状态信息的创建、发送、接收与转发，直到这个区域中的所有OSPF设备获得了相同的链路状态信息为止。<br><strong>OSPF区域</strong><br>OSPF区域概念<br>一个OSPF网络可以被划分成多个区域（Area）。如果一个OSPF网络只包含一个区域，则这样的OSPF网络称为单区域OSPF网络；如果一个OSPF网络包含了多个区域，则称为多区域OSPF网络。</p><p><strong>OSPF区域结构</strong><br>如图所示。OSPF网络共有4个区域，其中Area 0为骨干区域，Area 1、Area 2和Area 3为非骨干区域。需要注意的是，路由器R1、R2和R3同时属于骨干区域和非骨干区域，而其他路由器只属于一个区域。</p><p><a href="https://imgtu.com/i/ovbEG9"><img src="https://s4.ax1x.com/2021/12/14/ovbEG9.png"></a></p><p>在OSPF网络中，每一个区域都有一个编号，称为区域ID（Area ID）。区域ID是一个32位的二进制数，一般用十进制数来表示。区域ID为0的区域称为骨干区域（Backbone Area），其他区域都称为非骨干区域。单区域OSPF网络只包含一个区域，这个区域必须是骨干区域。多区域OSPF网络中，除骨干区域外，还有若干个非骨干区域，一般来说，每一个非骨干区域都需要与骨干区域直连，当非骨干区域没有与骨干区域直连时，要采用虚链路（Virtual Link）技术从逻辑上实现非骨干区域与骨干区域直连。也就是说，非骨干区域之间的通信必须要通过骨干区域中转才能实现。</p><p><strong>链路状态及LSA</strong><br>OSPF是一种基于链路状态的路由协议，链路状态也指路由器的接口状态，其核心思想是，每台路由器都将自己的各个接口的接口状态（链路状态）共享给其他路由器。在此基础上，每台路由器就可以依据自身的接口状态和其他路由器的接口状态计算出去往各个目的地的路由。路由器的链路状态包含了该接口的IP地址及子网掩码等信息；<br>链路状态通告（Link-State Advertisement，LSA）是链路状态信息的主要载体，链路状态信息主要包含在LSA中并通过LSA的通告（泛洪）来实现共享的。</p><p>需要说明的是，不同类型的LSA所包含的内容、功能、通告的范围也是不同的，LSA的类型主要包括Type-1 LSA(Router LSA)、Type-2 LSA(Network LSA)、Type-3 LSA(Network Summary LSA)、Type-4 LSA(ASBR Summary LSA)等。由于本书的知识范围限制，LSA的类型不作详细阐述。</p><p><strong>OSPF消息中的报文</strong><br>OSPF协议报文有5种类型，分别是Hello报文、DD报文（Database Description Packet）、LSR报文（Link-State Request Packet）、LSU报文（Link-State Update Packet）和LSAck（Link-State Acknowledgement Packet）报文。 </p><p><a href="https://imgtu.com/i/ovbGRA"><img src="https://s4.ax1x.com/2021/12/14/ovbGRA.png"></a></p><p>OSPF协议报文直接封装在IP报文中，IP报文头部中的协议字段值必须为89。<br>OSPF报文中的Hello报文所携带的信息是指路由器某一接口所发送的Hello报文携带的如下信息。<br>OSPF的版本号<br>接口所属路由器的Router-ID<br>接口所属区域的Area-ID<br>接口的密钥信息<br>接口的认证类型<br>接口IP地址的子网掩码<br>接口的HelloInterval(发送报文的间隔时间)<br>接口的RouterDeadInterval<br>接口所连二层网络的DR和BDR<br>OSPF报文中的DD报文用于描述自己的链路状态数据库LSDB并进行数据库的同步；LSR报文用于请求相邻路由器LSDB中的一部分数据；LSU报文的功能是向对端路由器发送多条LSA用于更新；LSAck报文是指路由器在接收到LSU报文后所发出的确认应答报文。</p><p><strong>Router ID： Router ID是OSPF区域中路由器的唯一标识</strong><br>一台OSPF路由器的Router ID的是按照以下方式生成的：<br>①如果管理员手动配置了路由器的Router ID，则路由器将使用该Router ID。<br>②如果没有设置，但在路由器上创建了逻辑接口（如环回接口），则路由器会选择这台路由器上所有逻辑接口的IPv4地址中，数值最大的IPv4地址作为Router ID（不论该接口是否参与了OSPF协议）。<br>③如果①和②都没有，则路由器会选择所有活动物理接口的IPv4地址中数值最大的IPv4地址作为Router ID（不论该接口是否参与了OSPF协议）。</p><p>Router ID一旦选定，只要OSPF进程没有重启，路由器的Router ID就不会改变，不论接口是否有变化。RouterID的变化会对OSPF网络产生影响，因此，通常情况下管理员都会采用手动配置RouterID。</p><p><strong>OSPF的网络类型</strong><br>OSPF所支持的网络类型是指OSPF能够支持的二层网络类型，根据数据链路层协议类型将网络分为下列4种类型：<br>广播（Broadcast）类型<br>NBMA（Non-Broadcast Multi-Access）类型<br>点到多点P2MP（point-to-multipoint）类型<br>点到点P2P(point-to-point)类型</p><p>① 广播（Broadcast）类型：当链路层协议是Ethernet或FDDI时，OSPF默认的网络类型是Broadcast。在该类型的网络中，通常以组播形式（224.0.0.5和224.0.0.6）发送协议报文。<br>②NBMA（Non-Broadcast Multi-Access）类型：链路层协议是帧中继、ATM或X.25时，OSPF默认认为网络类型是NBMA。在该项类型的网络中，以单播形式发送协议报文。<br>③点到多点P2MP（point-to-multipoint）类型：点到多点必须是由其他的网络类型强制更改的。常用做法是将非全连通的NBMA改为点到多点的网络。在该类型的网络中，以组播形式（224.0.0.5）发送协议报文。<br>④点到点P2P(point-to-point)类型：当链路层协议是PPP、HDLC和LAPB时，OSPF默认的网络类型是P2P。在该类型的网络中，以组播形式（224.0.0.5）发送协议报文。</p><p><strong>邻居关系与邻接关系</strong><br>邻居关系：在OSPF协议中，每台路由器的接口都会周期性地向外发送Hello报文。如果“相邻”两台路由器之间发送给对方的Hello报文完全一致，那么这两台路由器就会成为彼此的邻居路由器，他们之间才存在“邻居”关系。<br>邻接关系：在P2P或P2MP的二层网络类型中，两台互为“邻居”关系的路由器一定会同步彼此的LSDB，当这两台路由器成功地完成了LSDB的同步后，他们之间便建立起了“邻接”关系。</p><p>在OSPF协议中，如果两台路由器的相邻接口位于同一个二层网络中，那么这两台路由器存在“相邻”关系，但“相邻”并不等同于“邻居（Neighbor）”关系，更不等同于“邻接(Adjacency)”关系。<br>如果两台路由器存在“邻接”关系，则他们之间一定存在“邻居”关系；如果两台路由器存在“邻居”关系，则他们之间可能存在“邻接”关系，也可能不存在。</p><p> <strong>OSPF网络的DR与BDR</strong><br>DR与BDR概述：指定路由器（Designate Router，DR）和备份指定路由器（Backup Designate Router，BDR）只适用于广播（Broadcast）网络或非广播多路访问（NBMA）网络；<br>DR与BDR的选举规则：由于在一个广播网络或NBMA网络中，路由器之间会通过Hello报文进行交互，Hello报文中包含了路由器的Router-ID和优先级，路由器的优先级的取值范围是从0到255，取值越大优先级越高。</p><p>选举DR和BDR是为了产生针对这两种网络的Type-2 LSA，同时可减少MA（多路访问multi-access)环境下，不必要的OSPF报文发送，从而提高链路带宽的利用率。BDR的作用是当DR出现故障时迅速替代DR的角色。<br>在广播型网络或NBMA网络中， DR会与其他路由器（包括BDR）建立邻接关系，BDR也会与其他路由器（包括DR）建立邻接关系，其他路由器之间不会建立邻接关系，互为邻接关系的路由器之间可以交互所有信息。<br>根据Router-ID和优先级进行DR与BDR的选举规则如下：<br>优先级（Router Priority）最大的路由器将成为DR。<br>如果优先级（Router Priority）相等，则Router-ID值最大的路由器将成为DR。<br>BDR的选举与DR的选举规则完全一样，BDR的选举发生在DR的选举之后，在同一个网络中DR和BDR不能是同一台路由器。<br>如果DR和BDR都存在，则DR出现故障后，BDR将迅速代替DR的角色。如果只存在DR而没有BDR，则DR出现故障后将重新选举新的DR，这就需要耗费一定的时间。如果一个路由器的优先级为0，则不参加DR或BDR的选举。</p><h2 id="单区域OSPF配置"><a href="#单区域OSPF配置" class="headerlink" title="单区域OSPF配置"></a>单区域OSPF配置</h2><p>案例3-4 单区域OSPF的配置<br>案例背景与要求：如图所示，某公司网络有3台路由器，其中路由器R1为公司总部路由器，路由器R2和R3分别为两个分公司的路由器，网络规划要求整个网络运行OSPF路由协议，并且采用单区域的OSPF网络结构。 </p><p><a href="https://imgtu.com/i/ovbXdO"><img src="https://s4.ax1x.com/2021/12/14/ovbXdO.png"></a></p><p><strong>案例配置思路</strong><br>①分别在3台路由器上启用OSPF进程。<br>②指定各路由器的接口为Area 0骨干区域。<br>案例配置步骤<br>配置路由器R1 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei] sysname R1</span><br><span class="line">[R1]OSPF 1 router-id 10.1.1.1</span><br><span class="line">[R1-OSPF-1]area 0</span><br><span class="line">[R1-OSPF-1-area-0.0.0.0]network 1.0.0.0 0.255.255.255</span><br><span class="line">[R1-OSPF-1-area-0.0.0.0]network 2.0.0.0 0.255.255.255</span><br><span class="line">[R1-OSPF-1-area-0.0.0.0]network 10.1.1.0 0.0.0.255</span><br></pre></td></tr></table></figure><p>配置时需注意以下事项。<br>①首先进入系统视图，然后执行【OSPF[process-id|router-id router-id]】命令以启用OSPF进程，并进入OSPF视图。<br>②执行OSPF命令时，如果不输入OSPF进程编号（proccess-id）的值，则进程编号默认取值为1。<br>③Router ID是一个32bit的二进制数，一般用十进制数的IP地址表示，如果执行OSPF命令时不指定Router ID，则路由器会根据规则自动生成一个Router ID值。<br>④在OSPF视图中，需要根据网络规划指定运行OSPF协议的接口以及这些接口所在的区域。首先执行【area area-id】命令创建区域，进入区域视图后执行【network address wildcard-mask】命令指定OSPF协议的接口，其中，wildcard-mask为通配符掩码，addresss与wildcard-mask合在一起时，表示的是一个由若干个IP地址组成的集合，这个集合中的任何一个IP地址都满足且只需满足条件：如果wildcard-mask中某一个比特位的取值为0，则该IP地址中的对应比特位的取值必须与addresss中对应的比特位的取值相同。</p><p>配置路由器R2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei] sysname R2</span><br><span class="line">[R2]OSPF 1 router-id 11.1.1.1</span><br><span class="line">[R2-OSPF-1]area 0</span><br><span class="line">[R2-OSPF-1-area-0.0.0.0]network 1.0.0.0 0.255.255.255</span><br><span class="line">[R2-OSPF-1-area-0.0.0.0]network 3.0.0.0 0.255.255.255</span><br><span class="line">[R2-OSPF-1-area-0.0.0.0]network 11.1.1.0 0.0.0.255</span><br></pre></td></tr></table></figure><p>配置路由器R3 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei] sysname R3</span><br><span class="line">[R3]OSPF 1 router-id 12.1.1.1</span><br><span class="line">[R3-OSPF-1]area 0</span><br><span class="line">[R3-OSPF-1-area-0.0.0.0]network 2.0.0.0 0.255.255.255</span><br><span class="line">[R3-OSPF-1-area-0.0.0.0]network 3.0.0.0 0.255.255.255</span><br><span class="line">[R3-OSPF-1-area-0.0.0.0]network 12.1.1.0 0.0.0.255</span><br></pre></td></tr></table></figure><p>案例验证<br>通过以上配置，三台路由器之间都建立起了邻接关系。为了确认上述配置已经生效，可以使用【display OSPF 1 peer】命令来查看路由器的邻居信息，下面以路由器R1为例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[R1]display OSPF 1 peer</span><br><span class="line">   OSPF Process 1 with Router ID 10.1.1.1</span><br><span class="line"> Neighbors </span><br><span class="line">Area 0.0.0.0 interface 2.1.1.1(GigabitEthernet2/0/0)&#x27;s neighbors</span><br><span class="line">Router ID: 12.1.1.1         Address: 2.1.1.2         </span><br><span class="line">State: Full  Mode:Nbr is  Master  Priority: 1</span><br><span class="line">DR: 2.1.1.1  BDR: 2.1.1.2  MTU: 0    </span><br><span class="line">......</span><br><span class="line"> Neighbors </span><br><span class="line"> Area 0.0.0.0 interface 1.1.1.1(GigabitEthernet1/0/0)&#x27;s neighbors</span><br><span class="line"> Router ID: 11.1.1.1         Address: 1.1.1.2         </span><br><span class="line"> State: Full  Mode:Nbr is  Master  Priority: 1</span><br><span class="line"> DR: 1.1.1.1  BDR: 1.1.1.2  MTU: 0    </span><br><span class="line"> Dead timer due in 37  sec </span><br><span class="line"> Retrans timer interval: 5 </span><br><span class="line"> Neighbor is up for 00:15:23     </span><br><span class="line"> Authentication Sequence: [ 0 ] </span><br></pre></td></tr></table></figure><p>回显信息表明，路由器R1已经成功和路由器R2和R3建立了邻接关系。</p><p>通过在路由器R1上使用【display OSPF 1 routing】命令查看OSPF路由表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[R1]display OSPF 1 routing</span><br><span class="line"> OSPF Process 1 with Router ID 10.1.1.1</span><br><span class="line"> Routing Tables </span><br><span class="line"> Routing for Network </span><br><span class="line">Destination        Cost  Type       NextHop         AdvRouter       Area</span><br><span class="line">1.0.0.0/8          1     Transit    1.1.1.1         10.1.1.1        0.0.0.0</span><br><span class="line">2.0.0.0/8          1     Transit    2.1.1.1         10.1.1.1        0.0.0.0</span><br><span class="line">10.1.1.0/24        1     Stub       10.1.1.1        10.1.1.1        0.0.0.0</span><br><span class="line">3.0.0.0/8          2     Transit    1.1.1.2         11.1.1.1        0.0.0.0</span><br><span class="line">3.0.0.0/8          2     Transit    2.1.1.2         11.1.1.1        0.0.0.0</span><br><span class="line">11.1.1.0/24        2     Stub       1.1.1.2         11.1.1.1        0.0.0.0</span><br><span class="line">12.1.1.0/24        2     Stub       2.1.1.2         12.1.1.1        0.0.0.0</span><br><span class="line">Total Nets: 7  </span><br><span class="line">Intra Area: 7  Inter Area: 0  ASE: 0  NSSA: 0 </span><br></pre></td></tr></table></figure><p>回显信息表可以看到，路由器R1的OSPF路由表中已经拥有了从路由器R1去往各个目标网络的路由。</p><h1 id="VLAN间路由"><a href="#VLAN间路由" class="headerlink" title="VLAN间路由"></a>VLAN间路由</h1><h2 id="VLAN间路由概念"><a href="#VLAN间路由概念" class="headerlink" title="VLAN间路由概念"></a>VLAN间路由概念</h2><p> VLAN间路由的概念<br>虽然VLAN可以减少网络中的广播，提高网络安全性能，但无法实现网络内部的所有主机互相通信，我们可以通过路由器或三层交换机来实现属于不同VLAN的计算机之间的三层通信，这就是VLAN间路由。</p><p>VLAN间二层通信的局限性<br>如图所示，VLAN隔离了二层广播域，即隔离了各个VLAN之间的任何二层流量，因此，不同VLAN的用户之间不能进行二层通信；<br>由于不同VLAN之间的主机是无法实现二层通信的，所以必须通过三层路由才能将报文从一个VLAN转发到另外一个VLAN，实现跨VLAN通信。实现VLAN间通信的方法主要有3种：多臂路由、单臂路由和三层交换。</p><p><a href="https://imgtu.com/i/ovqBm6"><img src="https://s4.ax1x.com/2021/12/14/ovqBm6.png"></a></p><p>VLAN间路由的3种方法：多臂路由、单臂路由和三层交换</p><p><a href="https://imgtu.com/i/ovq4nP"><img src="https://s4.ax1x.com/2021/12/14/ovq4nP.png" alt="多臂路由示意图"></a></p><p><a href="https://imgtu.com/i/ovLVnx"><img src="https://s4.ax1x.com/2021/12/14/ovLVnx.png" alt="单臂路由示意图"></a></p><p><a href="https://imgtu.com/i/ovLQ9H"><img src="https://s4.ax1x.com/2021/12/14/ovLQ9H.png" alt="三层交换示意图"></a></p><p>①多臂路由图所示，在路由器上为每个VLAN分配一个单独的接口，并使用一条物理链路连接到二层交换机上。当VLAN间的主机需要通信时，数据会经由路由器进行路由，并被转发到目标VLAN内的主机，这样就可以实现VLAN之间的相互通信。然而，随着每个交换机上VLAN数量的增加，这样做必然需要大量的路由器接口，而路由器的接口数量是极其有限的。并且，某些VLAN之间的主机可能不需要频繁进行通信，如果这样配置的话，会导致路由器的接口利用率很低。因此，实际应用中一般不会采用多臂路由来解决VLAN间的通信问题。<br>②单臂路由示意图所示，交换机和路由器之间仅使用一条物理链路连接。在交换机上，把连接到路由器的端口配置成Trunk类型的端口，并允许相关VLAN的帧通过。在路由器上创建子接口（Sub-Interface），逻辑上把连接路由器的物理链路分成了多条链路（每个子接口对应一个VLAN）。这些子接口的IP地址各不相同，每个子接口的IP地址应该配置为该子接口所对应VLAN的默认网关地址。子接口是一个逻辑上的概念，所以子接口也常常被称为虚接口。配置子接口时，需要注意以下几点。<br>①必须为每个子接口分配一个IP地址。该IP地址与子接口所属VLAN位于同一网段。<br>②需要在子接口上配置802.1Q封装。<br>③在子接口上执行【arp broadcast enable】命令启用子接口的ARP广播功能。本例中，主机A发送数据给主机B时，路由器R1会通过G0/0/1.1子接口收到此数据，然后查找路由表，将数据从G0/0/1.2子接口发送给主机B，这样就实现了VLAN2和VLAN3之间的主机通信。<br>③相对于多臂路由，单臂路由可以节约路由器的接口资源，但如果VLAN数量较多，VLAN间的通信流量很大时，单臂链路所能提供的带宽就有可能无法支撑这些通信流量。而三层交换设备较好的解决了接口数量和交换带宽问题。<br>第三层交换是在交换机中引入路由模块而取代“路由器+二层交换机”的网络技术，这种集成了三层数据包转发功能的交换机被称为三层交换机。三层交换机中每个VLAN对应一个IP网段，VLAN之间还是隔离的，但不同IP网段之间的访问就要跨越VLAN，它需要使用三层转发引擎提供的VLAN间路由功能来实现。该第三层转发引擎相当于传统组网中的路由器，当需要与其他VLAN通信时要在三层交换引擎上分配一个路由接口（逻辑接口VLANIF），用来做VLAN的网关。<br>三层交换机本身提供了路由功能，因此它不需要借助路由器来转发不同VLAN间的流量。三层交换机本身就拥有大量的高速端口，它可以直接连接大量的终端设备。因此，一台三层交换机就可以实现将终端隔离在不同的VLAN中，同时为这些终端提供VLAN间路由的功能。<br>三层交换示意图所示，在三层交换机上配置VLANIF接口来实现VLAN间路由。如果网络上有多个VLAN，则需要给每个VLAN配置一个VLANIF接口，并给每个VLANIF接口配置一个IP地址。用户设置的默认网关就是三层交换机中VLANIF接口的IP地址。</p><h2 id="VLAN间三层通信-单臂路由"><a href="#VLAN间三层通信-单臂路由" class="headerlink" title="VLAN间三层通信-单臂路由"></a>VLAN间三层通信-单臂路由</h2><p>案例3-5 单臂路由的配置<br>案例背景与要求：根据下图所示的网络拓扑，在路由器上配置单臂路由，实现VLAN10和VLAN20网络互联互通。</p><p><a href="https://imgtu.com/i/ovLa4g"><img src="https://s4.ax1x.com/2021/12/14/ovLa4g.png"></a></p><p>案例配置思路<br>①在交换机SW1上创建VLAN，并将相应接口加入到对应VLAN中；<br>②配置交换机与路由器相连接口为Trunk模式；<br>③在路由器R1上创建子接口，并配置子接口的IP地址，启用子接口的dot1q封装，配置允许终结子接口转发广播报文。</p><p>案例配置步骤<br>①配置交换机SW1，在交换机SW1上创建VLAN10和VLAN20，并配置trunk接口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW1</span><br><span class="line">[SW1]vlan batch 10 20</span><br><span class="line">[SW1-GigabitEthernet0/0/24]port link-type trunk</span><br><span class="line">[SW1-GigabitEthernet0/0/24]port trunk allow-pass vlan 10 20 </span><br><span class="line">//配置交换机SW1的G0/0/24端口允许VLAN10和VLAN20的数据通过//</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 10</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port default vlan 20</span><br></pre></td></tr></table></figure><p>②配置路由器R1，主要配置子接口IP及其dot1q封装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R1]interface g0/0/1.1</span><br><span class="line">[R1-GigabitEthernet0/0/0.10]dot1q termination vid 10</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]ip address 192.168.10.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]arp broadcast enable</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]quit</span><br><span class="line">[R1]interface g0/0/1.2</span><br><span class="line">[R1-GigabitEthernet0/0/1.20]dot1q termination vid 20</span><br><span class="line">[R1-GigabitEthernet0/0/1.20Jip address 192.168.20.254 24</span><br><span class="line">[R1-GigabitEthernet0/0/1.20]arp broadcast enable</span><br></pre></td></tr></table></figure><p>上述命令中，【interface g0/0/1.1】命令用来创建子接口，g0/0/1.1代表物理接口g0/0/1内的逻辑接口通道。【dot1q termination vid】命令用来配置子接口dot1q封装的单层VLAN ID。默认情况，子接口没有配置dot1q封装的单层VLAN ID。本命令执行成功后，终结子接口对报文的处理如下：接收报文时，剥掉报文中携带的Tag后进行三层转发。转发出去的报文是否带Tag由出接口决定。发送报文时，将相应的VLAN信息添加到报文中再发送。【arp broadcast enable】命令用来启用子接口的ARP广播功能。默认情况下，终结子接口没有启用ARP广播功能。禁用子接口不能转发广播报文时，在收到广播报文后它将直接丢弃该报文。为了允许终结子接口能转发广播报文，可以通过在子接口上执行此命令。</p><p>案例验证<br>配置完成后，在PC1上执行命令“ping 192.168.20.1”。测试结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.20.1</span><br><span class="line">Ping 192.168.20.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.20.1: bytes=32 seq=1 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=2 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=3 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=4 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=5 ttl=127 time&lt;1 ms</span><br><span class="line">--- 192.168.20.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 0/0/0 ms</span><br></pre></td></tr></table></figure><p>将PC1的IP地址配置为192.168.10.1/24，并将其默认网关地址配置为路由器R1子接口GigabitEthernet0/0/1.1的IP地址：192.168.10.254/24。将PC2的IP地址配置为192.168.20.1/24，并将其默认网关地址配置为路由器R1子接口GigabitEthernet0/0/1.2的IP地址：192.168.10.254/24。</p><p>从回显信息中我们可以看到，PC1收到了PC2的响应，表示PC1可以Ping通PC2，这说明通过单臂路由，成功地实现了VLAN10与VLAN20之间的三层通信。</p><h2 id="VLAN间三层通信-三层交换机"><a href="#VLAN间三层通信-三层交换机" class="headerlink" title="VLAN间三层通信-三层交换机"></a>VLAN间三层通信-三层交换机</h2><p>案例3-6 三层交换机VLAN间路由的配置<br>案例背景与要求：如图所示的网络拓扑，在三层交换机上配置三层路由，实现VLAN10和VLAN20网络互联互通。</p><p><a href="https://imgtu.com/i/ovOMZV"><img src="https://s4.ax1x.com/2021/12/14/ovOMZV.png"></a></p><p>案例配置思路<br>①在三层交换机上创建VLAN10和VLAN20；<br>②将交换机上的对应端口添加到VLAN10和VLAN20中；<br>③在交换上配置三层接口VLANIF的IP地址；<br>④在PC1和PC2配置对应的IP地址和网关，并测试VLAN间的连通性。<br>案例配置步骤<br>①在交换机SW1上创建VLAN 10和VLAN 20。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW1</span><br><span class="line">[SW1]vlan batch 10 20</span><br></pre></td></tr></table></figure><p>②在交换机SW1上进行端口配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface gigabitethernet0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 10</span><br><span class="line">[SW1-GigabitEthernet0/0/1]quit</span><br><span class="line">[SW1]interface gigabitethernet0/0/2</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port default vlan 20</span><br><span class="line">[SW1-GigabitEthernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>③在交换机SW1上配置VLANIF接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface vlanif 10</span><br><span class="line">[SW1-Vlanif10]ip address 192.168.10.254 24</span><br><span class="line">[SW1-Vlanif10]quit</span><br><span class="line">[SW1]interface vlanif 20</span><br><span class="line">[SW1-Vlanif20]ip address 192.168.20.254 24</span><br><span class="line">[SW1-Vlanif20]quit</span><br></pre></td></tr></table></figure><p>案例验证<br>在PC1上执行【ping 192.168.20.1】命令，测试结果如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.20.1</span><br><span class="line">Ping 192.168.20.1: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.20.1: bytes=32 seq=1 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=2 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=3 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=4 ttl=127 time&lt;1 ms</span><br><span class="line">From 192.168.20.1: bytes=32 seq=5 ttl=127 time&lt;1 ms</span><br><span class="line">--- 192.168.20.1 ping statistics ---</span><br><span class="line">  5 packet(s) transmitted</span><br><span class="line">  5 packet(s) received</span><br><span class="line">  0.00% packet loss</span><br><span class="line">  round-trip min/avg/max = 0/0/0 ms</span><br></pre></td></tr></table></figure><p>将PC1的IP地址配置为192.168.10.1/24，网关地址配置为192.168.10.254/24。将PC2的IP地址配置为192.168.20.1/24，网关地址配置为192.168.20.254/24。配置完成后，在PC1上执行【ping 192.168.20.1】命令。<br>从回显信息中我们可以看到，PC1收到了PC2的响应，表示PC1可以Ping通PC2，这说明三层交换机SW1成功地实现了VLAN10与VLAN20之间的三层通信。</p>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.华为1+X/网络交换技术</title>
      <link href="2021/12/13/%E5%8D%8E%E4%B8%BA1+X/2.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF/"/>
      <url>2021/12/13/%E5%8D%8E%E4%B8%BA1+X/2.%E5%8D%8E%E4%B8%BA1+X-%E7%BD%91%E7%BB%9C%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>华为1+X-网络交换技术</p><p>交换技术是随着电话通信的发展和使用而出现的通信技术。随着互联网技术的快速发展，交换技术已从传统的电路交换、分组交换等技术发展到现在以IP为核心的宽带分组交换。交换技术已成为网络的核心技术之一。随着信息化的快速推进，网络规模和网络宽带增长迅速。在企业网中，以太网技术和交换机被广泛应用，局域网的速率从最初的10Mbit/s提高到了1000Mbit/s，甚至10Gbit/s，而在数据中心，40Gbit/s和100Gbit/s以太网已经被普遍应用。</p><h1 id="交换网络基础"><a href="#交换网络基础" class="headerlink" title="交换网络基础"></a>交换网络基础</h1><h2 id="共享型以太网与冲突域"><a href="#共享型以太网与冲突域" class="headerlink" title="共享型以太网与冲突域"></a>共享型以太网与冲突域</h2><p><strong>共享型以太网</strong><br>采用了总线型拓扑<br>共享通信链路的带宽<br>数据信号就会在信道内碰撞产生冲突</p><p><a href="https://imgtu.com/i/oLxzXq"><img src="https://s4.ax1x.com/2021/12/13/oLxzXq.png"></a></p><p>交换网络是通信系统的重要组成部分，主要用来完成信息交换的功能。交换网络的出现有效解决了传统共享型以太网的冲突域问题，常见设备有集线器、交换机。<br>最初的以太网采用了总线型拓扑，各个主机之间共用一条同轴电缆进行通信，它们共享这条通信链路的带宽。这意味着无论哪一台主机发送数据，其余的主机都能收到，如图2-1所示。同时，也可能有这样一种场景，当一台主机正在发送数据时，另一台主机也开始发送数据，或者两台主机同时开始发送数据，他们的数据信号就会在信道内碰撞，互相干扰，使得数据信号被破坏，导致通信中断</p><p><strong>CSMA/CD协议的工作过程</strong><br>①侦听信道上是否有信号在传输。如果有的话，表明信道处于忙状态，就继续侦听，直到信道空闲为止；<br>②若没有侦听到任何信号，就传输数据；<br>③传输时继续侦听，如发现冲突则执行退避算法，随机等待一段时间后，重新执行步骤①；<br>④若未发现冲突则发送成功，计算机会返回到侦听信道状态。</p><p>为了解决这些计算机同时发送数据会产生冲突的问题，共享型以太网在任意时刻仅允许一台主机发送数据，因此每台主机并不能占有所有带宽。随着接入的主机数量越来越多，主机的通信速率将越来越低。为了解决多台计算机同时发送数据时产生的冲突问题，引入了CSMA/CD协议。</p><p><strong>冲突与冲突域</strong><br>冲突（Collision）：在以太网中，当两个数据帧同时被发到物理传输介质上，并完全或部分重叠时，就发生了数据冲突。当冲突发生时，将导致数据损坏。<br>冲突域：连接到同一个共享介质的设备共同组成了一个冲突域。</p><p><a href="https://imgtu.com/i/oLz14e"><img src="https://s4.ax1x.com/2021/12/13/oLz14e.png" alt="冲突域"></a></p><p>影响冲突产生的因素：冲突是影响以太网性能的重要因素，冲突的存在使得传统的以太网在负载超过40%时，效率将明显下降。产生冲突的原因有很多，例如，同一冲突域中节点的数量越多，产生冲突的可能性就越大。此外，诸如数据分组的长度（以太网的最大帧长度为1518字节）、网络的直径等因素也会影响冲突的产生。因此，当以太网的规模增大时，就必须采取措施来控制冲突的扩散。通常的办法是使用网桥和交换机将网络分段，将一个大的冲突域划分为若干个小的冲突域。<br>在共享型以太网中，任意两台及以上设备同时发送数据就会造成冲突，它们共同构成了一个冲突域。</p><h2 id="交换机简介"><a href="#交换机简介" class="headerlink" title="交换机简介"></a>交换机简介</h2><p><strong>以太网交换机的特点</strong><br>交换机工作在数据链路层<br>交换机的每一个端口都是一个独立的冲突域<br>交换机以端口隔离冲突域形成交换型以太网</p><p><a href="https://imgtu.com/i/oLzIC4"><img src="https://s4.ax1x.com/2021/12/13/oLzIC4.png"></a></p><p>共享式以太网在扩展性能上很差，且随着设备数量增加，发生冲突的概率也增加，因此它无法应对大型网络。交换机正是基于这个背景被设计出来的。<br>交换机能识别以太网数据帧的源和目标MAC地址，并将数据帧从与目的设备相连的端口转发出去，而不会像集线器那样向不需要这个数据帧的接口发送数据帧。</p><p><strong>广播域</strong><br>广播：一台设备向同一个网络中的所有其他设备发送消息的数据发送方式；<br>广播域：广播帧可达的区域，即：接收同样广播消息的节点的集合；<br>广播域的分类：二层广播域和三层广播域。</p><p><a href="https://imgtu.com/i/oLzv5D"><img src="https://s4.ax1x.com/2021/12/13/oLzv5D.png" alt="广播域"></a>交换机通过自己的接口来隔离冲突域，但并不表示交换型以太网中连接的设备之间只能实现一对一的数据交互，有时，域网中的一台终端设备确实需要向局域网中的所有其他终端设备发送消息。</p><p><strong>交换机数据帧的转发方式</strong><br>学习：通过查看收到的每个数据帧的源MAC地址来学习每个接口连接设备的MAC地址。<br>转发：在MAC地址表中找到了该目标MAC地址，且该数据帧的源MAC和目的MAC对应的端口号不同。<br>广播：在MAC地址表中没有找到该目标MAC地址。<br>丢弃：在MAC地址表中找到了该目标MAC地址，且该数据帧的源MAC地址和目的MAC地址对应的端口号相同。<br>更新：交换机MAC地址表的默认老化时间是300秒。</p><p><strong>交换机数据帧的转发方式</strong><br>学习：当交换机通过自己的某个接口接收到一个数据帧时，它就会将这个数据帧的源MAC地址和接收到这个数据帧的接口编号作为一个条目保存在自己的MAC地址表中。</p><p><a href="https://imgtu.com/i/oOSQrq"><img src="https://s4.ax1x.com/2021/12/13/oOSQrq.png" alt="MAC地址映射表"></a></p><p>转发：在MAC地址表中找到了该目标MAC地址，且该数据帧的源MAC和目的MAC对应的端口号不同。交换机会将该数据帧从目标MAC对应的端口号转发出去，如交换机将会把PC0发给PC2的数据帧从E2端口转发出去。</p><p><a href="https://imgtu.com/i/oOSHJg"><img src="https://s4.ax1x.com/2021/12/13/oOSHJg.png" alt="MAC地址映射表"></a></p><p>丢弃：在MAC地址表中找到了该目标MAC地址，且该数据帧的源MAC地址和目的MAC地址对应的端口号相同。交换机E0所在端口为一个冲突域，PC0和PC1在一个冲突域中，因此，交换机和PC1都会收到PC0发给PC1的数据包，由此，交换机并不需要处理该数据帧，因此丢弃。</p><p><a href="https://imgtu.com/i/oOSxe0"><img src="https://s4.ax1x.com/2021/12/13/oOSxe0.png" alt="MAC地址映射表"></a></p><p>广播：由于交换机的MAC地址表中没有记录这个数据帧的目的MAC地址，因此，它无法处理该数据帧，于是，交换机只能将该数据帧从所有其他端口发送出去。</p><p><a href="https://imgtu.com/i/oOpZex"><img src="https://s4.ax1x.com/2021/12/13/oOpZex.png" alt="MAC地址映射表"></a></p><p>交换机系统的启动过程<br>①交换机上电<br>②运行基本BootROM软件进行硬件自检<br>③再引导运行BootLoad软件<br>④等待硬件初始化后显示交换机的硬件参数<br>⑤引导加载系统软件和交换机的配置文件<br>⑥正常加载后进入到系统的CLI界面</p><p><a href="https://imgtu.com/i/oO9V3Q"><img src="https://s4.ax1x.com/2021/12/13/oO9V3Q.png"></a></p><p>华为交换机的VRP软件系统由网络操作系统软件（Internet Operating System, IOS）和启动只读存储器软件(Boot Read-Only Memory, BootROM)组成，其中BootROM由基本BootROM软件和扩展BootLoad软件组成。</p><h2 id="企业园区网设计示例"><a href="#企业园区网设计示例" class="headerlink" title="企业园区网设计示例"></a>企业园区网设计示例</h2><p><strong>规模较小的园区网设计</strong><br>在设计企业网络时，对于网络规模较小的公司，大多会采用扁平化树形结构来设计。</p><p><a href="https://imgtu.com/i/oOKrj0"><img src="https://s4.ax1x.com/2021/12/13/oOKrj0.png"></a></p><p>规模较大的园区网设计<br>采用分层设计，划分为以下3个层级，每个层级的交换机均采用星形方式与下一层级的交换机建立连接。<br>核心层<br>汇聚层<br>接入层</p><p><a href="https://imgtu.com/i/oOKRN4"><img src="https://s4.ax1x.com/2021/12/13/oOKRN4.png"></a></p><p><strong>核心层：</strong>也称为骨干层，是网络中所有流量的最终汇聚点，通常由两台高性能交换机构成，实现网络的可靠性、稳定性和高速传输。<br><strong>汇聚层：</strong>位于接入层和核心层之间，它是多台接入层交换机的汇聚点，并通过流量控制策略对园区网中的流量转发进行优化。近年来，核心层交换机处理能力越来越强，为更高效地监控网络状况，通常不再设置汇聚层，而是由接入层直接连接核心层，形成大二层网络结构。<br><strong>接入层：</strong>它允许终端用户直接接入到网络中，接入层交换机具有低成本和高端口密度的特征。</p><h2 id="交换机的分类"><a href="#交换机的分类" class="headerlink" title="交换机的分类"></a>交换机的分类</h2><p><strong>不可网管交换机：</strong>按照交换机是否可以配置与管理，可以将交换机分为网管交换机和不可网管交换机。不可网管交换机不具有网络管理功能，没有配置接口。</p><p><a href="https://imgtu.com/i/oXVMGt"><img src="https://s4.ax1x.com/2021/12/13/oXVMGt.png" alt="不可网管交换机"></a></p><p><strong>可网管交换机：</strong>可网管交换机具有网络管理、网络监控、端口监控、VLAN划分等功能，它具有专门的配置接口—Console接口。</p><p><a href="https://imgtu.com/i/oXVNIs"><img src="https://s4.ax1x.com/2021/12/13/oXVNIs.png" alt="可网管交换机"></a></p><h2 id="交换机基本设置"><a href="#交换机基本设置" class="headerlink" title="交换机基本设置"></a>交换机基本设置</h2><p><strong>速率与双工模式</strong><br>速率：交换机接口的速率是指这个接口每秒能够转发的比特数；<br>双工模式：双工模式是指接口传输数据的方向性，常见的有半双工和全双工。<br>半双工：只有一个信道，在同一时刻，只能是单向传输。<br>全双工：双信道，同时可以有双向数据传输。</p><hr><p><strong>tip:</strong></p><p>客户端接入到交换机后，其转发速率很大程度上取决于交换机接口的速率和双工模式。</p><p>交换机接口的速率是指这个接口每秒能够转发的比特数，这个参数的单位是bit/s。交换机的接口的最大速率取决于该交换机接口的物理带宽，例如，一个吉比特交换机的端口能够设置的速率上限就是1Gbit/s，那么管理员可以设置该接口的速率最大值不能超过1Gbit/s。</p><p>双工模式是指接口传输数据的方向性。如果一个接口工作在全双工模式（Full-Duplex）下，表示该接口的网络适配器可以同时在收发两个方向上传输和处理数据。而如果一个接口工作在半双工模式（Half- Duplex）下，则代表数据的接收和发送不能同时进行。显然，数据收发是一个双边的问题，因此一个传输介质所连接的所有端口必须设置为同一种双工模式。</p><p>在交换型以太网中，只通过线缆连接了一台设备（网络适配器）的交换机端口将默认工作在全双工模式下，而这种工作在全双工模式下的端口是没有冲突域的，它们也可以与对端适配器同时发送数据而不用担心线缆上因信号叠加而产生冲突，此时这个端口的载波侦听多路访问机制也不会启用；如果一个交换机端口连接的是共享型介质，那么这个交换机端口就只能工作在半双工模式下，这个共享型介质所连接的所有网络适配器（其中也包括这个交换机端口）共同构成了一个冲突域，此时这个交换机端口的载波侦听多路访问机制也会启用。</p><p>除双工模式外，传输介质两侧端口的工作速率也要相互一致，否则无法实现通信。</p><p>若管理员因某种原因（例如，交换机某个端口的对端设备已经设定了某种速率和双工模式，或者管理员希望修改协商的速率和双工模式结果等），希望强制为交换机的某个端口设置速率和双工模式，则应首先使用【undo negotiation auto】命令关闭该接口的自动协商功能，然后通过【duplex{ full half}】命令将该接口的双工模式静态设置为全双工或半双工模式，并通过【Speed】命令设置接口的速率。</p><hr><p>案例2-1：查看交换机端口当前的速率和双工模式</p><p><a href="https://imgtu.com/i/oXVoLD"><img src="https://s4.ax1x.com/2021/12/13/oXVoLD.png"></a></p><p>案例2-2：设置交换机端口的双工模式和速率</p><p><a href="https://imgtu.com/i/oXZkYn"><img src="https://s4.ax1x.com/2021/12/13/oXZkYn.png"></a></p><p>案例2-3：验证交换机端口的速率和双工模式</p><p><a href="https://imgtu.com/i/oXZBtA"><img src="https://s4.ax1x.com/2021/12/13/oXZBtA.png"></a></p><p>MAC地址表<br>作用：交换机的MAC地址表用于存储交换机端口和终端MAC地址的映射关系。<br>案例2-4：管理交换机的MAC地址表</p><p><a href="https://imgtu.com/i/oXZcX8"><img src="https://s4.ax1x.com/2021/12/13/oXZcX8.png"></a></p><hr><p><strong>tip:</strong></p><p>管理员可以查看交换机的MAC地址表信息、添加MAC地址表静态条目、修改MAC地址动态条目的老化时间等配置。</p><hr><p><strong>MAC地址表</strong><br>①刚启动时，查看交换机的MAC地址表；(交换机刚启动时，两台PC还没有发起通信，因此交换机MAC地址表应该为空的。通过【display mac-address】命令可以查看交换机的MAC地址表。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display mac-address </span><br><span class="line">[Huawei]</span><br></pre></td></tr></table></figure><p>②通过PC1 ping PC2，手动发起PC1和PC2与交换机之间的通信。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC1&gt;ping 192.168.1.2</span><br><span class="line">Ping 192.168.1.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.2: bytes=32 seq=1 ttl=128 time=62 ms</span><br><span class="line">From 192.168.1.2: bytes=32 seq=1 ttl=128 time=62 ms</span><br><span class="line">From 192.168.1.2: bytes=32 seq=1 ttl=128 time=62 ms</span><br><span class="line">---省略部分显示内容 ---</span><br></pre></td></tr></table></figure><p>③通信后，再次查看交换机的MAC地址表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display mac-address</span><br><span class="line">MAC address table of slot 0:</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">MAC Address    VLAN/       PEVLAN CEVLAN Port            Type      LSP/LSR-ID  </span><br><span class="line">               VSI/SI                                              MAC-Tunnel  </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">0011-2233-4422 1           -      -      Eth0/0/2        dynamic   0/-         </span><br><span class="line">0011-2233-4411 1           -      -      Eth0/0/1        dynamic   0/-         </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total matching items on slot 0 displayed = 2 </span><br><span class="line">[Huawei]</span><br></pre></td></tr></table></figure><p>④通过【mac-address static】命令在交换机中添加静态条目，并显示MAC地址表信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]mac-address static 0011-2233-4455 Ethernet 0/0/3 vlan 1</span><br><span class="line">[Huawei]display mac-address </span><br><span class="line">MAC address table of slot 0:</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">MAC Address    VLAN/       PEVLAN CEVLAN Port            Type      LSP/LSR-ID  </span><br><span class="line">               VSI/SI                                              MAC-Tunnel  </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">0011-2233-4455 1           -      -      Eth0/0/3        static    -           </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Total matching items on slot 0 displayed = 1</span><br></pre></td></tr></table></figure><p>结果显示，管理员成功在交换机中添加了一条静态MAC地址映射信息。静态MAC地址条目优先级高于交换机动态学习到的MAC地址条目，且它不会老化。而动态学习的MAC地址条目则会因为交换机在MAC地址老化时间内没有再次通过同一接口接收到这个MAC地址为源的数据帧，最终被交换机从MAC地址表中删除。</p><p>⑤修改MAC地址动态条目的老化时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display mac-address aging-time </span><br><span class="line">  Aging time: 300 seconds</span><br><span class="line">[Huawei]mac-address aging-time 500</span><br><span class="line">[Huawei]display mac-address aging-time</span><br><span class="line">  Aging time: 500 seconds</span><br></pre></td></tr></table></figure><p>结果显示，管理员成功的将交换机的MAC地址老化时间修改为500s。如果将MAC地址老化时间修改为0，则相当于禁用了交换机的MAC地址老化功能。这意味着交换机动态学习到的MAC地址条目永不过期。</p><h2 id="MAC地址泛洪攻击概述"><a href="#MAC地址泛洪攻击概述" class="headerlink" title="MAC地址泛洪攻击概述"></a>MAC地址泛洪攻击概述</h2><p>MAC地址泛洪攻击<br>定义：攻击者利用交换机的学习机制不断发送大量的MAC地址，整个MAC表到达存储上限时，交换机只能广播后续数据帧（泛洪），导致攻击者捕获数据帧；<br>攻击者伪造不同MAC地址的数据帧的。</p><p><a href="https://imgtu.com/i/oXesUJ"><img src="https://s4.ax1x.com/2021/12/13/oXesUJ.png"></a></p><hr><p><strong>tip:</strong></p><p>不同型号的交换机可存放的MAC地址表条目数有所不同，在特定交换机中，可存储的MAC地址条目数是固定的。如果交换机的MAC地址表已经达到存储上限，那么交换机将不能再记录MAC地址信息，此时，如果它再接收到一个数据帧（该目标MAC没有存储在交换机MAC地址表中）时，根据交换机的工作原理，它将向除源端口以外的所有端口发送该数据帧（泛洪）。</p><p>泛洪攻击正是利用了MAC的这一原理，通过运行一段特定的代码，该代码每秒可以生成几十万个不同MAC地址的数据帧，并发送给交换机，这台交换机的MAC地址表将很快被这些伪造的MAC地址占满。</p><hr><p>攻击端捕获其他PC发送数据帧</p><p><a href="https://imgtu.com/i/oXezVg"><img src="https://s4.ax1x.com/2021/12/13/oXezVg.png"></a></p><h1 id="虚拟局域网（VLAN）技术"><a href="#虚拟局域网（VLAN）技术" class="headerlink" title="虚拟局域网（VLAN）技术"></a>虚拟局域网（VLAN）技术</h1><h2 id="VLAN基本概念"><a href="#VLAN基本概念" class="headerlink" title="VLAN基本概念"></a>VLAN基本概念</h2><p><strong>什么是VLAN</strong></p><p>定义： (Virtual Local Area Network，VLAN)也称为虚拟局域网。<br>功能：隔离广播域，限制广播域的范围，减少广播流量。</p><p><strong>VLAN的原理</strong></p><p>同一个VLAN内的主机共享同一个广播域；<br>同一个VLAN可以直接进行二层通信；<br>VLAN间的主机属于不同的广播域；<br>VLAN间的主机无法实现二层通信。</p><p><a href="https://imgtu.com/i/oXmQR1"><img src="https://s4.ax1x.com/2021/12/13/oXmQR1.png"></a></p><hr><p><strong>tip:</strong></p><p>虚拟局域网(Virtual Local Area Network，VLAN)是将一个物理的局域网在逻辑上划分成多个广播域的技术。通过在交换机上配置VLAN，实现在同一个VLAN内的主机可以相互通信，而不同VLAN间的主机被相互隔离。</p><hr><p><strong>VLAN帧格式</strong><br>类型：TAG和UNTAG，TAG是带有VLAN标记的以太网帧（Tagged Frame），UNTAG是没有带VLAN标记的标准以太网帧（Untagged Frame）。</p><p><a href="https://imgtu.com/i/oXmcdg"><img src="https://s4.ax1x.com/2021/12/13/oXmcdg.png"></a></p><hr><p><strong>tip:</strong></p><p>带有VLAN标记的以太网帧中，TAG标签长度为4字节，具体内容说明如下。<br>①TPID：Tag Protocol Identifier，2字节，固定取值，0x8100，是IEEE定义的新类型，表明这是一个携带802.1Q标签的帧。如果不支持802.1Q的设备收到这样的帧，会将其丢弃。<br>②TCI：Tag Control Information，2字节，用来表示帧的控制信息，包括以下几个部分。<br>①　Priority：3比特，表示帧的优先级，取值范围为0～7，值越大优先级越高。当交换机阻塞时，优先发送优先级高的数据帧。<br>②　CFI：Canonical Format Indicator，1比特。CFI表示MAC地址是否是经典格式。CFI为0说明是经典格式，CFI为1表示为非经典格式。用于区分以太网帧、FDDI（Fiber Distributed Digital Interface）帧和令牌环网帧。在以太网中，CFI的值为0。<br>③　VLAN Identifier：VLAN ID，12比特，交换机一般可以划分255个VLAN，每个VLAN的ID 可以是1~4094之间的任意数字，ID的作用就是用于区分不同VLAN，可以设置TAG和UNTAG属性，让交换机端口的下行或上行数据帧标记标签。</p><hr><p><strong>VLAN在实际网络中的应用</strong><br>通过对两栋楼互联交换机的配置，可以实现为两栋楼工作的财务部创建VLAN10，技术部创建VLAN20，不仅实现了部门间的二层广播隔离，还实现了部门跨交换机的二层通信。</p><p><a href="https://imgtu.com/i/oXmIyV"><img src="https://s4.ax1x.com/2021/12/13/oXmIyV.png"></a></p><hr><p><strong>tip:</strong></p><p>在常见的企业园区网设计中，公司会为每一个部门创建一个VLAN，各自形成一个广播域，部门内部员工之间能够通过二层交换机直接通信，不同部门的员工之间必须通过三层IP路由功能才可以相互通信。</p><hr><p>划分VLAN的方法<br>基于端口划分<br>基于MAC地址划分<br>基于IP子网划分<br>基于协议划分<br>基于策略划分</p><table><thead><tr><th>划分VLAN的方法</th><th><strong>VLAN 5</strong></th><th><strong>VLAN 10</strong></th></tr></thead><tbody><tr><td>基于端口</td><td>G0/0/1, G0/0/7</td><td>G0/0/2 G0/0/9</td></tr><tr><td>基于MAC地址</td><td>00-01-02-03-04-AA00-01-02-03-04-CC</td><td>00-01-02-03-04-BB00-01-02-03-04-DD</td></tr><tr><td>基于IP子网划分</td><td>10.0.1.0/24</td><td>10.0.2.0/24</td></tr><tr><td>基于协议划分</td><td>IP</td><td>IPX</td></tr><tr><td>基于策略</td><td>G0/0/1+00-01-02-03-04-AA（交换机端口号+MAC）</td><td>G0/0/2+00-01-02-03-04-BB（交换机端口号+MAC）</td></tr></tbody></table><hr><p><strong>tip:</strong></p><p>①基于端口划分：根据交换机的端口编号来划分VLAN。<br>初始情况下，交换机的端口都处于VLAN1中，管理员通过为交换机的每个端口配置不同的PVID，将不同端口划分到不同的VLAN中，该方法是最常用的方法。<br>②基于MAC地址划分：根据主机网卡的MAC地址划分VLAN。<br>此划分方法需要网络管理员提前配置网络中的主机MAC地址和VLAN ID的映射关系。如果交换机收到不带标签的数据帧，会查找之前配置的MAC地址和VLAN映射表，然后根据数据帧中携带的MAC地址来添加相应的VLAN标签。<br>③基于IP子网划分：交换机在收到不带标签的数据帧时，根据报文携带的IP地址给数据帧添加VLAN标签。<br>④基于协议划分：根据数据帧的协议类型（或协议族类型）、封装格式来分配VLAN ID。网络管理员需要先配置协议类型和VLAN ID之间的映射关系。<br>⑤基于策略划分：使用几个条件的组合来分配VLAN标签。这些条件包括IP子网、端口和IP地址等。只有当所有条件都匹配时，交换机才为数据帧添加VLAN标签。另外，针对每一条策略都是需要手工配置的。</p><hr><p><strong>交换机端口的分类</strong><br>Access（接入）端口<br>Access端口用于连接计算机等终端设备，只能属于一个VLAN，也就是只能传输一个VLAN的数据。<br>Trunk（干道）端口<br>Trunk端口用于连接交换机等网络设备，它允许传输多个VLAN的数据。<br>Hybrid（混合）端口<br>Hybrid接口是华为系列交换机端口的默认工作模式，它能够接收和发送多个VLAN的数据帧，可以用于链接交换机之间的链路，也可以用于连接终端设备。</p><hr><p><strong>tip:</strong></p><p>Access端口在发送出站数据帧之前，会判断这个要被转发的数据帧中携带的VLAN ID是否与出站端口的PVID相同，若相同则去掉VAN标签进行转发；若不同则丢弃。<br>Trunk端口在发送出站数据帧之前，会判断这个要被转发的数据帧中携带的VLAN ID是否与出站端口的PVID相同，若相同则去掉VLAN标签进行转发；若不同则判断本端口是否允许传输这个数据帧的VLAN ID，若允许则转发（保留原标签），否则丢弃。<br>Hybrid接口兼具Access接口和Trunk接口的特征，在实际应用中，可以根据对端接口工作模式自动适配工作。</p><hr><h2 id="VLAN配置"><a href="#VLAN配置" class="headerlink" title="VLAN配置"></a>VLAN配置</h2><p><strong>VLAN的添加与删除</strong><br>创建VLAN。执行【vlan &lt; vlan-id &gt;】命令。<br>创建多个连续VLAN，执行【vlan batch { vlan-id1 [ to vlan-id2 ] }】命令。<br>创建多个不连续VLAN，也可以执行【vlan batch { vlan-id1 vlan-id2 }】命令。<br>案例2-5 ：为交换机创建VLAN 10、VLAN 20和VLAN 30</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]vlan 10</span><br><span class="line">[Huawei]vlan batch 20 30</span><br></pre></td></tr></table></figure><p>例如，执行【vlan 10】命令后，就创建了VLAN 10，并进入了VLAN 10视图。VLAN ID的取值范围是1到4094。</p><p><strong>配置Access端口和Trunk端口</strong><br>配置Access，执行【port link-type access 】命令。<br>配置Trunk ，执行【port link-type trunk 】命令。<br>案例2-6：为修改交换机的Ethernet 0/0/1端口为access模式，并配置端口的PVID为VLAN10，同时修改交换机的Ethernet 0/0/2端口为trunk模式，配置允许VLAN10、VLAN20通过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]interface Ethernet 0/0/1</span><br><span class="line">[Huawei-Ethernet0/0/1]port link-type access</span><br><span class="line">[Huawei-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[Huawei-Ethernet0/0/1]quit</span><br><span class="line">[Huawei]interface Ethernet 0/0/2</span><br><span class="line">[Huawei-Ethernet0/0/2]port link-type trunk</span><br><span class="line">[Huawei-Ethernet0/0/2]port trunk allow-pass vlan 10 20</span><br></pre></td></tr></table></figure><p>当修改端口为access模式后，需要配合【port default vlan &lt; vlan-id &gt;】命令，配置端口的PVID；当修改端口为trunk后，需要使用【port trunk allow-pass vlan { vlan-id1 [ to vlan-id2 ] }】命令，配置trunk干道允许哪些VLAN通过。</p><p><strong>检查VLAN信息</strong><br>创建VLAN后，可以执行【display vlan】命令验证配置结果。如果不指定任何参数，则该命令将显示所有VLAN的简要信息；<br>执行【display vlan [ vlan-id [ verbose ] ]】命令，可以查看指定VLAN的详细信息，包括VLAN ID、类型、描述、VLAN的状态、VLAN中的端口、以及VLAN中端口的模式等；<br>执行【display vlan vlan-id statistics】命令，可以查看指定VLAN中的流量统计信息；<br>执行【display vlan summary】命令，可以查看系统中所有VLAN的汇总信息。</p><p>案例2-7：为使用【display vlan】命令查看交换机已创建的VLAN信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display vlan </span><br><span class="line">----省略部分显示内容---</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">1    common  UT:Eth0/0/2(D)     Eth0/0/3(D)     Eth0/0/4(D)     Eth0/0/5(D)     </span><br><span class="line">                Eth0/0/6(D)     Eth0/0/7(D)     Eth0/0/8(D)     Eth0/0/9(D)     </span><br><span class="line">                Eth0/0/10(D)    Eth0/0/11(D)    Eth0/0/12(D)    Eth0/0/13(D)    </span><br><span class="line">                Eth0/0/14(D)    Eth0/0/15(D)    Eth0/0/16(D)    Eth0/0/17(D)    </span><br><span class="line">                Eth0/0/18(D)    Eth0/0/19(D)    Eth0/0/20(D)    Eth0/0/21(D)    </span><br><span class="line">                Eth0/0/22(D)    GE0/0/1(D)      GE0/0/2(D)                      </span><br><span class="line">10   common  UT:Eth0/0/1(D)                                                     </span><br><span class="line">             TG:Eth0/0/2(D)                                                     </span><br><span class="line">20   common  TG:Eth0/0/2(D)                                                     </span><br><span class="line">30   common  </span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><h2 id="常见场景下的VLAN配置"><a href="#常见场景下的VLAN配置" class="headerlink" title="常见场景下的VLAN配置"></a>常见场景下的VLAN配置</h2><p>案例2-8：单交换机场景<br>案例背景与要求<br>为财务部创建VLAN10，PC1和PC2为财务部PC，连接在交换机的ETH0/0/1和ETH0/0/2端口，为项目部创建VLAN20，PC3和PC4为项目部PC，连接在交换机的ETH0/0/3和ETH0/0/4端口。实现两个部门内部PC可以通信，跨部门PC不能互相通信。<br>案例拓扑图</p><p><a href="https://imgtu.com/i/oXujr6"><img src="https://s4.ax1x.com/2021/12/13/oXujr6.png"></a></p><p>案例配置过程<br> ① 创建VLAN 10和VLAN 20。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]vlan batch 10 20</span><br></pre></td></tr></table></figure><p> ② 将连接PC的交换机端口配置为access模式，并加入到相应的VLAN中，以PC1为例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]interface Ethernet 0/0/1</span><br><span class="line">[Huawei-Ethernet0/0/1]port link-type access </span><br><span class="line">[Huawei-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[Huawei-Ethernet0/0/1]quit</span><br></pre></td></tr></table></figure><p>③ 在交换机上使用【display port vlan】命令查看各端口的模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display port vlan </span><br><span class="line">Port                    Link Type    PVID  Trunk VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Ethernet0/0/1           access       10    -                                   </span><br><span class="line">Ethernet0/0/2           access       10    -                                   </span><br><span class="line">Ethernet0/0/3           access       20    -                                   </span><br><span class="line">Ethernet0/0/4           access       20    -                                   </span><br><span class="line">Ethernet0/0/5           hybrid       1     -              </span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><p>④案例验证<br>在PC1上使用【ping】命令测试各PC的连通性；此时，财务部的PC可以互相通信，与项目部的PC无法通信。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.1.2</span><br><span class="line"> Ping 192.168.1.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.2:bytes=32 seq=1 ttl=128 time=63 ms</span><br><span class="line">---省略部分显示内容---</span><br><span class="line">PC&gt;ping 192.168.1.3</span><br><span class="line">Ping 192.168.1.3: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.1: Destination host unreachable</span><br><span class="line">---省略部分显示内容---</span><br><span class="line">PC&gt;ping 192.168.1.4</span><br><span class="line"> Ping 192.168.1.4: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.1: Destination host unreachable</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><p>案例2-9：跨交换机场景<br>案例背景与要求<br>以Jan16公司的财务部和项目部为例，为财务部创建VLAN10，PC1和PC2为财务部PC，连接在交换机SW1的ETH0/0/1和交换机SW2的ETH0/0/1端口，为项目部创建VLAN20，PC3和PC4为项目部PC，连接在交换机SW1的ETH0/0/2和交换机SW2的ETH0/0/2端口，配置交换机互联的端口模式为Trunk，实现两个部门内部可以通信，跨部门的PC不能互相通信。</p><p><a href="https://imgtu.com/i/oXKKiQ"><img src="https://s4.ax1x.com/2021/12/13/oXKKiQ.png"></a></p><p>案例配置过程<br>① 在SW1和SW2上创建VLAN 10和VLAN 20。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname SW1</span><br><span class="line">[SW1]vlan batch 10 20</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">[Huawei]sysname SW2</span><br><span class="line">[SW2]vlan batch 10 20</span><br></pre></td></tr></table></figure><p>② 在SW1和SW2上，将连接PC的交换机端口配置为access模式，并加入到相应的VLAN中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Ethernet 0/0/1</span><br><span class="line">[SW1-Ethernet0/0/1]port link-type access </span><br><span class="line">[SW1-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[SW1-Ethernet0/0/1]quit</span><br><span class="line">[SW1]interface Ethernet 0/0/2</span><br><span class="line">[SW1-Ethernet0/0/2]port link-type access </span><br><span class="line">[SW1-Ethernet0/0/2]port default vlan 20</span><br><span class="line">[SW1-Ethernet0/0/2]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface Ethernet 0/0/1</span><br><span class="line">[SW2-Ethernet0/0/1]port link-type access </span><br><span class="line">[SW2-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[SW2-Ethernet0/0/1]quit</span><br><span class="line">[SW2]interface Ethernet 0/0/2</span><br><span class="line">[SW2-Ethernet0/0/2]port link-type access </span><br><span class="line">[SW2-Ethernet0/0/2]port default vlan 20</span><br><span class="line">[SW2-Ethernet0/0/2]quit</span><br></pre></td></tr></table></figure><p>③  配置交换机SW1和SW2之间的端口为Trunk模式，并放行VLAN 10和VLAN 20。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Ethernet 0/0/3</span><br><span class="line">[SW1-Ethernet0/0/3]port link-type trunk </span><br><span class="line">[SW1-Ethernet0/0/3]port trunk allow-pass vlan 10 20</span><br><span class="line">[SW1-Ethernet0/0/3]quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface Ethernet 0/0/3</span><br><span class="line">[SW2-Ethernet0/0/3]port link-type trunk </span><br><span class="line">[SW2-Ethernet0/0/3]port trunk allow-pass vlan 10 20</span><br><span class="line">[SW2-Ethernet0/0/3]quit</span><br></pre></td></tr></table></figure><p>④ 在交换机上使用【display vlan】命令查看交换机已创建的VLAN信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[SW1]display vlan </span><br><span class="line">The total number of vlans is : 4</span><br><span class="line">---省略部分显示内容---                                               </span><br><span class="line"></span><br><span class="line">10   common  UT:Eth0/0/1(U)                                                     </span><br><span class="line">             TG:Eth0/0/3(U)                                                     </span><br><span class="line">20   common  UT:Eth0/0/2(U)                                                     </span><br><span class="line">             TG:Eth0/0/3(U)                                                     </span><br><span class="line">---省略部分显示内容---        </span><br></pre></td></tr></table></figure><p>案例验证<br>① 在交换机上使用【display port vlan】命令查看各端口的模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[SW1]display port vlan </span><br><span class="line">Port                    Link Type    PVID  Trunk VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Ethernet0/0/1           access       10    -                                   </span><br><span class="line">Ethernet0/0/2           access       20    -                                   </span><br><span class="line">Ethernet0/0/3           trunk        1     1  10 20</span><br><span class="line">Ethernet0/0/4           hybrid       1     -                                   </span><br><span class="line">Ethernet0/0/5           hybrid       1     -  </span><br><span class="line">---省略部分显示内容---                      </span><br></pre></td></tr></table></figure><p>② 配置IP地址后，测试连通性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;ping 192.168.1.2</span><br><span class="line">Ping 192.168.1.2: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.2: bytes=32 seq=1 ttl=128 time=63 ms</span><br><span class="line">---省略部分显示内容---</span><br><span class="line">PC&gt;ping 192.168.1.3</span><br><span class="line">Ping 192.168.1.3: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.1: Destination host unreachable</span><br><span class="line">---省略部分显示内容---</span><br><span class="line">PC&gt;ping 192.168.1.4</span><br><span class="line">Ping 192.168.1.4: 32 data bytes, Press Ctrl_C to break</span><br><span class="line">From 192.168.1.1: Destination host unreachable</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><p>在PC1上使用【ping】命令测试各PC的连通性；此时，财务部的PC可以跨交换机互相通信，与项目部的PC无法通信。</p><h1 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a>生成树协议</h1><h2 id="冗余性与STP"><a href="#冗余性与STP" class="headerlink" title="冗余性与STP"></a>冗余性与STP</h2><p><strong>STP的由来</strong><br>    为了解决冗余链路引起的问题，IEEE通过了IEEE 802.1d协议，即生成树协议（Spanning Tree Protocol,STP）。IEEE 802.1d协议通过在交换机上运行一套复杂的算法，使冗余端口置于“阻塞状态”，使得网络中的计算机在通信时只有一条链路生效，而当这个链路出现故障时，IEEE 802.1d协议将会重新计算出网络的最优链路，将处于“阻塞状态”的端口重新打开，从而确保网络连接稳定可靠。</p><p>在交换式网络中使用生成树协议可以将有环路的物理拓扑变成无环路的逻辑拓扑，为网络提供了安全机制，使冗余拓扑中不会产生交换环路问题。</p><p><strong>STP的术语</strong></p><p>桥（Bridge）<br>因为性能方面的限制等因素，早期的交换机一般只有两个转发端口，所以那时的交换机常常被称为“网桥”，或简称“桥”。在IEEE的术语中，“桥”这个术语一直沿用至今，但并不只是指只有两个转发端口的交换机了，而是泛指具有任意多个端口的交换机。<br>桥的MAC地址（Bridge MAC Address）<br>一个桥有多个转发端口，每个端口有一个MAC地址。通常，交换机会把端口编号最小的那个端口的MAC地址作为整个桥的MAC地址。</p><p>STP中定义了根交换机（Root Bridge）、根端口（Root Port）、指定端口（Designated Port）和路径开销（Path Cost）等概念，目的就在于通过构造一棵自然树的方法达到阻塞冗余环路的目的，同时实现链路备份和路径最优化。用于构造这棵树的算法称为生成树算法SPA（Spanning Tree Algorithm）。</p><p><strong>桥ID（Bridge Identifier，BID）</strong><br>一个桥（交换机）的桥ID由两部分组成，前面2字节是这个桥的桥优先级，后面6字节是这个桥的MAC地址。桥优先级的值可以手动设置，其默认值为0x8000（相当于十进制的32768）。</p><p><a href="https://imgtu.com/i/oX3J58"><img src="https://s4.ax1x.com/2021/12/13/oX3J58.png"></a></p><p><strong>端口ID（Port Identifier，PID）</strong><br>第一种：端口ID由两个字节组成，第一个字节是该端口的端口优先级，后一个字节是端口编号。<br>第二种：端口ID由16个比特组成，前4个比特是该端口的端口优先级，后12比特是该端口的端口编号。</p><p><a href="https://imgtu.com/i/oX3224"><img src="https://s4.ax1x.com/2021/12/13/oX3224.png"></a></p><p>端口优先级的值可以手动设定也可以有设备自动生成。通过自动生成端口ID时，不同设备商所采用的PID定义方法可能不同。</p><h2 id="STP的工作原理"><a href="#STP的工作原理" class="headerlink" title="STP的工作原理"></a>STP的工作原理</h2><p><strong>树的基本理论</strong><br>    在一个具有物理环路的交换网络中，交换机通过运行STP，自动生成一个没有环路的逻辑拓扑。该无环逻辑拓扑也称为STP树（STP Tree），树节点为某些特定的交换机，树枝为某些特定的链路。一棵STP树包含了唯一的一个根节点，任何一个节点到根节点的工作路径不但是唯一的，而且是最优的。当网络拓扑发生变化时，STP树也会自动地发生相应的改变。<br>    简而言之，有环的物理拓扑提高了网络连接的可靠性，而无环的逻辑拓扑避免了广播风暴、MAC地址表翻摆、多帧复制，这就是STP的精髓。</p><p><strong>生成树的生成过程</strong><br>①选举根桥（Root Bridge），作为整个网络的根。<br>②确定根端口（Root port，RP），确定非根交换机与根交换机链接最优的端口。<br>③确定指定端口（Designated Port，DP），确定每条链路与根桥连接最优的端口。<br>④阻塞备用端口（Alternate Port，AP），形成一个无环网络。</p><p>生成树协议是一个用于在局域网中消除环路的协议。运行该协议的交换机通过彼此交互信息而发现网络中的环路，并适当对某些端口进行阻塞以消除环路。</p><p>①选举根桥<br>a）交换机S1、S2、S3都使用了默认的桥优先级32768；<br>b）显然，S1的BID最小，所以最终S1将被选举为根桥。</p><p><a href="https://imgtu.com/i/oX8md0"><img src="https://s4.ax1x.com/2021/12/13/oX8md0.png"></a></p><hr><p><strong>tip：</strong></p><p>选举根桥<br>根桥是STP树的根节点。要生成一棵STP树，首先要确定出一个根桥。根桥是整个交换网络的逻辑中心，但不一定是它的物理中心。当网络的拓扑发生变化时，根桥也可能会发生变化。<br>运行STP的交换机（简称STP交换机）会相互交换STP协议帧，这些协议帧的载荷数据被称为BPDU（ Bridge Protocol Data Unit，网桥协议数据单元）。BPDU中包含了与STP相关的所有信息，其中包含了BID。<br>交换机间选举根桥主要由步骤如下。<br>①STP交换机初始启动之后，都会认为自己是根桥，并在发送给其他交换机的BPDU中宣告自己是根桥。<br>②当交换机从网络中收到其他设备发送过来的BPDU的时候，会比较BPDU中的根桥BID和自己的BID，较小的BID将作为根桥BID。<br>③交换机间通过不断地交互BPDU，同时对BID进行比较，直至最终选举出一台BID最小的交换机作为根桥。</p><hr><p>②确定根端口<br>比较根路径开销，较小的为根端口；<br>比较上行设备的BID，BID较小的端口为根端口；<br>比较发送方端口ID，较小的端口为根端口。</p><table><thead><tr><th><strong>端口速率</strong></th><th>路径开销（IEEE802.1t标准）</th></tr></thead><tbody><tr><td><strong>10Mbit/s</strong></td><td>2000000</td></tr><tr><td><strong>100Mbit/s</strong></td><td>200000</td></tr><tr><td><strong>1Gbit/s</strong></td><td>20000</td></tr><tr><td><strong>10Gbit/s</strong></td><td>2000</td></tr></tbody></table><p><a href="https://imgtu.com/i/oX86eI"><img src="https://s4.ax1x.com/2021/12/13/oX86eI.png"></a></p><hr><p><strong>tip：</strong></p><p>根桥确定后，其他没有成为根桥的交换机都被称为非根桥。一台非根交换机可能通过多个端口与根交换机通信，为了保证从非根交换机到根交换机的工作路径是最优且唯一的，就必须从非根交换机的端口中确定出一个被称为“根端口”的端口，由根端口作为非根交换机与根交换机设备之间进行报文交互。<br>假定S1已被选举为根桥，并且链路的路径开销遵从IEEE802.1t，现在，S3需要从自己的GE0/0/1端口和GE0/0/2端口中确定出根端口。显然，S3的GE0/0/1端口的RPC为20000；S3的GE0/0/2端口的RPC为200000+20000=220000。交换机会将RPC最小的那个端口确定为自己的根端口。因此，S3将会把GE0/0/1端口确定为自己的根端口。</p><hr><p>③确定指定端口<br>指定端口也是通过比较RPC来确定的，RPC较小的端口将成为指定端口。如果RPC相同，则需要比较BID、PID等。</p><p><a href="https://imgtu.com/i/oXGZ1e"><img src="https://s4.ax1x.com/2021/12/13/oXGZ1e.png"></a></p><p><a href="https://imgtu.com/i/oXGlAP"><img src="https://s4.ax1x.com/2021/12/13/oXGlAP.png"></a></p><hr><p><strong>tip:</strong></p><p>当一个网段有两条及两条以上的路径通往根交换机时，每个网段都必须确定一个端口为指定端口（每网段唯一）。<br>对于S3的GE0/0/2和S2的GE0/0/2之间的网段来说，S3的GE0/0/2端口的RPC是与S2的GE0/0/2端口的RPC相等的，所以需要比较S3的BID和S2的BID.假定S2的BID小于S3的BID，则S2的GE0/0/2端口将被确定为S3的GE0/0/2和S2的GE0/0/2之间的网段的指定端口。<br>对于网段LAN1来说，与之相连的交换机只有S2。在这种情况下，就需要比较S2的GE0/0/3端口的PID和GE0/0/4端口的PID.假定GE0/0/3端口的PID小于GE0/0/4端口的PID，则S2的GE0/0/3端口将被确定为网段LAN1的指定端口。<br>最后需要指出的是，根桥上不存在任何根端口，只存在指定端口。</p><hr><p>④阻塞备用端口<br>确定根端口和指定端口后，所有剩余端口称为备用端口。STP会对备用端口进行逻辑阻塞。<br>备用端口被逻辑阻塞后，STP树的生成过程便告完成。</p><p><a href="https://imgtu.com/i/oXOuKx"><img src="https://s4.ax1x.com/2021/12/13/oXOuKx.png"></a></p><h2 id="STP配置"><a href="#STP配置" class="headerlink" title="STP配置"></a>STP配置</h2><p>案例背景与要求<br>根据如右图所示网络拓扑，配置STP解决网络环路。<br>案例配置思路<br>配置STP模式。<br>指定根桥。<br>指定备份根桥（可选）。</p><p><a href="https://imgtu.com/i/ovK5O1"><img src="https://s4.ax1x.com/2021/12/14/ovK5O1.png"></a></p><p>案例配置过程<br>①配置交换机S1上生成树工作模式为STP；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname S1</span><br><span class="line">[S1]stp mode stp</span><br></pre></td></tr></table></figure><p>②配置S2上生成树工作模式为STP；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname S2</span><br><span class="line">[S2]stp mode stp</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>默认情况下，交换机是启用了STP功能的。如果STP处于关闭状态，需要首先在系统视图下使用【stp enable】命令来启用STP功能。<br>【stp mode{ mstp|rstp|stp}】命令用来配置设备STP的工作模式。工作模式分别为MSTP、RSTP、STP，默认模式为MSTP。</p><hr><p>③配置S3上生成树工作模式为STP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname S3</span><br><span class="line">[S3]stp mode stp</span><br></pre></td></tr></table></figure><p>④配置S4上生成树工作模式为STP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname S4</span><br><span class="line">[S4]stp mode stp</span><br></pre></td></tr></table></figure><p>⑤配置S1为根桥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[S1]stp root primary</span><br></pre></td></tr></table></figure><p>⑥配置S2为备份根桥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[S2]stp root secondary</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>虽然STP会自动选举出根桥，但通常情况下，会事先指定性能较好、距离网络中心较近的汇聚或核心交换机作为根桥。本例中的网络结构非常简单，假设S1和S2是核心交换机，S3和S4是接入交换机，管理员将通过修改Sl的桥优先级来保证S1被选举成为根桥。【stp priority priority】命令用来设置设备的桥优先级，“priority”的取值范围是0~65535，默认值是32768，该值要求设置为4096的倍数，如4096、8192等。另外，还有一种便捷的方法来指定S1为根桥，即通过【stp root primary】命令直接指定S1为根桥。设备上配置了此命令后，设备的桥优先级的值会被自动设为0，并且不能通过【stp priority priority】命令来更改该设备的桥优先级。<br>指定S2为备份根桥，可以在S1发生故障时接替S1成为新的根桥。在设备上执行【stp root secondary】命令后，设备的桥优先级的值会被自动设为4096，并且不能通过【stp priority priority】命令来进行修改。</p><hr><p>案例测试<br>①在S1上使用【display stp brief】命令，查看STP的简要信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[S1]display stp brief </span><br><span class="line"> MSTID  Port                        Role  STP State       Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br></pre></td></tr></table></figure><p>②在S4上查看STP的简要信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[S4]display stp brief </span><br><span class="line"> MSTID  Port                        Role  STP State       Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>STP基本配置结束后，等待STP收敛。收敛结束后可以使用【display stp [ interface interface-type interface- number][ brief]】命令来查看生成树的状态信息与统计信息。<br>由于SI是根桥，S1的端口GE0/0/2和GE0/0/1都成为了指定端口，并且均处于正常的转发状态。<br>S4的端口GE0/0/2被确定为根端口，处于正常的转发状态，但它的GE0/0/1端口被阻塞，成为了备用端口。</p><hr><h2 id="调节STP计时器参数"><a href="#调节STP计时器参数" class="headerlink" title="调节STP计时器参数"></a>调节STP计时器参数</h2><p>配置S1的BPDU Max Age为6s，Forward Delay Timer为4s。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[S1]stp timer max-age 600</span><br><span class="line">[S1]stp timer forward-delay 400</span><br></pre></td></tr></table></figure><p>配置S2的BPDU Max Age为6s，Forward Delay Timer为4s。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[S2]stp timer max-age 600</span><br><span class="line">[S2]stp timer forward-delay 400</span><br></pre></td></tr></table></figure><p>配置S3的BPDU Max Age为6s，Forward Delay Timer为4s。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[S3]stp timer max-age 600</span><br><span class="line">[S3]stp timer forward-delay 400</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>STP网络中，STP树的完全收敛需要依赖定时器的计时，端口状态从 Blocking迁移到 Forwarding至少需要两倍 Forward Delay的时间长度，总的收敛时间太长，一般需要几十秒的时间。为了加快STP的收敛，可以手动修改STP的计时器参数，影响STP收敛的计时器参数主要有Forward Delay Timer和BPDU Max Age。</p><hr><p>配置S4的BPDU Max Age为6s，Forward Delay Timer为4s。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[S4]stp timer max-age 600</span><br><span class="line">[S4]stp timer forward-delay 400</span><br></pre></td></tr></table></figure><p>在S1上使用【display stp】命令，查看STP的状态信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">S1]dis stp </span><br><span class="line">-------[CIST Global Info][Mode STP]-------</span><br><span class="line">CIST Bridge         :0    .4c1f-cc03-16b8</span><br><span class="line">Config Times        :Hello 1s MaxAge 6s FwDly 4s MaxHop 20</span><br><span class="line">Active Times        :Hello 1s MaxAge 6s FwDly 4s MaxHop 20</span><br><span class="line">CIST Root/ERPC      :0    .4c1f-cc03-16b8 / 0</span><br><span class="line">CIST RegRoot/IRPC   :0    .4c1f-cc03-16b8 / 0</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure><p>可以看到，S1的STP Max Age时间长度变成了6s，Forwarding Delay Timer变成了4s。</p><p>RSTP在STP的基础上，增加了两种端口角色：替代（Alternate）端口和备份（Backup）端口。因此，在RSTP中共有4种端口角色：根端口、指定端口、替代端口、备份端口。<br>如果设备的根端口发生故障，那么替代端口可以成为新的根端口，这加快了网络的收敛过程。</p><h1 id="快速生成树协议"><a href="#快速生成树协议" class="headerlink" title="快速生成树协议"></a>快速生成树协议</h1><h2 id="RSTP的特点"><a href="#RSTP的特点" class="headerlink" title="RSTP的特点"></a>RSTP的特点</h2><p><strong>RSTP的端口角色</strong><br><strong>替代端口：</strong>可以简单地理解为根端口的备份，它是非根交换机收到了其他设备发送的BPDU从而被阻塞的端口。</p><p><a href="https://imgtu.com/i/oj2Pdx"><img src="https://s4.ax1x.com/2021/12/14/oj2Pdx.png"></a></p><p>查看代替端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW3&gt;display stp brief</span><br><span class="line">MSTID     Port    RoleSTP State     Protection</span><br><span class="line">0GigabitEthernet0/0/22    ROOT  FORWARDING  NONE</span><br><span class="line">0 GigabitEthernet0/0/23     ALTE   DISCARDING   NONE</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>RSTP在STP的基础上，增加了两种端口角色：替代（Alternate）端口和备份（Backup）端口。因此，在RSTP中共有4种端口角色：根端口、指定端口、替代端口、备份端口。<br>如果设备的根端口发生故障，那么替代端口可以成为新的根端口，这加快了网络的收敛过程。</p><hr><p><strong>备份端口：</strong>是指交换机由于收到了自己所发送的BPDU从而被阻塞的端口。</p><p><a href="https://imgtu.com/i/oj2BkV"><img src="https://s4.ax1x.com/2021/12/14/oj2BkV.png"></a></p><p>查看备份端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW2&gt;display stp brief</span><br><span class="line">MSTID              Port RoleSTP StateProtection</span><br><span class="line"> 0GigabitEthernet0/0/24 ROOT  FORWARDING  NONE</span><br><span class="line"> 0 GigabitEthernet0/0/20  DESI   FORWARDING  NONE</span><br><span class="line"> 0GigabitEthernet0/0/22 BACK  DISCARDING  NONE</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><strong>tip：</strong></p><p>如果一台交换机拥有多个端口接入同一个网段，并且在这些端口中有一个被选举为该网段的指定端口，那么这些端口中的其他端口将被选举为备份端口，备份端口将作为该网段到达根桥的冗余端口。通常情况下，备份端口处于丢弃状态。<br>交换机SW1是网络中的根桥，对于交换机SW2而言，GE0/0/20及GE0/0/21端口形成了环路，RSTP能够检测到这个环路，并且在两个端口中选择一个进行阻塞。默认时，由于GE0/0/20端口的端口ID更小，因此该端口成为指定端口，而GE0/0/21端口则成为备份端口，备份端口将被阻塞。</p><hr><p><strong>RSTP的端口状态</strong><br>丢弃（Discarding）<br>学习（Learning）<br>转发（Forwarding）<br><strong>RSTP 的BPDU报文</strong><br>报文格式</p><table><thead><tr><th>TCA<br/>(1bit)</th><th>Agreement<br/>(1bit)</th><th>Forwarding<br/>(1bit)</th><th>Learning<br/>(1bit)</th><th>Port Role<br/>(2bit)</th><th>Proposal<br/>(1bit)</th><th>TC<br/>(1bit)</th></tr></thead></table><hr><p><strong>tip:</strong></p><p>在RSTP中则简化了端口状态，将STP的禁用、阻塞以及侦听状态简化为丢弃（Discarding），学习（Learning）和转发（Forwarding）状态则保留了下来。<br>如果端口不转发用户流量也不学习MAC地址，那么端口状态就是Discarding状态。如果端口不转发用户流量但是学习MAC地址，那么端口状态就是Learning状态。如果端口既转发用户流量又学习MAC地址，那么端口状态就是Forwarding状态。<br>格式与STP的配置BPDU大体相同，只是其中个别字段做了修改，以便适应新的工作机制和特性。对于RST BPDU来说，“协议版本ID”字段的值为0x02，“BPDU类型”字段的值也为0x02。最重要的变化体现在“标志”字段中，该字段一共8bit，STP只使用了其中的最低比特位和最高比特位，而RSTP在STP的基础上，使用了剩余的6bit，并且分别对这些比特位进行了定义</p><hr><p><strong>边缘端口</strong><br>作用：为了节省端口从初始启动到转发状态的时间间隔。<br>特点<br>默认不参与生成树计算，不用经历转发延迟；<br>边缘端口的关闭或激活并不会触发RSTP拓扑变更。<br>配置边缘端口</p><p><a href="https://imgtu.com/i/ovPaRK"><img src="https://s4.ax1x.com/2021/12/14/ovPaRK.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interface GigabitEthernet 0/0/1</span><br><span class="line">[SW2-GigabitEthernet 0/0/1]stp edged-port enable</span><br><span class="line">[SW2]interface GigabitEthernet 0/0/2</span><br><span class="line">[SW2-GigabitEthernet 0/0/2]stp edged-port enable</span><br><span class="line">[SW2]interface GigabitEthernet 0/0/3</span><br><span class="line">[SW2-GigabitEthernet 0/0/3]stp edged-port enable</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>运行了STP的交换机，其端口在初始启动之后，首先会进入阻塞状态，如果该端口被选举为根端口或指定端口，那么它还需经历侦听及学习状态，最终才能进入转发状态，也就是说，一个端口从初始启动之后到进入转发状态至少需要耗费约30秒的时间。对于交换机上连接到交换网络的端口而言，经历上述过程是必要的，毕竟该端口存在产生环路的风险，然而有些端口引发环路的风险是非常低的，例如交换机连接终端设备（PC或服务器等）的端口，这些端口如果启动之后依然要经历上述过程那就太低效了，而且用户希望PC接入交换机后能立即连接到网络，而不是还需要等待一段时间。</p><hr><p><strong>P/A 机制</strong><br>定义：全称为Proposal/Agreement（提议/同意）机制，它是交换机之间的一种握手机制；<br>功能：保证一个指定端口能够从丢弃状态快速进入转发状态，从而加快生成树的收敛。</p><p><a href="https://imgtu.com/i/ovP6II"><img src="https://s4.ax1x.com/2021/12/14/ovP6II.png"></a></p><p>快速收敛过程：网络中运行的是RSTP，当交换机SW1与SW2之间新增了一条链路后，生成树收敛过程包括6步。<br>① 交换机SW1及SW2立即在各自的端口上发送BPDU，初始时双方都认为自己是根桥。</p><p><a href="https://imgtu.com/i/ovPoZj"><img src="https://s4.ax1x.com/2021/12/14/ovPoZj.png"></a></p><p>② 经过BPDU交互后，交换机SW2将认为交换机SW1才是当前的根桥，此时交换机SW1的GE0/0/1端口是指定端口，而交换机SW2的GE0/0/2端口则成为根端口，该端口将立即停止发送BPDU。这两个端口当前都处于丢弃状态。</p><p>③ P/A过程将在交换机SW1与SW2之间发生。由于交换机SW1的GE0/0/1端口为指定端口且处于丢弃状态，因此交换机SW1从GE0/0/1端口发送Proposal置位的BPDU 。</p><p><a href="https://imgtu.com/i/ovPLWV"><img src="https://s4.ax1x.com/2021/12/14/ovPLWV.png"></a></p><p>④ 交换机SW2收到Proposal置位的BPDU后，立即启动一个同步过程。</p><p>⑤ 交换机SW2的所有端口均已完成了同步，交换机SW2清楚地知道本地的端口不存在环路，它立即将根端口GE0/0/2切换到转发状态，并从该端口向交换机SW1发送Agreement置位的BPDU。</p><p><a href="https://imgtu.com/i/ovipw9"><img src="https://s4.ax1x.com/2021/12/14/ovipw9.png"></a></p><p>⑥ 交换机SW1在GE0/0/1端口上收到Agreement置位的BPDU后，立即将该端口切换到转发状态，此时PC2与PC1便可以实现通信了。</p><p><strong>RSTP的保护功能</strong><br>BPDU保护：避免网络中的RSTP重计算，防止二层环路和BPDU攻击。<br>在交换机上配置BPDU保护<br>①实验拓扑如右图<br>②配置BPDU保护</p><p><a href="https://imgtu.com/i/oviZOe"><img src="https://s4.ax1x.com/2021/12/14/oviZOe.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[SW2]interfacce GigabitEthernet 0/0/1</span><br><span class="line">[SW2-GigabitEthernet 0/0/1]stp edged-port enable</span><br><span class="line">[SW2]interfacce GigabitEthernet 0/0/2</span><br><span class="line">[SW2-GigabitEthernet 0/0/2]stp edged-port enable</span><br><span class="line">[SW2]interface GigabitEthernet 0/0/3</span><br><span class="line">[SW2-GigabitEthernet 0/0/3]stp edged-port enable</span><br><span class="line">[SW2]stp bpdu-protection</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>由于人为疏忽，边缘端口也可能会被误接交换设备，一旦交换设备连接到边缘端口，那么便引入了环路隐患。因此如果边缘端口连接了交换设备并且收到了BPDU，则该端口立即变成一个普通的生成树端口，在这个过程中可能引发网络中的RSTP重计算，从而对网络造成影响。这种疏忽同时也引入了二层环路的隐患。另外，如果攻击者连接到了边缘端口，并针对该端口发起BPDU攻击，也将对网络造成极大影响。在华为交换机上，可以通过在交换机上激活BPDU保护（BPDU Protection）功能解决上述问题。当交换机激活该功能后，如果边缘端口收到BPDU，则交换机会立即把端口关闭（置为Error-Down），同时触发告警。在交换机的系统视图下执行【stp bpdu protection】命令，可以在所有边缘端口上激活BPDU保护功能。</p><hr><p>③查看BPDU保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW2&gt;display stp brief</span><br><span class="line">MSTID     PortRole       STP StateProtection</span><br><span class="line"> 0    GigabitEthernet0/0/1DESI  FORWARDING  BPDU</span><br><span class="line"> 0     GigabitEthernet0/0/2 DESI   FORWARDING  BPDU</span><br><span class="line"> 0    GigabitEthernet0/0/3DESI  DISCARDING  BPDU</span><br><span class="line"> 0         GigabitEthernet0/0/24ROOT  DISCARDING  NONE</span><br></pre></td></tr></table></figure><p>④验证BPDU保护功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Jan  4 2020 18:33:00-08:00 SW2 %%01MSTP/4/BPDU_PROTECTION(l)[60]:This edged-port</span><br><span class="line"> GigabitEthernet0/0/1 that enabled BPDU-Protection will be shutdown, because it received BPDU packet!</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>从上面可以看出由于GE0/0/1、GE0/0/2及GE0/0/3都被配置为边缘端口，因此这些端口都将激活BPDU保护功能（Protection列显示为BPDU），而GE0/0/24并非边缘端口，因此不会激活BPDU保护功能。<br>当交换机SW2的GE0/0/1端口收到了BPDU，交换机将立即产生如下告警信息，并将GE0/0/1端口关闭。</p><hr><p>根保护：避免RSTP重新计算，防止根桥被抢占，保护根桥。<br>配置过程<br>①拓扑结构</p><p><a href="https://imgtu.com/i/oviI1K"><img src="https://s4.ax1x.com/2021/12/14/oviI1K.png"></a></p><p>②在端口上配置根保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface GigabitEthernet 0/0/20</span><br><span class="line">[SW1-GigabitEthernet0/0/20]stp root-protection</span><br></pre></td></tr></table></figure><p>③查看端口RSTP的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW1&gt;display stp brief</span><br><span class="line">MSTIDPortRole  STP State  Protection</span><br><span class="line"> 0GigabitEthermet0/0/20  DESI  FORWARDING  ROOT</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>对于一个部署了RSTP的交换网络来说，根桥的地位是至关重要的，毕竟RSTP所计算出的无环拓扑与根桥是息息相关的。在一个RSTP已经完成收敛的网络中，如果根桥发生变化，那么势必导致RSTP重新计算，此时该网络所承载的业务流量必将受到影响。<br>值得注意的是，根保护功能只有在指定端口上激活才会有效。当激活了根保护功能的指定端口收到更优的BPDU时，它将忽略这些BPDU，并立即将端口切换到丢弃状态。如果端口不再收到更优的BPDU，则一段时间后（通常为两倍的转发延迟时间），它将会自动恢复到转发状态。</p><hr><p><strong>环路保护</strong><br>①在根端口上激活环路保护功能。<br>在SW3的GE0/0/22端口上激活环路保护功能。</p><p><a href="https://imgtu.com/i/ovFANn"><img src="https://s4.ax1x.com/2021/12/14/ovFANn.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW3]interface GigabitEthernet 0/0/22</span><br><span class="line">[SW3-GigabitEthernet0/0/23]stp loop-protection</span><br></pre></td></tr></table></figure><p>查看STP端口状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW3&gt;display stp brief</span><br><span class="line">MSTID        PortRoleSTP StateProtection</span><br><span class="line"> 0GigabitEthernet0/0/22       ROOT         FORWARDING     LOOP  </span><br><span class="line"> 0 GigabitEthernet0/0/23 ALTE   DISCARDING      NONE</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>在网络正常时，这些端口将持续收到BPDU，而当网络中出现链路单向故障或者网络拥塞等问题时，这些端口将无法正常地接收BPDU，这便会导致交换机进行RSTP重计算，此时端口的角色及状态便会发生改变，这就有可能在网络中引入环路。<br>当网络完成收敛后，交换机SW3的GE0/0/22端口将成为根端口并处于转发状态，而GE0/0/23端口则被选举为替代端口并处于丢弃状态。此时可以使用如下命令在交换机SW3的GE0/0/22端口上激活环路保护功能。</p><hr><p>②在替代端口上激活了环路保护功能。<br>在SW3的GE0/0/23端口上激活环路保护功能。</p><p><a href="https://imgtu.com/i/ovFdDe"><img src="https://s4.ax1x.com/2021/12/14/ovFdDe.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW3]interface GigabitEthernet 0/0/23</span><br><span class="line">[SW3-GigabitEthernet0/0/23]stp loop-protection</span><br></pre></td></tr></table></figure><p>查看STP端口状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;SW3&gt;display stp brief</span><br><span class="line">MSTID Port              Role          STP StateProtection</span><br><span class="line"> 0GigabitEthernet0/0/22       ROOT       FORWARDING    LOOP</span><br><span class="line"> 0 GigabitEthernet0/0/23       ALTE        DISCARDING     LOOP</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>在替代端口上激活了环路保护功能后，如果该端口长时间没有收到BPDU，那么交换机会将该端口的角色调整为指定端口，但是将其状态保持在丢弃状态，从而避免环路的出现。<br>如果交换机SW3的GE0/0/23端口长时间没有收到BPDU，交换机会将该端口调整为指定端口，但是不会将其切换到转发状态，而是保持在丢弃状态，从而避免环路的出现。</p><hr><p>拓扑变更保护<br>①激活拓扑变更保护功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW]stp tc-protection</span><br></pre></td></tr></table></figure><p>②修改拓扑变更保护功能默认单位时间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW]stp tc-protection interval interval-value</span><br></pre></td></tr></table></figure><p>③修改拓扑变更保护的默认单位时间内处理TC BPDU次数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW]stp tc-protection threshold value</span><br></pre></td></tr></table></figure><hr><p><strong>tip:</strong></p><p>一个稳定的交换网络是不会频繁地出现拓扑变更的，一旦网络拓扑出现变更，TC BPDU（此处指的是TC比特置位的BPDU）将会被泛洪到全网，而这些TC BPDU将会触发网络中的交换机执行MAC地址表删除操作。设想一下，如果网络环境极端不稳定导致TC BPDU频繁地泛洪，又或者网络中存在攻击者发送大量的TC BPDU对网络进行攻击，那么交换机的性能将受到极大损耗。</p><hr><h2 id="RSTP的基本配置与验证"><a href="#RSTP的基本配置与验证" class="headerlink" title="RSTP的基本配置与验证"></a>RSTP的基本配置与验证</h2><p>RSTP的基本配置与验证<br>案例背景与要求<br>    在交换机SW1、SW2、SW3、SW4上部署RSTP。要求完成配置后交换机SW4的GE0/0/20端口被阻塞，配置完成后在交换机SW4上查看STP端口状态和GE0/0/20的端口详细信息进行验证。</p><p><a href="https://imgtu.com/i/ovEnjf"><img src="https://s4.ax1x.com/2021/12/14/ovEnjf.png"></a></p><p>案例配置过程<br>配置交换机SW1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW1</span><br><span class="line">[SW1]stp mode rstp</span><br><span class="line">[SW1]stp root primary</span><br></pre></td></tr></table></figure><p>配置交换机SW2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW2</span><br><span class="line">[SW2]stp mode rstp</span><br><span class="line">[SW2]stp root secondary</span><br></pre></td></tr></table></figure><p>配置交换机SW3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW3</span><br><span class="line">[SW3]stp mode rstp</span><br></pre></td></tr></table></figure><p>配置交换机SW4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view</span><br><span class="line">[Huawei]sysname SW4</span><br><span class="line">[SW4]stp mode rstp</span><br><span class="line">[SW4]interface GigabitEthernet 0/0/20</span><br><span class="line">[SW4-GigabitEthernet0/0/20]stp cost 100000</span><br></pre></td></tr></table></figure><p>案例验证<br>查看交换机SW4的STP端口状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW4]display stp brief</span><br><span class="line">MSTID PortRoleSTP State    Protection</span><br><span class="line"> 0GigabitEthernet0/0/20       ALTE         DISCARDING    NONE</span><br><span class="line"> 0 GigabitEthernet0/0/24 ROOT   FORWARDING    NONE</span><br></pre></td></tr></table></figure><p>查看交换机SW4的GE0/0/20的端口详细信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[SW4]display stp interface GigabitEthernet 0/0/20</span><br><span class="line">-------[CIST Global Info][Mode RSTP]-------</span><br><span class="line">CIST Bridge         :32768.4c1f-cc3e-291d</span><br><span class="line">---省略部分显示内容---</span><br><span class="line">CIST RootPortId     :128.24</span><br><span class="line">BPDU-Protection     :Disabled</span><br><span class="line">TC or TCN received  :33</span><br><span class="line">TC count per hello  :0</span><br><span class="line">STP Converge Mode   :Normal </span><br><span class="line">Time since last TC  :0 days 0h:0m:42s</span><br><span class="line">Number of TC        :12</span><br><span class="line">Last TC occurred    :GigabitEthernet0/0/24</span><br><span class="line">----[Port20(GigabitEthernet0/0/20)][DISCARDING]----</span><br><span class="line">---省略部分显示内容---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.华为1+X/TCP&amp;IP</title>
      <link href="2021/12/11/%E5%8D%8E%E4%B8%BA1+X/1.%E5%8D%8E%E4%B8%BA1+X-TCP&amp;IP/"/>
      <url>2021/12/11/%E5%8D%8E%E4%B8%BA1+X/1.%E5%8D%8E%E4%B8%BA1+X-TCP&amp;IP/</url>
      
        <content type="html"><![CDATA[<p>华为1+X/TCP&amp;IP</p><h1 id="通信与网络"><a href="#通信与网络" class="headerlink" title="通信与网络"></a>通信与网络</h1><h2 id="通信的基本概念"><a href="#通信的基本概念" class="headerlink" title="通信的基本概念"></a>通信的基本概念</h2><h3 id="什么是通信"><a href="#什么是通信" class="headerlink" title="什么是通信"></a>什么是通信</h3><p>“通信”一词中，“通”的意思就是传递与交流；“信”的意思就是信息。所谓通信，就是指人与人、人与计算机、计算机与计算机之间通过某种媒介和行为进行的信息交换。通信技术的最终目的是为了帮助人们更好地沟通和资源共享。</p><h3 id="通信系统的基本组成"><a href="#通信系统的基本组成" class="headerlink" title="通信系统的基本组成"></a>通信系统的基本组成</h3><p><a href="https://imgtu.com/i/oqwnBj"><img src="https://s4.ax1x.com/2021/12/12/oqwnBj.png" alt="通信系统的基本组成"></a></p><hr><p><strong>tip：</strong></p><p>信源：又称信息源，分为模拟信源和数字信源，信源就是信息的发送端，是发出待传送信息的人或设备。在通信系统中信源即产生和发送信号的设备或计算机，如话筒。<br>发送设备：产生适合在信道中传输的信号。<br>信道：也称为信息传输的通道，分为有线和无线信道，也可分为模拟信道和数字信号。其中，传输模拟信号的物理信道叫做模拟信道，而传输数字信号的物理信道称为数字信道。是连接发送端和接收端设备的物理媒介。<br>噪声源：是分布在通信系统中的各种噪声。<br>接收设备：是从接收信号中恢复原始的电信号。<br>信宿：即信息的接收端，是接收所传送信息的人或设备。通信过程中接收和处理</p><hr><h2 id="数据通信网络典型组网模型"><a href="#数据通信网络典型组网模型" class="headerlink" title="数据通信网络典型组网模型"></a>数据通信网络典型组网模型</h2><h3 id="通信网络最常用的3种典型组网模型介绍"><a href="#通信网络最常用的3种典型组网模型介绍" class="headerlink" title="通信网络最常用的3种典型组网模型介绍"></a>通信网络最常用的3种典型组网模型介绍</h3><p><strong>两台主机之间的通信</strong><br>示例：两台计算机通过一根网线相连，便组成了一个最简单的网络。如果主机A想从主机B那里获得“B.MP4”这首歌曲，那该怎么办呢？很简单，让两台计算机运行相应的文件传输软件并点几下鼠标就实现了。<br><a href="https://imgtu.com/i/oqwwU1"><img src="https://s4.ax1x.com/2021/12/12/oqwwU1.png" alt="两台主机之间的通信"></a></p><p><strong>多台主机之间的通信</strong><br>示例：如图所示的网络模型稍微复杂些，它由一台路由器和多台计算机组成。在这样的网络模型中，通过借助路由器的转发作用，每两台计算机之间都可以自由地传递文件。<br><a href="https://imgtu.com/i/oqw2bd"><img src="https://s4.ax1x.com/2021/12/12/oqw2bd.png" alt="多台主机之间的通信"></a></p><p><strong>访问Internet的通信</strong><br>示例：当主机A希望从某个网址获取文件时，A必须先接入Internet，然后才能下载所需的文件。<br><a href="https://imgtu.com/i/oqwqbj"><img src="https://s4.ax1x.com/2021/12/12/oqwqbj.png" alt="通过Internet的通信"></a></p><hr><p><strong>tip:</strong></p><p>Internet 的中文译名有很多，如因特网、互联网、网际网等。Internet是目前世界上规模最大的计算机网络，其前身是诞生于1969年的ARPAnet（Advanced Research Projects Agency Network）。Internet 的广泛普及和应用是当今信息时代的标志性内容之一。</p><hr><h2 id="网络通信常见术语"><a href="#网络通信常见术语" class="headerlink" title="网络通信常见术语"></a>网络通信常见术语</h2><table><thead><tr><th>术语</th><th>解释和说明</th></tr></thead><tbody><tr><td>数据载荷</td><td>根据快递服务的比喻，我们将数据载荷理解为最终想要传递的信息。而实际上在具有层次化结构的网络通信过程中，上一层协议传递给下一层协议的数据单元（报文）都可以称之为下一层协议的数据载荷</td></tr><tr><td>报文</td><td>报文是网络中交换与传输的数据单元，它具有一定的内在格式，并通常都具有头部+数据载荷+尾部的基本结构。在传输过程中，报文的格式和内容可能会发生改变</td></tr><tr><td>头部</td><td>为了更好地传递信息，在组装报文时，在数据载荷的前面添加的信息段统称为报文的头部</td></tr><tr><td>尾部</td><td>为了更好地传递信息，在组装报文时，在数据载荷的后面添加的信息段统称为报文的尾部。注意，很多报文是没有尾部的</td></tr><tr><td>封装</td><td>对数据载荷添加头部和尾部，从而形成新的报文的过程</td></tr><tr><td>解封装</td><td>解封装是封装的逆过程，也就是去掉报文的头部和尾部，获取数据载荷的过程</td></tr><tr><td>网关</td><td>网关是在采用不同体系结构或协议的网络之间进行互通时，用于提供协议转换、路由选择、数据交换等功能的网络设备。网关是一种根据其部署位置和功能而命名的术语，而不是一种特定的设备类型</td></tr><tr><td>路由器</td><td>路由器是连接不同网络的主要节点设备，通过路由功能为报文选择传递路径，能够识别不同的网络协议，在网络中通常起网关的作用。</td></tr></tbody></table><h1 id="OSI与TCP-IP参考模型"><a href="#OSI与TCP-IP参考模型" class="headerlink" title="OSI与TCP/IP参考模型"></a>OSI与TCP/IP参考模型</h1><h2 id="网络通信协议和标准机构"><a href="#网络通信协议和标准机构" class="headerlink" title="网络通信协议和标准机构"></a>网络通信协议和标准机构</h2><h3 id="网络通信协议的基本特性"><a href="#网络通信协议的基本特性" class="headerlink" title="网络通信协议的基本特性"></a>网络通信协议的基本特性</h3><p><strong>什么是协议？</strong><br>在网络通信中，所谓协议，就是指诸如计算机、交换机、路由器等网络设备为了实现通信而必须遵从的、事先定义好的一系列规则和约定。<br><a href="https://imgtu.com/i/oqL0o9"><img src="https://s4.ax1x.com/2021/12/12/oqL0o9.png"></a></p><hr><p><strong>tip:</strong></p><p>OSI参考模型和TCP/IP参考模型是计算机网络通信领域中使用频率最高的两个参考模型，特别是TCP/IP，在计算机网络通信中的地位至关重要。熟悉OSI模型和TCP/IP参考模型的相关概念和简单应用，对于我们接下来具体而深入地学习各种网络通信知识，具有非常重要的指导作用。</p><hr><p><strong>协议的三要素</strong><br>语义：需要发出何种控制信息，完成何种动作以及做出何种应答；<br>语法：数据与控制信息的格式、数据编码等；<br>时序：时间先后顺序和速度匹配。</p><p><a href="https://imgtu.com/i/oqL7SP"><img src="https://s4.ax1x.com/2021/12/12/oqL7SP.png" alt="协议三要素"></a></p><hr><p><strong>tip:</strong></p><p>以打电话为例来说明“语义”“语法”“时序”。假设甲要打电话给乙，首先甲拨通乙的电话号码，双方电话振铃，乙拿起电话，然后甲乙开始通话，通话完毕后，双方挂断电话。在此过程中，双方都遵守了打电话的协议。其中，甲拨通乙的电话后，乙的电话振铃，振铃是一个信号，表示有电话打进，乙选择接电话，讲话，这一系列动作包括了控制信号、响应动作、讲话内容等，就是“语义”；电话号码就是“语法”；“时序”的概念更好理解，甲拨打了电话，乙的电话才会响，乙听到铃声后才会考虑要不要接，这一系列时间的因果关系十分明确，不可能没人拨电话，乙的电话会响。</p><hr><p><strong>协议标准机构</strong></p><table><thead><tr><th>标准机构</th><th>简要介绍</th></tr></thead><tbody><tr><td>国际标准化组织（International Organization for Standardization，ISO）</td><td>IS0是世界上最大的非政府性标准化专门机构，是国际标准化领域中一个十分重要的组织,ISO的任务是促进全球范围内的标准化及相关活动，以利于国际间产品与服务的交流，以及在知识、科学技术和经济活动发展国际间的相互合作</td></tr><tr><td>电气与电子工程师协会（Institute of Electrical and Electronics Engineers，IEEE）</td><td>IEEE是一个电子技术与信息科学工程师的协会，是世界上最大的专业技术组织之一，IEEE成立的目的在于为电气电子方面的科学家,工程师,制造商提供国际联络交流的场合，并为他们提供专业教育、提高专业能力服务，著名的以太网标准就是来自IEEE</td></tr><tr><td>国际互联网工程任务组(Internet Engineering Task Force，IETF)</td><td>IETF是全球互联网最具权或的技术标准化组织。其主要任务是负责互联网相关技术规范的研发和制定,目前,绝大多数的互联网技术标准都是来自IETF，如著名的RFC（Request For Comments）标准</td></tr><tr><td>电子工业联盟（Electronics Industry Alliance，EIA）</td><td>EIA 是美国电子行业标准制定者之一,常见RS-232 串口标准便是EIA制定的</td></tr><tr><td>国际电信联盟（International Telecommunication Union，ITU）</td><td>ITU简称为“国际电联”，其组织结构主要分为电信标准化部门（ITU-T）、无线电通信部门（ITU-R）和电信发展部门（ITU-D），是主管信息通信技术事务的联合国机构</td></tr><tr><td>国际电工委员会（International Electrotechnical Commission，IEC）</td><td>IEC是世界上成立最早的国际性电工标准化机构，负责有关电气工程和电子工程领域中的国际标准化工作，与ISO和IEEE等合作紧密</td></tr></tbody></table><hr><p><strong>tip:</strong></p><p>协议可以分为私有协议和开放性的公有协议。而专门整理、研究、制定和发布开放性标准协议的组织称为标准机构。</p><hr><p><strong>协议分层模型的优势</strong><br>实现协议标准化：每一层有特定的功能，各层自主管理，更容易制定出相应的协议或标准；<br>降低关联性，某一层协议的增减或更新,都不影响其他层协议的运行，实现各层协议的独立性；<br>边界清晰，易理解：协议分层模型让整个计算机网络的层次性更加清晰，容易掌握。</p><h2 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h2><p>不同节点的同等层具有相同的功能；<br>同节点内相邻层之间通过接口通信；<br>使用下层提供的服务，为上层提供服务；<br>仅在最低层进行直接数据传送。</p><p><a href="https://imgtu.com/i/oqOiOU"><img src="https://s4.ax1x.com/2021/12/12/oqOiOU.png" alt="OSI参考模型"></a></p><hr><p><strong>tip:</strong></p><p>OSI的网络体系结构如图所示。当发送方主机A的应用进程数据到达OSI参考模型的应用层时，网络中的数据将沿着垂直方向往下层传输，即由应用层向下经表示层、会话层一直到达物理层。到达物理层后，再经传输介质传到接收端（主机B），由接收端物理层接收，向上经数据链路层等到达应用层，再由接收端获取。数据在由发送进程交给应用层时，由应用层加上该层有关控制和识别信息，再向下传送，这一过程一直重复到物理层。在接收端信息向上传递时，各层的有关控制和识别信息被逐层剥去，最后数据送到接收进程。</p><hr><p><strong>OSI参考模型各层的功能及关系</strong></p><table><thead><tr><th align="center">OSI参考模型</th><th align="center">主要功能</th></tr></thead><tbody><tr><td align="center">物理层</td><td align="center">提供适合于传输介质承载的物理信号的转换，实现物理信号的发送，接受，以及在物理传输介质上的数据比特流传输</td></tr><tr><td align="center">数据链路层</td><td align="center">在物理链路连接的相邻节点间建立逻辑通路,实现数据帧的点到点、点到多点方式的直接通信，能够进行编码和差错控制</td></tr><tr><td align="center">网络层</td><td align="center">将数据分为一定长度的分组，根据数据报文中的地址信息，在通信子网中选择传输路径，将数据从一个节点发送到另一个节点</td></tr><tr><td align="center">传输层</td><td align="center">建立、维护和终止端到端的数据传输过程，能提供控制传输速率，调整数据的传输顺序等功能</td></tr><tr><td align="center">会话层</td><td align="center">在通信双方的进程间建立、维持、协调和终止会话，确定双方是否开始一方发起的通信</td></tr><tr><td align="center">表示层</td><td align="center">数据转换、加密、压缩等，确保一个系统生成的应用层数据能够被另外一个系统的应用层所识别和理解</td></tr><tr><td align="center">应用层</td><td align="center">为用户应用程序提供丰富的系统接口</td></tr></tbody></table><hr><p><strong>tip:</strong></p><p><strong>物理层（Physical Layer）</strong>提供建立、维护和拆除物理链路所需的机械、电气、功能和规程的特性；提供有关在传输介质上传输非结构的位流及物理链路故障检测指示。在这一层，数据还没有被组织，仅作为原始的位流或电气电压处理，单位是比特。</p><p><strong>数据链路层（Data Link Layer）</strong>负责在两个相邻结点间建立数据链路连接，实现无差错地传送以帧为单位的数据，并进行流量控制。数据链路层要负责建立、维持和释放数据链路的连接，在传送数据时，如果接收点检测到所传数据中有差错，会通知发送方重新发送。</p><p><strong>网络层（Network Layer）</strong>主要为数据在节点之间传输创建逻辑链路，通过路由选择算法为数据包选择最佳路径，从而实现拥塞控制、网络互联等功能。</p><p>网络层提供的服务有面向联接和面向无联接的服务两种。面向联接的服务是可靠的联接服务，是数据在交换之前必须先建立联接，然后传输数据，结束后终止之前建立联接的服务。网络层以虚电路服务的方式实现面向联接的服务。面向无联接的服务是一种不可靠的服务，不能防止报文的丢失、重发或失序。面向无联接的服务优点在于其服务方式灵活方便，并且非常迅速。网络层以数据报服务的方式实现面向无联接的服务。</p><p><strong>传输层（Transport Layer）</strong>主要为用户提供端到端服务，处理数据报错误、数据包次序等传输问题。传输层是计算机通信体系结构中关键一层，它向高层屏蔽了下层数据的通信细节，使用户完全不用考虑物理层、数据链路层和网络层工作的详细情况。</p><p><strong>会话层（Session Layer）</strong>为表示层提供建立、维护和拆除会话连接的功能，提供会话管理服务。它可以通过对话控制来决定使用何种通信方式，如全双工通信或半双工通信。</p><p>由于不同厂家的计算机产品常使用不同的信息表示标准，例如在字符编码、数值表示等方面存在着差异。如果不解决信息表示上的差异，通信的用户之间就不能互相识别。因此，<strong>表示层（Presentation Layer）</strong>要完成信息表示格式转换。转换可以在发送前，也可以在接收后，也可以要求双方都转换为某个特定标准的数据表示格式。</p><p>表示层为应用层提供能解释所交换信息含义的一组服务，主要功能是完成传输数据的解释工作，包括数据转换、数据加解密和数据压缩等。</p><p><strong>应用层（Application Layer）</strong>是用户应用程序与网络的接口，应用层和应用程序协同工作，直接向用户提供服务，完成用户希望在网络上完成的各种工作，如DNS、FTP、HTTP等服务。</p><hr><h2 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP/IP参考模型"></a>TCP/IP参考模型</h2><p><strong>TCP/IP的四层结构</strong></p><p>TCP/IP四层与OSI七层的对比</p><p><a href="https://imgtu.com/i/oqOJkd"><img src="https://s4.ax1x.com/2021/12/12/oqOJkd.png" alt="TCP/IP四层与OSI七层的对比"></a></p><hr><p><strong>tip:</strong></p><p>在计算机网络通信中，OSI参考模型只是作为理论研究的模型，并没有实际应用。而实际上应用最为广泛的是TCP/IP（Transmission Control Protocol/Internet Protocol）参考模型。TCP/IP是网络互联的标准协议，连入Internet的计算机进行的信息交换和传输都需要采用该协议。</p><hr><p><strong>TCP/IP各层的功能及关系</strong></p><table><thead><tr><th>TCP/IP参考模型</th><th>主要功能</th></tr></thead><tbody><tr><td>网络接口层</td><td>定义了TCP/IP与各种通信子网之间的网络接口。网络接口层的功能是传输经网络层处理过的消息。</td></tr><tr><td>网络层</td><td>将数据分为一定长度的分组，根据数据报文中的地址信息，在通信子网中选择传输路径，将数据从一个节点发送到另一个节点</td></tr><tr><td>传输层</td><td>建立、维护和终止端到端的数据传输过程，能提供控制传输速率，调整数据的传输顺序等功能</td></tr><tr><td>应用层</td><td>TCP/IP的应用层直接为用户提供各类服务。TCP/IP将所有与应用相关的工作都归为这一层。如远程登录、文件传输、电子邮件、Web服务器等。</td></tr></tbody></table><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p>数据链路层功能：<br>负责建立和管理节点间的链路；<br>通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。 </p><p><a href="https://imgtu.com/i/oqOBnS"><img src="https://s4.ax1x.com/2021/12/12/oqOBnS.png"></a></p><hr><p><strong>tip:</strong></p><p>在网络中由于各种干扰的存在，物理链路是不可靠的。因此，数据链路层将在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。</p><hr><h2 id="LLC与MAC"><a href="#LLC与MAC" class="headerlink" title="LLC与MAC"></a>LLC与MAC</h2><p><strong>逻辑链路控制子层LLC</strong><br>定义：LLC是Logic Link Control的缩写，是数据链路层的上层部分。</p><p>功能：LLC可为网络用户提供两种服务：无确认无连接服务和面向连接的服务。</p><p>无确认无连接服务：它提供无需建立数据链路级连接而网络层实体能交换链路服务数据单元的手段。数据传送方式可以是点到点、点到多点式，也可以是广播式。这是一种数据报服务。</p><p>面向连接的服务：在这种服务方式下，必须先建立链路连接，才能进行帧的传送。它提供了建立、维持、复位和终止数据链路层连接的手段。还提供了数据链路层的定序、流控和错误恢复，这是一种虚电路服务。</p><hr><p><strong>tip:</strong></p><p>LLC屏蔽了各种MAC的差别并向其上层提供统一的数据链路服务，实现了两个站点之间帧的交换，完成端到端无差错的帧传输和应答功能和流量控制功能。</p><hr><p><strong>介质访问控制子层MAC</strong><br>定义：MAC是Medium Access Control的缩写，是数据链路层的下层部分。</p><p>功能：控制和协调所有站点对共享介质的访问，以避免或减少冲突。</p><p>类型：</p><p>争用型介质访问控制，又称随机型的介质访问控制协议，如CSMA/CD方式；<br>确定型介质访问控制，又称有序的访问控制协议，如Token(令牌)方式。</p><p>CSMA/CD工作原理<br>① 侦听信道上是否有信号在传输。如果有的话，表明信道处于忙状态，就继续帧听，直到信道空闲为止。<br>② 若没有侦听到任何信号，就传输数据。<br>③ 传输的时候继续侦听，如发现冲突则执行退避算法，随机等待一段时间后，重新执行步骤①。<br>④ 若未发现冲突则发送成功，计算机会返回到侦听信道状态。</p><h2 id="以太网概述"><a href="#以太网概述" class="headerlink" title="以太网概述"></a>以太网概述</h2><p><strong>什么是以太网</strong><br>以太网是当前应用最普遍的局域网技术。它很大程度上取代了其他局域网标准，如令牌环、FDDI和ARCNET。历经100M以太网在上世纪末的飞速发展后，目前千兆以太网甚至10G以太网正在国际组织和领导企业的推动下不断拓展应用范围。</p><p><a href="https://imgtu.com/i/oqX9Nd"><img src="https://s4.ax1x.com/2021/12/12/oqX9Nd.png"></a></p><p><a href="https://imgtu.com/i/oqXJDU"><img src="https://s4.ax1x.com/2021/12/12/oqXJDU.png"></a></p><hr><p><strong>tip:</strong></p><p>以太网是应用最为广泛的局域网，包括标准的以太网(10Mbit/s)、快速以太网(100Mbit/s)和10G(10Gbit/s)以太网，采用的是CSMA/CD协议，它们都符合IEEE802.3。</p><hr><p><strong>标准以太网的相关标准</strong><br>10Base-5 使用直径为0.4英寸、阻抗为50Ω粗同轴电缆，也称粗缆以太网，最大网段长度为500m，基带传输方法，拓扑结构为总线型；</p><p>10Base-2 使用直径为0.2英寸、阻抗为50Ω细同轴电缆，也称细缆以太网，最大网段长度为185m，基带传输方法，拓扑结构为总线型；</p><p>10Base-T 使用3类以上双绞线电缆，最大网段长度为100m，拓扑结构为星型；　　</p><p>10Base-F 使用光纤传输介质，传输速率为10Mbit/s，拓扑结构为星型。</p><hr><p><strong>tip:</strong></p><p>标准以太网只有10Mbit/s的吞吐量，使用(CSMA/CD协议。以太网可以使用粗同轴电缆、细同轴电缆、非屏蔽双绞线、屏蔽双绞线和光纤等多种传输介质进行连接，并且在IEEE 802.3标准中，为不同的传输介质制定了不同的物理层标准，在这些标准中前面的数字表示传输速度，单位是“Mbit/s”，最后的一个数字表示单段传输介质的长度（基准单位是100M），Base表示“基带”的意思。</p><hr><p><strong>快速以太网的相关标准</strong><br>100BASE-TX 是一种使用5类以上双绞线的快速以太网技术。它使用两对双绞线，一对用于发送，一对用于接收数据，支持全双工的数据传输，信号频率为125MHz。它的最大网段长度为100米，拓扑结构为星型。</p><p>100BASE-FX 是一种使用光缆的快速以太网技术，可使用单模和多模光纤（62.5和125um）。多模光纤连接的最大距离为550米，单模光纤连接的最大距离为3000米，它支持全双工的数据传输，拓扑结构为星型。100BASE－FX特别适合于有电气干扰的环境、较大距离连接、或高保密环境等情况下的适用。</p><hr><p><strong>tip:</strong></p><p>随着网络的发展，传统标准的以太网技术已难以满足日益增长的网络数据流量速度需求。1993年10月，Grand Junction公司推出了世界上第一台快速以太网集线器Fastch10／100和网络接口卡FastNIC100，快速以太网技术正式得以应用。1995年3月IEEE宣布了IEEE802.3u 100BASE-T快速以太网标准（Fast Ethernet）。快速以太网技术可以有效的保障用户在布线基础实施上的投资，它支持3、4、5类双绞线以及光纤的连接，能有效的利用现有的设施。</p><hr><p><strong>千兆以太网的相关标准</strong><br>1000Base-SX 传输介质为直径62.5um或50um的多模光纤，传输距离为220-550m。</p><p>1000Base-LX 传输介质为直径9um或10um的单模光纤，传输距离为5000m。</p><p>1000Base-CX 传输介质为150欧屏蔽双绞线（STP），传输距离为25m。</p><p>1000Base-TX 传输介质为6类以上双绞线，用两对线发送，两对线接收，每对线支持500Mbit/s的单向数据速率，速率为1Gbit/s，最大电缆长度为100米。</p><p>1000BASE-T 传输介质为5类以上双绞线，用两对线发送，两对线接收，每对线支持250Mbit/s的双向数据速率（半双工），速率为1Gbit/s，最大电缆长度为100米。</p><p><strong>万兆以太网</strong><br>定义：万兆以太网是一种数据传输高达10Gbit/s、通信距离可延伸到40km的以太网。</p><p>应用范围：可以应用于局域网、城域网和广域网。</p><p>特点：<br>保留802.3以太网的帧格式。<br>保留802.3以太网的最大帧长和最小帧长。<br>只使用全双工工作方式，完全改变了传统以太网的半双工的广播工作方式。<br>只使用光纤作为传输媒体而不使用铜线。<br>使用点对点链路，支持星形结构的局域网。<br>10G以太网数据率非。常高，不直接和端用户相连。<br>创造了新的光物理媒体相关(PMD)子层。</p><p><strong>以太网数据帧封装格式</strong><br>以太网技术所使用的帧称为以太网帧，或简称以太帧。主要有Ethernet II和IEEE802.3两种标准帧格式。</p><p><a href="https://imgtu.com/i/oqXgVe"><img src="https://s4.ax1x.com/2021/12/12/oqXgVe.png" alt="以太网数据帧封装格式"></a></p><p>Type取值0X0800的帧代表IPV4协议帧</p><p>Type取值0X0806的帧代表ARP协议帧</p><hr><p><strong>tip:</strong></p><p>（1）<strong>DMAC</strong>（Destination MAC）：表示以太网目标MAC地址，长度为6个字节。<br>（2）<strong>SMAC</strong>（Source MAC）：表示以太网源MAC地址，长度为6个字节。<br>（3）<strong>Length</strong>：指长度，定义了Data字段包含的字节数。<br>（4）<strong>LLC</strong> （Logical Link Control）：表示逻辑链路控制，由目的服务访问点（Destination Service Access Point，DSAP）、源服务访问点（Source Service Access Point，SSAP）和Control字段组成。<br>（5）<strong>SNAP</strong>（Sub-network Access Protocol）：表示子网访问协议，由机构代码（Org Code）和类型（Type）字段组成，Org code三个字节都为0。Type字段用于标识Data字段中包含的不同协议，Type取值为0x0800的帧代表IP协议帧，取值为0x0806的帧代表ARP协议帧。<br>（6）<strong>Data</strong>:表示数据字段，最小长度必须为38字节以保证帧长至少为64字节，最大长度为1492字节。<br>（7）<strong>FCS</strong>: 表示帧校验序列，是循环冗余校验生成的值，为以太帧提供差错检测机制。</p><hr><p><strong>MAC地址简介</strong><br>MAC地址，即网卡的物理地址，是在IEEE802标准中定义并规范的。<br>MAC地址由48位二进制数组成，通常分成6段，用十六进制表示，如00E0-FCA1-562B。</p><p><a href="https://imgtu.com/i/oqXxx0"><img src="https://s4.ax1x.com/2021/12/12/oqXxx0.png" alt="mac地址简介"></a></p><hr><p><strong>tip:</strong></p><p>形象的说，MAC地址就如同我们身份证上的身份证号码，具有全球唯一性。</p><hr><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><h2 id="IP地址与子网划分"><a href="#IP地址与子网划分" class="headerlink" title="IP地址与子网划分"></a>IP地址与子网划分</h2><p><strong>二进制与十进制</strong></p><p>二进制的特点：用0和1两个数码来表示的数。它的基数为2，进位规则是“逢二进一”，借位规则是“借一当二”；</p><p>十进制是人类最方便的进制表示，也是日常生活中最常用的数制，包含数字0、1、2、3、4、5、6、7、8、9 ，但用计算机处理十进制数必须先转换成二进制数。</p><table><thead><tr><th>十进制</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>二进制</td><td>0</td><td>01</td><td>10</td><td>11</td><td>100</td><td>101</td><td>110</td><td>111</td><td>1000</td><td>1001</td><td>1010</td></tr></tbody></table><p><strong>二进制转换成十进制</strong><br>计算方法</p><p><a href="https://imgtu.com/i/oqjAi9"><img src="https://s4.ax1x.com/2021/12/12/oqjAi9.png" alt="计算方法"></a></p><p><strong>十进制转换成二进制</strong><br>计算方法：将十进制数125表示成二进制为1111101。计算方法为除2取余，再逆序排列，如图所示。</p><p><a href="https://imgtu.com/i/oqjmM6"><img src="https://s4.ax1x.com/2021/12/12/oqjmM6.png" alt="十进制转换成二进制"></a></p><p><strong>有类编址</strong><br>IPv4地址：是32位的二进制数，一般用点分十进制数表示，由网络号和主机号两部分组成</p><p><a href="https://imgtu.com/i/oqjby6"><img src="https://s4.ax1x.com/2021/12/12/oqjby6.png"></a></p><hr><p><strong>tip:</strong></p><p>在因特网上，所有的主机资源都通过IP地址来定位。IP地址是由ICANN(Internet Corporation for Assigned Names and Number)分配和管理的，IP地址的分配有一套严格机制和程序，这种机制和程序保证IP地址在Internet上的唯一性。IP地址的格式是由IP规定的，本书所讲的IP地址除特殊说明外均指IPv4地址。</p><hr><p>IP地址分类：根据网络号和主机号位数的不同，有类编址将IP地址分为A类、B类、C类、D类和E类五类。</p><p><a href="https://imgtu.com/i/oqjjTe"><img src="https://s4.ax1x.com/2021/12/12/oqjjTe.png" alt="IP地址分类"></a></p><p>私有地址：私有地址不用于Internet，主要用于局域网中，私有IP地址是一段保留的IP地址。<br>A类、B类和C类的私有IP地址范围：<br>A类私有IP地址范围：10.0.0.0<del>10.255.255.255。<br>B类私有IP地址范围：172.16.0.0</del>172.31.255.255。<br>C类私有IP地址范围：192.168.0.0~192.168.255.255。</p><hr><p><strong>tip:</strong></p><p>A类地址中网络地址为1个字节，主机地址占用3个字节，其范围为0.0.0.0<del>127.255.255.255。<br>B类地址中网络地址为2个字节，主机地址占用2个字节，其范围为128.0.0.0</del>191.255.255.255。<br>C类地址中网络地址为3个字节，主机地址占用1个字节，其范围为192.0.0.0<del>223.255.255.255。<br>D类地址为组播地址，其范围为224.0.0.0</del>239.255.255.255。<br>E类地址保留，其范围为240.0.0.0~255.255.255.255。</p><hr><p><strong>无类编址</strong><br>作用：解决“有类编址”进行地址划分的颗粒度太大的问题。避免大量IP地址资源的浪费。<br>特点：无类编址（Classless Addressing)不限定网络号和主机号的位数，使得IP地址的分配更加灵活，IP地址的利用率也得到了提高。<br>无类编址举例：IP地址为60.1.7.1，它可能是60.1.0.0网络中的一个主机地址，也可能是60.1.7.0网络中的一个主机地址。</p><table><thead><tr><th><strong>网络号</strong></th><th><strong>主机号</strong></th></tr></thead><tbody><tr><td><strong>60.1.7.0</strong></td><td><strong>.1</strong></td></tr><tr><td><strong>60.1.0.0</strong></td><td><strong>.7.1</strong></td></tr><tr><td><strong>60.0.0.0</strong></td><td><strong>.1.7.1</strong></td></tr></tbody></table><hr><p><strong>tip:</strong></p><p>在网络通信发展的初期，网络中的计算机数量很少，需要使用的IP地址也很少。所以，将IP地址划分为5类的做法基本没有问题。然而，随着通信网络的飞速发展，这种“有类编址（Classful Addressing）”的地址划分方法暴露了明显的问题。譬如，一个集团公司大约需要十万个IP地址，如果用A类地址进行分配，那么将会有大量的IP地址被浪费。</p><hr><p><strong>子网掩码</strong><br>定义：子网掩码(Subnet Mask)由32个比特位组成，也可看作是由4个字节，并且也通常以点分十进制数来表示。</p><table><thead><tr><th align="center">示例</th><th align="center">是否为子网掩码</th></tr></thead><tbody><tr><td align="center">11111100  00000000  00000000  00000000  （252.0.0.0）</td><td align="center">是</td></tr><tr><td align="center">11111111  11000000  00000000  00000000  （252.192.0.0）</td><td align="center">是</td></tr><tr><td align="center">11111111  11111111  11111111  11110000  （255.255.255.240）</td><td align="center">是</td></tr><tr><td align="center">11111111  11111111  11111111  11111111  （255.255.255.255）<br/> 00000000  00000000  00000000  00000000（0.0.0.0）</td><td align="center">是<br/>是</td></tr><tr><td align="center">11011000  00000000  00000000  00000000  （216.0.0.0）</td><td align="center">否</td></tr><tr><td align="center">00000000   11111111  11111111  11111111  （0.255.255.255）</td><td align="center">否</td></tr></tbody></table><hr><p><strong>tip:</strong></p><p>子网掩码本身并不是一个IP地址，并且子网掩码必须由若千个连续的1后接若干个连续的0组成。</p><hr><p>子网掩码长度：将子网掩码中1的个数称为这个子网掩码的长度。</p><p>子网掩码的作用：</p><p>主机的子网掩码：255.0.0.0</p><table><thead><tr><th>网络号</th><th>A的主机号</th></tr></thead><tbody><tr><td>60.0.0.0·</td><td>.50.20.2</td></tr></tbody></table><p><a href="https://imgtu.com/i/oqvETg"><img src="https://s4.ax1x.com/2021/12/12/oqvETg.png"></a></p><p>网络号相同，所有主机都可以通信</p><hr><p>主机的子网掩码：255.255.0.0</p><table><thead><tr><th>网络号</th><th>A的主机号</th></tr></thead><tbody><tr><td>60.50.0.0</td><td>.20.2.</td></tr></tbody></table><p><a href="https://imgtu.com/i/oqvQXV"><img src="https://s4.ax1x.com/2021/12/12/oqvQXV.png"></a></p><p>主机C与A的网络号不同，不能通信</p><hr><p>主机的子网掩码：255.255.255.0</p><table><thead><tr><th>网络号</th><th>A的主机号</th></tr></thead><tbody><tr><td>60.50.20.0</td><td>.2</td></tr></tbody></table><p><a href="https://imgtu.com/i/oqvYtJ"><img src="https://s4.ax1x.com/2021/12/12/oqvYtJ.png"></a></p><p>主机C、D与A的网络号不同，不能通信</p><hr><p><strong>tip:</strong></p><p>例如，子网掩码0.0.0.0的长度为0，子网掩码252.0.0.0的长度为6，子网掩码255.192.0.0的长度为10，子网掩码255.255.255.255的长度为32。<br>通常，子网掩码与IP地址结合使用。子网掩码中1的个数(也就是子网掩码的长度)就表示这个IP地址的网络号的位数，而0的个数就表示这个IP地址的主机号的位数。</p><hr><p><strong>子网掩码与IP地址的运算</strong><br>如果将一个子网掩码与一个IP地址进行逐位的“与”运算，所得的结果便是该IP地址所在网络的网络地址。</p><p><a href="https://imgtu.com/i/oqva11"><img src="https://s4.ax1x.com/2021/12/12/oqva11.png"></a></p><p>广播地址应用于主机同网络内所有其他主机的通信，它是主机号为全“1”的地址（子网掩码的反码），即：广播地址=网络地址+子网掩码的反码。</p><p><a href="https://imgtu.com/i/oqvD0O"><img src="https://s4.ax1x.com/2021/12/12/oqvD0O.png"></a></p><p><strong>子网划分</strong><br>作用：可以将一个大的网络划分为多个小的网络，提高IP地址的使用效率。<br>子网划分的过程</p><p><a href="https://imgtu.com/i/oqvWct"><img src="https://s4.ax1x.com/2021/12/12/oqvWct.png" alt="子网划分"></a></p><p><strong>子网划分举例</strong>：将192.168.3.0/24划分4个网段<br>方法：网络号向主机号借位，借位使得IP地址的结构分为三个部分：网络位、子网位和主机位。</p><p><a href="https://imgtu.com/i/oqvvuV"><img src="https://s4.ax1x.com/2021/12/12/oqvvuV.png"></a></p><p><a href="https://imgtu.com/i/oqxZDK"><img src="https://s4.ax1x.com/2021/12/12/oqxZDK.png"></a></p><p><a href="https://imgtu.com/i/oqxYb8"><img src="https://s4.ax1x.com/2021/12/12/oqxYb8.png"></a></p><hr><p><strong>tip:</strong></p><p>从主机最高位开始借位变为新的子网位，剩余部分仍为主机位，是本来属于主机号的部分变为子网位和主机位，这样就实现了将大的网络划分为多个小的网络，满足了不同网络对IP地址的个性化需求，实现网络的层次性。<br>一个/24的网段借2位可以分成4个网段，子网号分别为00，01，10，11；借3位可以分成8个网段，子网号分别为000、001、010、011、100、101、110、111。</p><hr><p><strong>子网划分原理</strong><br>子网号借用的主机号位数越多，子网的数目也就越多，但每个子网的可用主机数就越少，根据子网号借用主机号的位数，可以分别计算出子网数、子网掩码和每个子网的可用主机数。</p><table><thead><tr><th>借位数</th><th>掩码长度</th><th>子网掩码</th><th>子网</th><th>主机数</th><th>可用主机数</th></tr></thead><tbody><tr><td><strong>1</strong></td><td>/25</td><td>255.255.255.128</td><td>2</td><td>128</td><td>126</td></tr><tr><td><strong>2</strong></td><td>/26</td><td>255.255.255.192</td><td>4</td><td>64</td><td>62</td></tr><tr><td><strong>3</strong></td><td>/27</td><td>255.255.255.224</td><td>8</td><td>32</td><td>30</td></tr><tr><td><strong>4</strong></td><td>/28</td><td>255.255.255.240</td><td>16</td><td>16</td><td>14</td></tr><tr><td><strong>5</strong></td><td>/29</td><td>255.255.255.248</td><td>32</td><td>8</td><td>6</td></tr><tr><td><strong>6</strong></td><td>/30</td><td>255.255.255.252</td><td>64</td><td>4</td><td>2</td></tr></tbody></table><p><strong>可变长子网掩码VLSM</strong><br>VLSM允许在同一个网络地址空间中使用多个子网掩码。VLSM使得IP地址的使用更加有效，减少IP地址的浪费，并且VLSM允许已经划分过子网的网络继续划分子网。</p><p><a href="https://imgtu.com/i/oqxsK0"><img src="https://s4.ax1x.com/2021/12/12/oqxsK0.png"></a></p><hr><p><strong>tip:</strong><br>图中，网络172.22.0.0/16被划分成“/24”的子网，其中子网172.22.1.0/24又被继续划分成“/27”的子网。这个“/27”子网的网络范围是172.22.1.0/27~172.22.1.224/27（从实际应用角度）。可以看出，又将172.22.1.224/27的网络划分成“/30”的子网。这个“/30”的子网，网络中可用的主机数为2个，这两个IP正好给两台路由器连接的接口使用。<br>由此也可以看出，VLSM加强了IP地址的层次化结构设计，使路由表的路由汇总更加有效。</p><hr><p><strong>规划IP地址</strong></p><p>作用</p><p>IP地址的合理规划是网络设计的重要环节，大型计算机网络必须对IP地址进行统一规划并得到有效实施。IP地址规划的好坏，影响到网络路由协议算法的效率，影响到网络的性能，影响到网络的扩展，影响到网络的管理，也必将直接影响到网络应用的进一步发展。</p><p>规划原则</p><p>IP地址空间的分配，要与网络拓扑层次结构相适应，既要有效地利用地址空间，又要体现出网络的可扩展性、灵活性和层次性，同时能满足路由协议的要求，以便于网络中的路由聚类，减少路由器中路由表的长度，减少对路由器CPU、内存的消耗，提高路由算法的效率，加快路由变化的收敛速度，同时还有考虑到网络地址的唯一性、连续性、实意性和可管理性。</p><p><strong>规划网络地址案例</strong></p><p>案例需求：假设某企业拥有一个C类地址192.168.1.0/24，企业希望每个部门都工作于相对独立的局域网。</p><table><thead><tr><th align="center">部门名称</th><th align="center">IP地址需求数</th></tr></thead><tbody><tr><td align="center">行政部</td><td align="center">10</td></tr><tr><td align="center">业务部</td><td align="center">40</td></tr><tr><td align="center">研发部</td><td align="center">5</td></tr><tr><td align="center">生产部</td><td align="center">100</td></tr></tbody></table><p>解决方案<br>① 根据最大IP地址数要求划分子网，把其中一个子网网段用于满足该部门主机IP需求；<br>② 选择剩余子网网段中的一个，按次大IP地址数要求划分子网，把其中一个用于满足该部门主机IP需求；<br>③ 重复上述步骤，直到满足所有部门主机IP需求，并将剩余的网络地址登记为备用网络，以备网络扩展升级使用。</p><p>解决过程<br>① 当IP地址数需求为100时，主机地址位至少要7位，因此该C类地址可以分为两个子网，如表所示。将192.168.1.0/25分配给生产部使用。</p><table><thead><tr><th>网络地址</th><th>主机地址（7位）</th><th>子网网络地址</th></tr></thead><tbody><tr><td>192.168.1.0/24</td><td>0      000 0000</td><td>192.168.1.0/25</td></tr><tr><td>192.168.1.0/24</td><td>1      000 0000</td><td>192.168.1.128/25</td></tr></tbody></table><p>② 当IP地址数需求为40时，主机位至少要6位，将192.168.1.128/25继续划分子网，如表所示。我们将192.168.1.128/26分配给业务部使用。</p><table><thead><tr><th>网络地址</th><th>主机地址（7位）</th><th>子网网络地址</th></tr></thead><tbody><tr><td>192.168.1.128/25</td><td>0      000 0000</td><td>192.168.1.128/26</td></tr><tr><td>192.168.1.128/25</td><td>1      000 0000</td><td>192.168.1.192/26</td></tr></tbody></table><p>③ 生成IP规划总表。</p><p><a href="https://imgtu.com/i/oLSSfJ"><img src="https://s4.ax1x.com/2021/12/12/oLSSfJ.png"></a></p><h2 id="ARP与IPv4通信"><a href="#ARP与IPv4通信" class="headerlink" title="ARP与IPv4通信"></a>ARP与IPv4通信</h2><p><strong>ARP</strong><br>定义：ARP（Address Resolution Protocol）协议是网络层的协议，用于将IP地址解析为的MAC地址。<br>工作原理<br>每个主机都会在自己的 ARP 缓冲区中建立一个 ARP 列表，以记录IP 地址和 MAC 地址之间的对应关系；<br>主机（网络接口）新加入网络时（也可能只是MAC地址发生变化，接口重启等），会发送ARP报文把自己IP地址与MAC地址的映射关系广播给其他主机。</p><hr><p><strong>tip:</strong></p><p>IP数据包通过以太网发送，但以太网设备并不能识别IP地址，它们是以MAC地址传输的。因此，必须把IP目的地址转换成MAC目的地址。在以太网中，一个主机要和另一个主机进行直接通信，必须要知道目标主机的MAC地址。</p><hr><p>ARP的报头结构</p><p><a href="https://imgtu.com/i/oLSM6I"><img src="https://s4.ax1x.com/2021/12/12/oLSM6I.png" alt="ARP的报头结构"></a></p><hr><p><strong>tip:</strong></p><p>硬件类型字段：指明了发送方想知道的硬件接口类型，以太网的值为1。<br>协议类型字段：指明了发送方提供的高层协议类型，IP为0800（16进制）。<br>硬件地址长度和协议长度：指明了硬件地址和高层协议地址的长度，这样ARP报文就可以在任意硬件和任意协议的网络中使用。<br>操作字段：用来表示这个报文的类型，ARP请求为1，ARP响应为2，RARP请求为3，RARP响应为4。<br>发送方的硬件地址（0-3字节）：源主机硬件地址的前3个字节。<br>发送方的硬件地址（4-5字节）：源主机硬件地址的后3个字节。<br>发送方IP（0-1字节）：源主机硬件地址的前2个字节。<br>发送方IP（2-3字节）：源主机硬件地址的后2个字节。<br>目的硬件地址（0-1字节）：目的主机硬件地址的前2个字节。<br>目的硬件地址（2-5字节）：目的主机硬件地址的后4个字节。<br>目的IP（0-3字节）：目的主机的IP地址。</p><hr><p><strong>ICMP与连通性测试</strong></p><p>什么是ICMP协议<br>因特网控制报文协议(Internet Control Message Protocol，ICMP)工作在网络层。ICMP的消息可以分为两类：一类是差错报文，即通知出错原因的错误消息（如traceroute），另一类是查询报文，即用于诊断的查询消息（如ping）。</p><p>ICMP的功能<br>ICMP的功能是确认IP包是否成功到达目标地址和通知在发送过程中IP包被丢弃的原因。</p><p>连通性测试<br>① 案例背景：某公司业务部拥有3台计算机，该公司的业务员将这3台计算机接入到一台普通交换机，并为每台计算机配置了IP地址，实现了业务部的3台计算机的互联互通。拓扑图如图所示。</p><p><a href="https://imgtu.com/i/oLSa1s"><img src="https://s4.ax1x.com/2021/12/12/oLSa1s.png"></a></p><p>② 测试思路：安装好TCP/IP，配置3台计算机的IP地址，在3台机器中分别运行【ping IP】命令，测试本机能否访问另外两台计算机。<br>③ 测试结果：结果显示PC2发送了4个ICMP数据包给PC1，并成功接收了4个返回包。</p><p><a href="https://imgtu.com/i/oLp2a8"><img src="https://s4.ax1x.com/2021/12/12/oLp2a8.png"></a></p><h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><p><strong>什么是TCP协议</strong><br>传输控制协议(Transmission Control Protocol，TCP)是一种基于字节流的传输层通信协议，由IETF的RFC793定义。</p><p><strong>什么是TCP封装</strong><br>TCP是基于两个网络主机之间的端对端通信。TCP从高层协议接收需要传送的字节流，将字节流分成段，然后TCP对段编号和排序以便传递；<br>TCP在IP数据报文中的封装主要包括TCP报头和TCP数据。</p><p><a href="https://imgtu.com/i/oLp5xs"><img src="https://s4.ax1x.com/2021/12/12/oLp5xs.png"></a></p><hr><p><strong>tip:</strong></p><p>TCP头部：记录源端与目标端口相关应用程序所用的连接端口号，以及相关的序列号、确认号、窗口大小等。</p><p>TCP数据：转发应用层协议所交付的相关信息，形成TCP数据，值得注意的是，TCP报文段中的数据部分并不是必须的，当一个连接被建立和终止时，交换的报文段只包含了TCP头部而没有数据。</p><hr><p><strong>TCP数据报的头部格式。</strong></p><p><a href="https://imgtu.com/i/oL9nsI"><img src="https://s4.ax1x.com/2021/12/12/oL9nsI.png"></a></p><hr><p><strong>tip:</strong></p><p>源端口号是指发送TCP进程对应的端口号，目标端口号是指目标端接收进程的端口号。</p><p>32位序列号为数据段标记，用于在目的端对到达包的重组，32位确认号对发送端的确认信息，用于告诉发送端这个序号之前的数据段都收到了。</p><p>URG是紧急指针有效位，与16位紧急指针配合使用。</p><p>ACK是确认序列号有效位，表明该数据包包含确认信息。</p><p>PSH通知接收端立即将数据提交给用户进程，不在缓存中停留，等待更多的数据。</p><p>RST为1时，请求重新建立TCP连接，SYN为1时，请求建立连接，FIN为1时，数据发送完毕，请求断开连接。</p><p>滑动窗口的大小，指明本地可接收数据的字节数。</p><hr><p><strong>TCP建立连接的3次握手过程</strong></p><p><a href="https://imgtu.com/i/oL9lo8"><img src="https://s4.ax1x.com/2021/12/12/oL9lo8.png"></a></p><hr><p><strong>tip:</strong></p><p>第1次握手：HostA发送1个SYN信息包给HostB，SYN包含双方的连接端口号、序号、响应序号、SYN Flag和窗口尺寸。</p><p>第2次握手：HostB收到HostA的SYN信息后，向HostA回复一个SYN-ACK信息包，该信息包中包含序号、响应序号、SYN-ACL Flag和窗口尺寸。</p><p>第3次握手：HostA收到HostB的SYN-ACK信息包后，再向HostB发送一个ACK信息包，ACK信息包中包含了序号、响应序号、ACK Flag和窗口尺寸。</p><p>注：SYN:同步序列号请求（当SYN置1时，则表示建立连接）；seq：序列号（发送请求的次数）；ack：确认（TCP协议规定，ack为1时有效；ack=seq+1 ）；FIN：请求断开连接；ctl: 当前发送的状态。</p><hr><p><strong>TCP断开连接的4个过程</strong></p><p><a href="https://imgtu.com/i/oL9ULq"><img src="https://s4.ax1x.com/2021/12/12/oL9ULq.png"></a></p><hr><p><strong>tip:</strong></p><p>步骤1：HostA发送第1个FIN-ACK信息包给HostB，FIN-ACK包含序号、响应序号、SYN-ACK  Flag和窗口尺寸。</p><p>步骤2：HostB发送ACK信息包给HostA，ACK中包含序号、响应序号和ACK Flag。</p><p>步骤3：当HostB完成到HostA的传输后，HostB发送FIN-ACK信息包给HostA，FIN-ACK包含序号、响应序号和FIN-ACK Flag。</p><p>步骤4：HostA再发送ACK信息包给HostB。</p><hr><p><strong>基于TCP的应用层协议</strong></p><table><thead><tr><th>端口号</th><th>协议</th><th>简要说明</th></tr></thead><tbody><tr><td>25</td><td>SMTP</td><td>简单邮件传输协议，用于发送邮件</td></tr><tr><td>23</td><td>TELNET</td><td>选程登录协议，用于远程登录，通过连接目标终端，得到验证后选程控制管理目标终端</td></tr><tr><td>80</td><td>HTTP</td><td>超文本传输协议，用于超文本的传输</td></tr><tr><td>21</td><td>FTP</td><td>文件传输协议，用于文件的上传和下载</td></tr><tr><td>53</td><td>DNS</td><td>域名服务，DNS在区域传输的时候使用其他时候使用UDP协议</td></tr><tr><td>443</td><td>HTTPS</td><td>HTTPS是以安全为目标的HTTP通道，简单讲是HTTP的安全版</td></tr><tr><td>110</td><td>POP3</td><td>用于支持使用客户端远程管理在服务器上的电子邮件</td></tr><tr><td>123</td><td>NTP</td><td>用来同步网络中各个计算机时间的协议</td></tr><tr><td>22</td><td>SSH</td><td>SSH为建立在应用层和传输层基础上的安全协议</td></tr></tbody></table><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p><strong>什么是UDP</strong><br>用户数据报协议（User Datagram Protocol，UDP）是一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。</p><p><strong>UDP的特性</strong><br>UDP是面向非连接的传输，UDP报文中包含源端口和目标端口，从而确保UDP报文能够正确地传输到目的地。</p><p><strong>应用场景</strong><br>UDP用于传输效率要求不高的应用，如：DNS服务、TFTP服务等；<br>UDP适用传输方式为一对多的广播传输；<br>UDP用于传输非关键数据或本身具有完整性检查机制的应用程序。</p><hr><p><strong>tip:</strong></p><p>UDP与网络层的IP一样都是以非连接的方式传输信息，因此，UDP的传输过程比较简单，传输效率较高，但可靠性较低，如果传输发生问题，UDP无法确认、重传及流量控制，必须通过应用层的相关协议进行处理。</p><hr><p><strong>UDP封装</strong><br>源端口号；<br>目标端口号；<br>报文长度；<br>校验和字段。</p><p><img src="C:\Users\沅浅\AppData\Roaming\Typora\typora-user-images\image-20211212230240165.png"></p><hr><p><strong>tip:</strong></p><p>（1）UDP源端口号<br>UDP源端口号用来记录源端应用程序所用的连接端口号。如果目的端的应用程序收到报文后必须回复时，由UDP源端口号标识应用程序的连接端口号。<br>（2）UDP目标端口号<br>目标端口号是UDP报文中最重要的信息，用来标识目标端应用程序的连接端口号。<br>（3）UDP报文长度<br>报文长度表示数据报头以及数据的总长度。UDP数据报头长度的最小值是8字节，<br>（4）UDP校验和<br>UDP校验和用于差错控制，检测UDP数据报文在传输过程中是否有错，错误就丢弃。</p><hr><p><strong>基于UDP的应用层协议</strong></p><table><thead><tr><th>端口号</th><th>协议</th><th>简要说明</th></tr></thead><tbody><tr><td>69</td><td>TFTP</td><td>简单文件传输协议，是在UDP之上上建立一个类似于FIP的仅支持文件上传和下功能的传输协议，所以它不包含FTP中的目录操作和用户权限等内容</td></tr><tr><td>67</td><td>DHCP</td><td>动态主机配置协议，为内部网络或网络服务供应商自动分配IP地址</td></tr><tr><td>161</td><td>SNMP</td><td>是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势</td></tr><tr><td>53</td><td>DNS</td><td>域名服务，DINS在区域传输的时候使用TCP，其他时候使用UDP</td></tr></tbody></table><h1 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h1><p><strong>远程访问应用 - TelNet远程登录</strong><br>定义：TelNet（Telecommunications Network）是用来进行远程访问的重要工具；</p><p>功能：TelNet应用程序的主要功能是远程登录，实现用户与远程计算机进行动态交互；</p><p>通信过程：<br>建立与服务器的TCP连接；<br>从键盘上接收用户输入的字符；<br>把用户输入的字符串变成标准格式并发送给服务器；<br>从远程服务器接收输出的信息；<br>把该信息显示在用户的屏幕上。</p><hr><p><strong>tip:</strong></p><p>功能举例：用自己的键盘、鼠标等输入设备操纵远程计算机或路由器等网络设备，运行远程计算机上的软件，能远程了解计算机或设备的运行情况，并查看运行结果。<br>TelNet的通信过程，用文本方式远程管理计算机或路由器等网络设备用户的终端实际上与本地的TELNET客户机进行通信，远程主机与远程TelNet服务器进行通信，然后通过TCP进行连接，客户机与服务器之间采用NVT标准进行通信</p><hr><p><strong>网络管理应用 - SNMP</strong><br>定义：SNMP (Simple Network Management Protocol)称为简单网络管理协议；<br>功能：SNMP是用于网络管理的协议，主要对网络中支持SNMP的设备进行管理。</p><p><a href="https://imgtu.com/i/oLiEJU"><img src="https://s4.ax1x.com/2021/12/12/oLiEJU.png" alt=" "></a></p><hr><p><strong>tip:</strong></p><p>SNMP不受设备类型和厂商的限制，只要支持SNMP的设备都提供SNMP统一界面，管理员可以使用统一的操作进行管理。</p><hr><p><strong>Web应用 - HTTP</strong><br>定义：HTTP（HyperText Transfer Protocol）也称为超文本传输协议。</p><p>工作过程：HTTP是一种用于超媒体信息系统的应用层协议，典型的HTTP事务处理有如下过程。<br>客户与服务器建立连接；<br>客户向服务器提出请求；<br>服务器接受请求，并根据请求返回相应的文件作为应答；<br>客户与服务器关闭连接。</p><p><strong>电子邮件应用 - SMTP</strong><br>定义：在互联网中，电子邮件的传送是依靠SMTP进行的。SMTP包括两个标准子集：一个标准定义电子邮件信息的格式，另一个是传输邮件的标准。</p><p>功能：SMTP的主要任务是负责服务器之间的邮件传送，它规定了电子邮件如何在互联网中通过TCP在发送方和接收方之间进行传送。</p><p><strong>局域网IP管理应用 - DHCP</strong><br>定义：DHCP（Dynamic Host Configuration Protocol ）也称为动态主机配置协议；</p><p>功能：在局域网环境集中管理和分配IP地址，使客户机能动态的获得IP地址、Gateway地址、DNS服务器地址等信息，提高IP地址的利用率；</p><p>优势<br>在大型企业网络中，会有大量的主机或设备需要配置IP地址等网络参数。如果采用手工配置，工作量大且不好管理，如果有用户擅自修改网络参数，还有可能会造成IP地址冲突等问题。使用动态主机配置协议DHCP来分配IP地址等网络参数，可以减少管理员的工作量，避免用户手工配置网络参数时造成的地址冲突。</p><hr><p><strong>tip:</strong></p><p>简单来说，DHCP就是一个不需要账号密码登录的、自动给内网机器分配IP地址等信息的协议。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 华为1+X </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 华为1+X </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取网页数据</title>
      <link href="2021/09/18/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB5/"/>
      <url>2021/09/18/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB5/</url>
      
        <content type="html"><![CDATA[<h1 id="urllib库简述"><a href="#urllib库简述" class="headerlink" title="urllib库简述"></a>urllib库简述</h1><p>urllib库是Python内置的HTTP请求库，它可以看做是处理URL的组件集合。</p><table><thead><tr><th>模块名称</th><th>描述</th></tr></thead><tbody><tr><td>urllib.request</td><td>请求模块</td></tr><tr><td>urllib.error</td><td>异常处理模块</td></tr><tr><td>urllib.parse</td><td>url解析模块</td></tr><tr><td>urllib.robotparser</td><td>robts.txt解析模块</td></tr></tbody></table><p>前面的内容中我们了解过了robots.txt文件，robots协议也叫robots.txt（统一小写）是一种存放于<code>网站</code>根目录下的<code>ASCLL</code>编码的<code>文本文件</code>，它通常告诉网络<code>搜索引擎</code>的漫游器（又称<code>网络蜘蛛</code>），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。因为一些系统中的URL是大小写敏感的，所以robots.txt的文件名应统一为小写</p><p>robots.txt应放置于网站的根目录下。如果想单独定义搜索引擎的漫游器访问子目录时的行为，那么可以将自定的设置合并到根目录下的robots.txt，或者使用robots<code>元数据</code>（Metadata，又称元数据）。</p><p>robots协议并不是一个规范，而只是约定俗成的，所以并不能保证网站的隐私</p><p>robots.txt文件是一个<code>文本</code>文件，使用任何一个常见的<code>文本编辑器</code>，比<code>Windows</code>系统自带的Notepad，就可以创建和编辑它[1]。robots.txt是一个<code>协议</code>，而不是一个<code>命令</code>。robots.txt是<code>搜索引擎</code>中访问网站的时候要查看的第一个文件。robots.txt文件告诉<code>蜘蛛程序</code>在服务器上什么文件是可以被查看的。</p><p>当一个搜索蜘蛛访问一个<code>站点</code>时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘妹将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被<code>搜索引擎收录</code>的内容时，才需要使用robots.txt文件。如果您希望搜索引擎收录网站上所有内容，请勿建立robots.txt文件。</p><h1 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h1><h2 id="URL编码转换"><a href="#URL编码转换" class="headerlink" title="URL编码转换"></a>URL编码转换</h2><p>当传递的URL中包含中文或者其它特殊字符（如空格等）时，需要使用urllib.parse库中的urlencode方法将URL进行编码，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data=</span><br><span class="line">     &#123;<span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;陕西省&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;b&#x27;</span>:<span class="string">&#x27;咸阳职院&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>转码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=%E9%<span class="number">99</span>%<span class="number">95</span>%E8%A5%BF%E7%9C%<span class="number">81</span>&amp;b=%E5%<span class="number">92</span>%B8%E9%<span class="number">98</span>%B3%E8%<span class="number">81</span>%8C%E9%<span class="number">99</span>%A2</span><br></pre></td></tr></table></figure><p>它可以将“key:value”这样的键值对转换成”key=value“这样的字符串。</p><p>解码使用的是url.parse库的unquote方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line">result=urllib.parse.unquote(<span class="string">&#x27;a=%E9%99%95%E8%A5%BF%E7%9C%818b&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>a=陕西省</p><h2 id="处理GET请求"><a href="#处理GET请求" class="headerlink" title="处理GET请求"></a>处理GET请求</h2><p>GET请求一般用于向服务器获取数据，比如说，我们用百度搜索陕西省</p><p>此时，如果使用Fiddler查看HTTP请求，发现有个GET请求的格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.baidu.com/s?tn=44004473_41_oem_dg&amp;ie=utf-8&amp;wd=%E9%99%95%E8%A5%BF%E7%9C%81</span><br></pre></td></tr></table></figure><p>在这个请求中，“？”后面的字符串就包含了我们要查询的关键字“陕西省”</p><p>前面分析urlopen（）方法时提到过，发送HTTP请求时，如果是以POST方式发送请求，urlpyen()方法必须设置data参数。data参数以字典的形式存放数据</p><p>当访问有道词典翻译网站进行词语翻译时，会发现不管输入什么内容其URL一直都是不变的。</p><p>通过使用Fiddler观察，发现该网站向服务器发送的是POST请求</p><p>当使用有道词典翻译“Python”时，返回的结果是一个JSON字符串。</p><h1 id="请求伪装"><a href="#请求伪装" class="headerlink" title="请求伪装"></a>请求伪装</h1><h2 id="添加特定的Headers—请求伪装"><a href="#添加特定的Headers—请求伪装" class="headerlink" title="添加特定的Headers—请求伪装"></a>添加特定的Headers—请求伪装</h2><p>如果不是从浏览器发出的请求，我们是不能获得响应内容的。针对这种情况，我们需要将爬虫程序发出的请求伪装成一个从浏览器发出的请求。</p><p>HTTP（HyperTextTransferProtocol）即超文本传输协议，目前网页传输的的通用协议。HTTP协议采用了请求/响应模型，浏览器或其他客户端发出请求，服务器给与响应。就整个网络资源传输而言，包括message-header和message-body两部分。首先传递message-header，即http   header消息**。**http   header   消息通常被分为4个部分：general    header，request   header，response   header，entity   header。但是这种分法就理解而言，感觉界限不太明确。根据维基百科对http   header内容的组织形式，大体分为Request和Response两部分。</p><p>伪装浏览器需要自定义请求报头，也就是在发送Request请求时，加入特定的Headers。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user agent =&#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0(compatble;</span></span><br><span class="line"><span class="string">MSIE 9.0;Windows NT6.1;Trident/5.0)&quot;</span>&#125;</span><br><span class="line">request = urllib.request.Request(url,headers = user_agent)</span><br><span class="line">request.add_header(<span class="string">&quot;Connection&quot;</span>,<span class="string">&quot;keep-alive”)</span></span><br></pre></td></tr></table></figure><h1 id="代理服务器"><a href="#代理服务器" class="headerlink" title="代理服务器"></a>代理服务器</h1><h2 id="简单的自定义opener"><a href="#简单的自定义opener" class="headerlink" title="简单的自定义opener"></a>简单的自定义opener</h2><p>opener是urllib.request.OpenerDirector类的对象，我们之前一直都在使用的urlopen，就是模块帮我们构建好的一个opener。</p><p>但是，urlopen不支持代理、Cookie等其他的HTTP/HTTPS高级功能，所以如果要想设置代理，不能使用自带的urlopen，而是要自定义opener </p><h2 id="简单的自定义opener-1"><a href="#简单的自定义opener-1" class="headerlink" title="简单的自定义opener"></a>简单的自定义opener</h2><p>自定义opener需要执行下列三个步骤</p><ol><li>使用相关的Handler处理器创建特定功能的处理器对象。</li><li>通过urllib.requestbuid_opener()方法使用这些处理器对象创建自定义的opener对象。</li><li>使用自定义的opener对象，调用open方法发送请求。</li></ol><p>如果程序里所有的请求都使用自定义的opener，可以使urllib2.install_opener()将自定义的opener对象定义为全局opener，表示之后凡是调用urlopen，都将使用自定义的opener。</p><h2 id="简单的自定义opener-2"><a href="#简单的自定义opener-2" class="headerlink" title="简单的自定义opener"></a>简单的自定义opener</h2><p>下面实现一个最简单的自定义opener，具体代码如下<br>上述方式发送请求得到的结果和使用<br>urlib.request.urlopen发送HTTP/HTTPS请求得到的结果是一样的。<br>如果在  HTTPHandler（方法中增加参数debuglevel=1，会将DebugLog打开，<br>这样程序在执行时，会把收包和发包的报头自动打印出来，以方便调试。</p><h2 id="设置代理服务器"><a href="#设置代理服务器" class="headerlink" title="设置代理服务器"></a>设置代理服务器</h2><p>我们可以使用urllib.request中的ProxyHandler方法来设置代理服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">httpproxy_handler = urllib.request.ProxyHandler(</span><br><span class="line">&#123;&quot;http&quot;:&quot;124.88.67.81:80&quot;&#125;)</span><br><span class="line">opener = urllib.request.build_opener(hupproxy_handler)</span><br></pre></td></tr></table></figure><p>免费开放代理的获取基本没有成本，我们可以在一些代理网站上收集这些免费代理，测试后如果可以用，就把它收集起来用在爬虫上面免费代理网站主要有以下几个：</p><p>西刺免费代理IP</p><p>快代理免费代理</p><p>Proxy360代理</p><p>全网代理IP</p><p>如果代理IP足够多，就可以像随机获取User-Agent一样，随机选择一个代理去访问网站。</p><p>免费开放代理一般会有很多人都在使用，而且代理有寿命短，速度慢，匿名度不高等缺点。所以，专业爬虫工程师或爬虫公司会使用高品质的私密代理，这些代理通常需要找专门的代理供应商购买，再通过用户名/密码授权使用。</p><h1 id="常见网络异常超时设置"><a href="#常见网络异常超时设置" class="headerlink" title="常见网络异常超时设置"></a>常见网络异常超时设置</h1><h2 id="超时设置"><a href="#超时设置" class="headerlink" title="超时设置"></a>超时设置</h2><p>假设我们要爬取1000个网站，如果其中有100个网站需要等待30s才能返回数据，则要返回所有的数据，至少需要等待3000秒。</p><p>我们可以为HTTP请求设置超时时间，一旦超过这个时间，服务器还没有返回响应内容，那么就会抛出一个超时异常，这个异常需要使用try语句来捕获</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    url=http://<span class="number">218.56</span><span class="number">.132</span><span class="number">.157</span>:<span class="number">8080</span></span><br><span class="line">    <span class="comment">#timeout设置超时的时间</span></span><br><span class="line">    file=urllib.request.urlopen(url.timeout=<span class="number">1</span>）</span><br><span class="line">    result= file.read()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>（error）</span><br></pre></td></tr></table></figure><urlopen error timed out><h2 id="URLError异常和捕获"><a href="#URLError异常和捕获" class="headerlink" title="URLError异常和捕获"></a>URLError异常和捕获</h2><p>URLError产生的原因主要有：</p><ol><li>没有连接网络</li><li>服务器连接失败</li><li>找不到指定服务器</li></ol><p>可以使用try……..except语句捕获相应的异常。例如：</p><p>运行程序后，输出结果为：</p><p>上述报错信息是urlopenerror,错误代码是11004。发生错误的原因是没有找到指定的服务器。</p><p>HTTPError是URLError的子类，它的对象拥有一个整型的code属性，表示服务器返回的错误代码。</p><h2 id="更人性化的request"><a href="#更人性化的request" class="headerlink" title="更人性化的request"></a>更人性化的request</h2><p>什么是request库：</p><p>requests是基于Python开发的HTTP库，与urllib标准库相比，它不仅使用方便，而且能节约大量的工作。</p><table><thead><tr><th>模块名称</th><th>描述</th></tr></thead><tbody><tr><td>request.Request</td><td>表示请求对象，用于准备一个请求发送到服务器</td></tr><tr><td>request.Response</td><td>表示响应对象，其中包含服务器对HTTP请求的响应</td></tr><tr><td>request.Session</td><td>表示请求会话，提供Cookie持久性、连接池和配置</td></tr></tbody></table><p>其中，Request类的对象表示一个请求，它的生命周期针对一个客户端请求，一旦请求发送完毕，该请求包含的内容就会被释放掉。而Session类的对象可以跨越多个页面，它的生命周期同样针对的是一个客户端。</p><p>当关闭这个客户端的浏览器时，只要是在预先设置的会话周期内（一般是20~30min），这个会话包含的内容会一直存在，不会被马上释放掉。例如，用户登录某个网站时，可以在多个I正窗口发出多个请求。</p><p>与urlib库相比，requests库更加深得人心，它不仅能够重复地读取返回的数据，而且还能自动确定响应内容的编码。</p><h2 id="请求与响应"><a href="#请求与响应" class="headerlink" title="请求与响应"></a>请求与响应</h2><h3 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h3><p>这些函数都会做两件事情，一件是构建一个Request类的对象，该对象将被发送到某个服务器上请求或者查询一些资源；另一件是一旦得到服务器返回的响应，就会产生一个Response对象，该对象包含了服务器返回的所有信息，也包括原来创建的Request对象。</p><p>request库中提供了很多发送HTTP请求的函数。</p><table><thead><tr><th>函数</th><th>功能说明</th></tr></thead><tbody><tr><td>request.request()</td><td>构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td>request.get()</td><td>获取HTML网页的主要方法，对应于HTTP的GET请求方式</td></tr><tr><td>request.head()</td><td>获取HTML网页头信息的方法，对应于HTTP的HEAD请求方式</td></tr><tr><td>request.post()</td><td>向HTML网页提交POST请求的方法，对应于HTTP的POST请求方式</td></tr><tr><td>request.put()</td><td>向HTML网页提交PUT请求的方法，对应于HTTP的PUT请求方式</td></tr><tr><td>request.patch()</td><td>向HTML网页提交局部修改请求，对应于HTTP的PATCH请求方式</td></tr><tr><td>request.delete()</td><td>向HTML网页提交删除请求，对应于HTTP的DELETE请求方式</td></tr></tbody></table><h3 id="返回响应"><a href="#返回响应" class="headerlink" title="返回响应"></a>返回响应</h3><p>Response类用于动态地响应客户端的请求，控制发送给用户的信息，并且将动态地生成响应，包括状态码、网页的内容等。</p><table><thead><tr><th align="left">属性</th><th>说明</th></tr></thead><tbody><tr><td align="left">statuse_code</td><td>HTTP请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td align="left">text</td><td>HTTP响应内容的字符串形式，即URL对应的页面内容</td></tr><tr><td align="left">encoding</td><td>从HTTP请求头中猜测的响应内容编码方式</td></tr><tr><td align="left">apparent_encoding</td><td>从内容中分析出的响应编码的方式（备选编码方式）</td></tr><tr><td align="left">content</td><td>HTTP响应内容的二进制形式</td></tr></tbody></table><p>当请求发出之后，Requests库可以找出它使用了什么编码，并且可以设置encoding属性进行改变。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;response.encoding</span><br><span class="line">&#x27;utf-8&#x27;</span><br><span class="line">&gt;&gt;&gt;response.encoding=&#x27;ISO-8859-1&#x27;</span><br></pre></td></tr></table></figure><p>再次调用text属性获取返回的文本内容时，将会使用上述设置的新的编码方式。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络请求原理</title>
      <link href="2021/09/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB4/"/>
      <url>2021/09/17/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB4/</url>
      
        <content type="html"><![CDATA[<h1 id="网络请求原理"><a href="#网络请求原理" class="headerlink" title="网络请求原理"></a>网络请求原理</h1><p>浏览网页的过程可分为以下四步</p><ol><li>浏览器通过DNS服务器查找域名对应的IP地址</li><li>向IP地址对应的web服务器发送请求</li><li>web服务器相应请求，发回html网页</li><li>浏览器解析html内容并显示</li></ol><h2 id="统一资源定位符URL"><a href="#统一资源定位符URL" class="headerlink" title="统一资源定位符URL"></a>统一资源定位符URL</h2><p>URL是互联网上标准资源的地址</p><p>它包含了文件的位置以及浏览器处理方式等信息</p><p>URL地址由协议头、服务器地址、文件路径三部分组成。</p><p><a href="http://127.0.0.1:8080/subject/pythonzly/index.shtml">http://127.0.0.1:8080/subject/pythonzly/index.shtml</a></p><p>协议头：http</p><p>服务器地址和端口：127.0.0.1:8080</p><p>文件路径：subject/pythonzly/index.shtml</p><p>协议头：指定传输用的传输协议，用于告诉浏览器，如何处理将要打开的文件，不同的协议表示不同的资源查找以及传输方式</p><p>服务器地址：指存放资源的服务器的主机名或者IP地址，其目的在于标识互联网上唯一一台计算机，并通过这个地址找到这个计算机</p><p>端口：在地址和冒号后面的数字，用于标识一台计算机上运行的不同程序，每个网络程序都对应一个或多个特定的端口号</p><p>IP地址用来给internet上的每台计算机一个编号，但是IP地址不容易记忆，而且服务器的物理IP地址是有可能发生改变的，为此人们又发明了域名来代替 IP地址访问服务器的网站。路径0个或多个斜杠符号隔开的字符串，一般用于指定本次请求的资源在服务器中的位置</p><h2 id="计算机域名系统DNS"><a href="#计算机域名系统DNS" class="headerlink" title="计算机域名系统DNS"></a>计算机域名系统DNS</h2><p>DNS 是计算机域名系统（Domain Name System或Domain Name Service）的缩写，由解析器和域名服务器组成。</p><p>它可以把域名转化为对应的IP地址，域名服务器保存该网络中所有的主机的域名和对应的IP地址，并具有把域名转化为IP地址的功能，人们习惯用域名来访问网站，此时浏览器需要先访问域名服务器，从域名服务器查找该域名对应服务器的IP地址，然后再向该IP地址对应的web服务器发送资源请求，一般一个域名的DNS解析时间在10~60秒，一个域名必须对应一个IP地址，而一个IP地址可能对应0到多个域名，即一个 IP地址可能没有申请域名，也可能同时对应多个域名</p><h1 id="HTTP网络请求原理"><a href="#HTTP网络请求原理" class="headerlink" title="HTTP网络请求原理"></a>HTTP网络请求原理</h1><p>HTTP是一套计算机通过网络进行通信的规则，它由两部分组成：客户端请求消息和服务器端响应消息。</p><h2 id="分析浏览器显示完整网页的过程"><a href="#分析浏览器显示完整网页的过程" class="headerlink" title="分析浏览器显示完整网页的过程"></a>分析浏览器显示完整网页的过程</h2><p>当所有的文件都下载成功后，浏览器会根据HTML语法结构，将网页完整的显示出来。</p><p>客户端发送一个HTTP请求到服务器的请求消息，由请求行、请求头部、空行、以及请求数据这四个部分组成。</p><p>不同的HTTP版本下使用的请求方法也不同。</p><table><thead><tr><th>HTTP版本</th><th>描述</th></tr></thead><tbody><tr><td>HTTP 0.9</td><td>只有基本的文本GET功能</td></tr><tr><td>HTTP 1.0</td><td>定义了三种请求方法：GET，POST和HEAD方法</td></tr><tr><td>HTTP 1.1</td><td>在1.0基础上进行更新，新增了五种请求方法：OPTIONS，PUT，DELETE，TRACE和CONNECT方法。</td></tr><tr><td>HTTP 2.0</td><td>所有首部键必须全部小写，而且请求行要独立为：method、：scheme、：host、：path这些键值对。</td></tr></tbody></table><p><strong>客户端HTTP请求格式</strong><br>最常用的请求方法是GET和POST，两者的区别在于：</p><blockquote><p>GET请求–参数都显示在URL上，服务器根据该请求所包含URL中的参数来产生响应内容。由于请求参数都暴露在外，所以安全性不高。</p></blockquote><blockquote><p>POST请求-一参数在请求体当中，消息长度没有限制而且采取隐式发送，通常用来向HTTP服务器提交量比较大的数据。POST请求的参数不在URL中，而在请求体中，所以安全性也高，使用场合也比GET多。</p></blockquote><p>Host（主机和端口号）</p><p>指定被请求资源的Internet主机和端口号，对应网址URL中的Web名称和端口号，通常属于URL的Host部分。</p><p>Connection（连接类型）</p><p>表示客户端与服务器的连接类型。</p><p>Upgrade-Insecure-Requests（升级为HTTPS请求）</p><p>表示升级不安全的请求，意思是会在加载HTTP资源时自动替换成HTTPS请求，让浏览器不再显示HTTPS页面中的HTTP请求警报。</p><p>User-Agent（浏览器名称）</p><p>标识客户端身份的名称，通常页面会根据不同的User-Agent信息自动做出适配，甚至返回不同的响应内容。</p><p>Accept（传输文件类型）</p><p>指浏览器或其他客户端可以接受的MIME（Multipurpose Internet Mail Extensions，多用途互联网邮件扩展）文件类型，服务器可以根据它判断并返回适当的文件格式。</p><p>Referer（页面跳转来源）</p><p>表明产生请求的网页来自于哪个URL，用户是从该Referer页面访问到当前请求的页面。</p><p>Accept-Encoding（文件编解码格式）</p><p>指出浏览器可以接受的编码方式。编码方式不同于文件格式，它的作用是压缩文件并加速文件传递速度。</p><p>Accept-Language（语言种类）</p><p>指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。</p><p>Accept-Charset（字符编码）</p><p>指出浏览器可以接受的字符编码。</p><p>Cookie（Cookie）</p><p>浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现模拟登陆。</p><p>Content-Type（POST数据类型）</p><p>指定POST请求里用来表示的内容类型。</p><p>HTTP响应由四个部分组成，分别是：状态行、响应报头、空行、以及响应正文。</p><p>响应状态代码由三位数字组成，其中第1位数字定义了响应的类别，有五种可能取值。</p><table><thead><tr><th>响应码</th><th>描述</th></tr></thead><tbody><tr><td>100~199</td><td>表示服务器成功接收部分请求，要求客户端继续提交其余请求才能完成整个处理过程</td></tr><tr><td>200~299</td><td>表示服务器成功接收请求并已完成整个处理过程。常用状态码为200</td></tr><tr><td>300~399</td><td>为完成请求，客户需进一步细化请求</td></tr><tr><td>400~499</td><td>客户端的请求有错误，常用状态码包括404和403</td></tr><tr><td>500~599</td><td>服务器端出现错误，常用状态码为500</td></tr></tbody></table><h1 id="HTTP抓包工具Fiddler简介"><a href="#HTTP抓包工具Fiddler简介" class="headerlink" title="HTTP抓包工具Fiddler简介"></a>HTTP抓包工具Fiddler简介</h1><p>HTTP抓包工具很多，Windows平台下最常用的就是Fiddler。</p><p>Fiddler是一款强大的Web调试工具（包含了抓包功能），它能记录所有客户端和服务器的HTTP请求和响应，还能模拟HTTP请求的发送。</p><h2 id="Fiddler特点"><a href="#Fiddler特点" class="headerlink" title="Fiddler特点"></a>Fiddler特点</h2><p>监控HTTP和HTTPS的流量</p><p>可以查看截获的请求内容。</p><p>可以伪造客户端请求发送给服务器</p><p>可以伪造一个服务器的响应发送给客户端</p><p>可以用于测试网站的性能。</p><p>可以解密HTTPS的web会话。</p><p>Fiddler提供的第三方插件，可大大提高工作效率。</p><h2 id="Fiddler工作原理"><a href="#Fiddler工作原理" class="headerlink" title="Fiddler工作原理"></a>Fiddler工作原理</h2><p>Fiddler是以代理网络服务器的形式工作的，它使用的代理地址为127.0.0.1，端口为8888。</p><h2 id="Fiddler抓取HTTPS设置"><a href="#Fiddler抓取HTTPS设置" class="headerlink" title="Fiddler抓取HTTPS设置"></a>Fiddler抓取HTTPS设置</h2><p>（1）启动Fiddler，点击菜单栏中的【Tools】-&gt;【Options..】，打开“Options”对话框。</p><p>（2）在Options对话框中点击【HTTPS】标签栏进行设置。</p><p>（3）为Fiddler配置Windows信任根证书以解决安全警告：<br>Trust Root Certificate（受信任的根证书）。</p><p>（4）单击”Trust Root Certificate”，系统弹出确认窗口接着点击”Yes”即可。</p><p>（5）然后，在Options对话框中单击“Connections”，进入Connections标签页。</p><p>配置完成后，需要重启Fiddler，使配置生效。</p><h2 id="使用Fiddler捕获Chrome的会话"><a href="#使用Fiddler捕获Chrome的会话" class="headerlink" title="使用Fiddler捕获Chrome的会话"></a>使用Fiddler捕获Chrome的会话</h2><p>由于经常使用Fiddler，我们可能需要手动检查和更改Chrome的代理服务器。</p><p>（1）打开<a href="https://switchyomega.com/%EF%BC%8C%E5%9C%A8%E5%AE%98%E7%BD%91%E9%A6%96%E9%A1%B5%E4%B8%8A%E7%82%B9%E5%87%BB%E2%80%9C%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85%E2%80%9D%E6%8C%89%E9%92%AE%E3%80%82">https://switchyomega.com/，在官网首页上点击“下载和安装”按钮。</a></p><p>（2）点击“直接本地下载crx文件”，将SwitchyOmega.crx文件下载到本地。</p><p>（3）打开Chrome菜单-&gt;【更多工具】-&gt;【扩展程序】，即可进入扩展程序页面。</p><p>（4）将SwitchyOmega.crx文件拖入到扩展程序页面中，完成后在扩展程序页面已经显示。</p><p>（5）点击“选项”进入SwitchyOmega选项页面，点击“新建情景模式”新建一个名称为“Fiddler”，类型为“代理服务器”的情景模式。然后设置“Fiddler”情景模式的代理服务器，其代理协议为HTTP，代理服务器和端口为127.0.0.1和8888。点击左边的“应用选项”进行保存。</p><p>（6）设置好以后，就可以通过浏览器插件切换为设置好的代理。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫的实现原理和技术</title>
      <link href="2021/09/10/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB3/"/>
      <url>2021/09/10/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB3/</url>
      
        <content type="html"><![CDATA[<h1 id="爬虫的实现原理和技术"><a href="#爬虫的实现原理和技术" class="headerlink" title="爬虫的实现原理和技术"></a>爬虫的实现原理和技术</h1><h2 id="通用爬虫工作原理"><a href="#通用爬虫工作原理" class="headerlink" title="通用爬虫工作原理"></a>通用爬虫工作原理</h2><p>是一个自动提取网页的工具，它为搜索引擎internet上下载网页，是搜索引擎的重要组成部分</p><p>通用爬虫从一个或若干初始网页的URL开始，获得初始网页上的URL，在抓取网页的过程中，不断从当前页面上抽取新的URL放入队列，直到满足系统的一定停止条件。</p><p>搜索引擎的的工作流程：</p><p>搜索引擎是通用爬虫最重要的应用领域，也是人们使用网络功能最强的助手</p><p>大致步骤：</p><ol><li>选取一部分的种子url，将这些url放入到带爬取的url队列里</li><li>取出待爬取的url，解析DNS，得到主机的ip并将url对应的网页下载下来，存储至已下载的网页中，并将这些url放入已爬取的队列里</li><li>分析爬取的url队列中的url值，并将url放入待爬取的队列中，从而我们进入下一个循环</li></ol><p>抓取网页：搜索引擎使用通用爬虫来抓取网页，其基本工作流程与其他爬虫类似。</p><p>数据存储：搜索引擎将数据存入原始页面数据库，其中的页面数据与浏览器得到的HTML是完全一样的</p><p>预处理：搜索引擎将爬虫抓取回来的页面，进行各种步骤的预处理。</p><p>检索和排名：搜索引擎为用户提供关键字检索服务，同时会根据页面的PageRank值来进行网站排名。（PageRank值：链接的访问量排名）</p><p><img src="https://z3.ax1x.com/2021/09/10/hvyyqJ.png" alt="搜索引擎的工作流程"></p><p><strong>聚焦爬虫工作原理</strong></p><p>聚焦爬虫需要根据一定的网页分析算法过滤与主题无关的链接，保留有用的链接，并将其放入等待抓取的URL队列。然后，它将根据一定的搜索策略从队列中选择下一步要抓取的网页URL，并重复上述过程，直到达到系统的某一条件时停止。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op1=&gt;operation: 初始URL</span><br><span class="line">op2=&gt;operation: 获取网页</span><br><span class="line">op3=&gt;operation: 抓取新的URL放入URL队列</span><br><span class="line">op4=&gt;operation: 根据分析算法评价网页及URL</span><br><span class="line">cond=&gt;condition: 满足停止条件</span><br><span class="line">sub1=&gt;subroutine: 根据搜索策略选择URL</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="爬虫爬取网页的详细流程"><a href="#爬虫爬取网页的详细流程" class="headerlink" title="爬虫爬取网页的详细流程"></a>爬虫爬取网页的详细流程</h2><p><img src="https://z3.ax1x.com/2021/09/17/4KsdHS.png" alt="爬虫爬取网页的详细流程"></p><p>1、选取网页为种子URL<br>2、放入爬取的URL队列中。<br>3、DNS进行解析URL。<br>4、下载网页</p><h2 id="通用爬虫相关网站文件"><a href="#通用爬虫相关网站文件" class="headerlink" title="通用爬虫相关网站文件"></a>通用爬虫相关网站文件</h2><p><strong>robots.txt文件</strong></p><p>网站通过robots.txt文件来告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p><p>当一个网络爬虫访问一个站点时，它会先检查该站点根目录下是否存在robots.txt文件。</p><p>robots.txt文件使用#号进行注释</p><p>Robots协议只是一种建议，它没有实际的约束力，网络爬虫可选择不遵守这个协议，但可能会存在一定的法律风险。</p><p><strong>Sitemap.xml</strong></p><p>文件为了方便网站管理员通知爬虫遍历和更新网站的内容，而无需爬取每个网页，网站提供了Sitemap.xml文件（网站地图）。</p><p>尽管Sitemap.xml文件提供了爬取网站的有效方式，但仍需要对其谨慎对待，这是因为该文件经常会出现缺失或过期的问题</p><h2 id="防爬虫应对策略"><a href="#防爬虫应对策略" class="headerlink" title="防爬虫应对策略"></a>防爬虫应对策略</h2><p>很多网络爬虫对网页的爬取能力很差，现在的网站会采取一些防爬虫措施来阻止爬虫的不当爬取行为。</p><p>对于采取了防爬虫措施的网站，爬虫程序需要采取相应的应对策略，才能成功地爬取到网站上的数据。</p><p>**伪装User-agent **</p><p>User-agent表示用户代理，是HTTP协议中的一个字段，其作用是描述发出HTTP请求的终端信息。每个正规的爬虫都有固定的User-agent，只要将这个字段设为知名的用户代理，就能够成功伪装</p><p><strong>使用代理IP</strong></p><p>代理IP就是介于用户和网站之间的第三者，即用户先将请求发送给代理IP，之后代理IP再发送到服务器。服务器会将代理IP视为爬虫的IP，同时用多个代理lP，可以降低单个IP地址的访问量，极有可能逃过一劫</p><p><strong>降低访问频率</strong></p><p>如果没有找到既免费又稳定的代理IP，则可以降低访问网站的频率，防止对方从访问量上认出爬虫的身份，不过爬取效率会差很多。为了弥补这个缺点，我们可以基于这个思想适时调整具体的操作。例如，每抓取一个页面就休息若干秒，或者限制每天抓取的页面数量</p><p><strong>验证码限制</strong></p><p>虽然有些网站不登陆就能访问，但是它一检测到某IP的访问量有异常，就会马上提出登陆要求，并随机提供一个验证码。碰到这种情况，大多数情况下需要采取相应的技术识别验证码，只有正确输入验证码，才能够继续爬取网站。不过，识别验证码的技术难度还是比较大的</p><h2 id="为什么选择Python做爬虫"><a href="#为什么选择Python做爬虫" class="headerlink" title="为什么选择Python做爬虫"></a>为什么选择Python做爬虫</h2><p><strong>抓取网页本身的接口</strong><br>Python的urllib包提供了较为完整的访问网页文档的API相比与其他静态编程语言（如Java、C#、C++）<br>Python抓取网页文档的接口更简洁。</p><p><strong>网页抓取后的处理</strong><br>Python的Beautiful Soup提供了简洁的文档处理功能能用极短的代码完成大部分文档的处理。</p><p><strong>开发效率高</strong><br>因为爬虫的具体代码得根据网站不同而修改的Python这种灵活的脚本语言特别适合这种任务。</p><p><strong>上手快</strong><br>网络上Python的教学资源很多，便于大家学习出现问题也很容易找到相关资料。<br>Python还有强大的成熟爬虫框架的支持，比如Scrapy</p><h2 id="使用八爪鱼工具爬取第一个网页"><a href="#使用八爪鱼工具爬取第一个网页" class="headerlink" title="使用八爪鱼工具爬取第一个网页"></a>使用八爪鱼工具爬取第一个网页</h2><p>八爪鱼采集器介绍：<br>是一款通用的网页数据采集器，可以通过规则配置，简单且高效地将网页上数据转化为结构化数据，以Excel.数据库等形式导出</p><p>八爪鱼采集器优点：<br>功能强大<br>操作简单<br>流程可视化</p><h3 id="一-确定目标数据"><a href="#一-确定目标数据" class="headerlink" title="一.确定目标数据"></a>一.确定目标数据</h3><p>（1）访问网址<a href="https://www.taobao.com,进入淘宝网首页,在页面上方的搜索栏中输入“李宁男鞋”,然后单击“搜索”按钮./">https://www.taobao.com，进入淘宝网首页，在页面上方的搜索栏中输入“李宁男鞋”，然后单击“搜索”按钮。</a></p><p>（2）单击其中一个商品的链接，进入商品详情页面，商品详情页面上显示的商品名称、价格、月销量和累计评价就是所要爬取的目标数据。</p><h3 id="二-安装和登录八爪鱼采集器"><a href="#二-安装和登录八爪鱼采集器" class="headerlink" title="二.安装和登录八爪鱼采集器"></a>二.安装和登录八爪鱼采集器</h3><p>（1）在爬取数据之前，需要先在计算机上安装八爪鱼采集器。访问地址<a href="http://www.bazhua-yu.om/%E8%BF%9B%E5%85%A5%E5%85%AB%E7%88%AA%E9%B1%BC%E9%87%87%E9%9B%86%E5%99%A8%E7%9A%84%E5%AE%98%E7%BD%91%EF%BC%8C%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD%E8%AF%A5%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%9B%E7%84%B6%E5%90%8E%E5%8F%8C%E5%87%BB%E6%89%93%E5%BC%80%E5%B9%B6%E6%8C%89%E6%8F%90%E7%A4%BA%E5%AE%89%E8%A3%85%E5%8D%B3%E5%8F%AF%E3%80%82%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E6%AF%94%E8%BE%83%E7%AE%80%E5%8D%95%E9%87%8C%E4%B8%8D%E5%86%8D%E8%B5%98%E8%BF%B0%E3%80%82">http://www.bazhua-yu.om/进入八爪鱼采集器的官网，免费下载该工具的安装包；然后双击打开并按提示安装即可。安装过程比较简单里不再赘述。</a></p><p>（2）打开安装到本地计算机的八爪鱼采集器，会弹出注册/登录的界</p><p>（3）单击“免费注册”按钮注册一个账号。注册完成以后，在登录界面输入刚注册的用户名和密码，单击“登录”按钮进入八爪鱼采集器的操作界面。</p><h3 id="三-使用八爪鱼采集器采集网页信息"><a href="#三-使用八爪鱼采集器采集网页信息" class="headerlink" title="三.使用八爪鱼采集器采集网页信息"></a>三.使用八爪鱼采集器采集网页信息</h3><p>由八爪鱼的操作界面可知，该软件提供了两种采集模式：简易采集和自定义采集。其中，简易采集模式下存放了国内一些主流网站采集规则，当需要采集相关网站时可以直接调用，节省了制作规则的时间和精力；而自定义采集模式是八爪鱼高级用户使用最多的一种模式，它需要自行配置采集规则，通过模拟人浏览网页的操作对网页数据进行爬取，能够实现对全网98%以上网页数据的采集。下面介绍如何在八爪鱼采集器中自定义采集淘宝网上的商品信息。</p><p>实现步骤如下：</p><p>（1）创建采集任务。在八爪鱼操作界面中，单击自定义采集下的“立即使用”按钮，进人新建任务窗口，将商品列表页的网址复制粘贴到编辑区域中之后，单击“保存网址”按钮，则八爪鱼采集器窗口会访问该网址并显示对应的网页界面。</p><p>（2）创建翻页循环。在浏览器中，当浏览完当前页面的商品之后，可以翻页继续浏览。为了让采集器能够模仿这一系列动作，需要为其增加一个翻页循环，在当前页面的内容爬去完毕后，自动翻页并继续爬去下一页数据，直到将所有页数都爬取完或被手动中指才结束。在网页中，下拉滑块至页面中控制翻页的位置。右击“下一页”按钮，在弹出的“操作提示”窗口中单击“循环点击下一页”。此时，单击打开窗口右上角的·“流程”开关，可以看到界面上方出现了流动窗口·和操作窗口·，显示了刚才输入的操作流程图·和详细信息</p><p>（3）创建列表循环。要想获取每个商品所对应的信息，还需逐一单击当前页面中每个商品链接。为了能让采集器模仿单击商品详情链接并打开该链接对应的网页操作，需要建立一个列表循环，让八爪鱼收集器拿到所有的连接后依次打开滑动滚动条至能看到页面中第一个商品的位置，右击第一个商品链接，系统会自动识别页面中与它相似的链接。在右侧的操作提示窗口中，单击“选中全部”选项。之后，在出现的操作提示窗口中再单击“循环点击每个链接”选项即可。</p><p>（4）提取商品信息。在创建列表循环以后，系统会自动访问第一个商品的链接地址，进入到该商品的详情页面。此时，依次右击页面中的商品标题、商品价格、商品评价、商品销量，在各自出现的提示窗口中选择“采集该元素的文本”，选取完的窗口。</p><p>可以看到，在操作详细信息窗口中列出了选取的字段，选中相应的字段，可以对字段进行自定义命名。<br>单击界面上方的“开始采集”按钮，并在弹出的窗口中单击“启动本地采集”按钮。<br>采集任务开始后，会弹出一个新窗口显示该任务的爬取进度和爬取结果。<br>通过以上操作，能够成功地采集到界面中需要的商品信息。由于界面有限，这里只展示了部分爬取信息。<br>在采集完成以后，会弹出提示选择导出数据的格式，选择相应的格式将结果导出即可。</p><p>本节介绍的八爪鱼采集器工具只是一个界面化案例。如果想了解更多的内容，可以参考官网提供的使用手册自行研究，这里就不再赘述。希望通过这个案例的学习，读者可以对爬虫的操作流程有大致的印象。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识爬虫</title>
      <link href="2021/09/10/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB2/"/>
      <url>2021/09/10/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB2/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h1><p>网络爬虫，又称为网页蜘蛛、网络机器人，是一种按照一定的规则，自动请求万维网网站并提取网络数据的程序或脚本。</p><p>如果说网络像一张网，那么爬虫就是网上的一只小虫子，在网上爬行的过程中遇到了数据，就把它抓取下来。</p><p>这里的数据是指互联网上公开的并且可以访问到的网页信息，而不是网站的后台信息（没有权限访问），更不是用户注册的信息（非公开的）。</p><p>在FOAF（Friend-of-a-Friend）社区中间，更经常的称为网页追逐者，是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本，另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。</p><p>大部分爬虫都是按“发送请求——获得页面——解析页面——抽取并储存内容”这样的流程来进行，这其实也是模拟了我们使用浏览器获取网页信息的过程。</p><p>简单来讲，爬虫就是一个探测机器，它的基本操作就是模拟人的行为去各个网站溜达，点点按钮，查查数据，或者把看到的信息背回来。就像一只虫子在一幢楼里不知疲倦地爬来爬去。</p><p>可以简单地想象：每个爬虫都是你的“分身”。就像孙悟空拔了一撮汗毛，吹出一堆猴子一样。</p><p>我们每天使用的百度，其实就是利用了这种爬虫技术：每天放出无数爬虫到各个网站，把他们的信息抓回来，然后化好淡妆排着小队等你来检索</p><h2 id="爬虫产生的背景"><a href="#爬虫产生的背景" class="headerlink" title="爬虫产生的背景"></a>爬虫产生的背景</h2><p>目前的互联网已经迈入大数据时代，通过对海量的数据进行分析，能够产生极大的商业价值。</p><p>企业产生的数据</p><p>数据平台购买的数据</p><p>政府/机构公开的数据</p><p>数据管理咨询公司的数据</p><p>无论是搜索引擎，还是个人或单位获取目标数据，都需要从公开网站上爬取大量数据，在此需求下，爬虫技术应运而生，并迅速发展成为一门成熟的技术。</p><h2 id="爬虫的用途"><a href="#爬虫的用途" class="headerlink" title="爬虫的用途"></a>爬虫的用途</h2><p>1.通过网络爬虫可以替代手工完成很多事情，例如，使用网络爬虫搜集金融领域的数据资源，将金融经济的发展与相关数据进行集中处理，能够为金融领域各个方面（如经济发展趋势，金融趋势，金融投资，风险分析等）提供“数据平台”。</p><p>2.浏览网上的信息时，会看到上面有很多广告信息，十分扰人。这时，可以利用网络爬虫将网页上的信息全部爬取下来，自动过滤掉这些广告，便于对信息的阅读。</p><p>3.想从某个网站中购买商品时，需要找到一些目标客户和特们的联系方式。这时，可以利用网络怕长设置对应的规则，自动互联网中采集目标用户的联系方式等，以进行营销使用。总而言之，从互联网中采集信息是一项非常重要的工作，如果单纯的靠人力进行信息采集，不仅抵低效烦琐，而且消耗成本高，爬虫的出现在一定程度上代替了手工访问网页，实现自动化采集互联网的数据，从而高效的利用互联网中的有效信息</p><h2 id="爬虫的分类"><a href="#爬虫的分类" class="headerlink" title="爬虫的分类"></a>爬虫的分类</h2><p>通常可以按照不同的维度对网络爬虫进行分类，例如，按照使用场景，可将爬虫分为通用爬虫和焦距爬虫，按照爬取方式，可分为累计试爬虫和增量式爬虫，按照爬取数据的存在方式，可分为表层和深层爬虫。在实际应用中，网络爬虫系统通常是由几种爬虫技术相结合实现的。</p><h3 id="通用爬虫和聚焦爬虫"><a href="#通用爬虫和聚焦爬虫" class="headerlink" title="通用爬虫和聚焦爬虫"></a>通用爬虫和聚焦爬虫</h3><p><strong>通用爬虫：</strong>又称全网爬虫，将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。</p><p><strong>聚焦爬虫：</strong>又称主题网络爬虫，是指选择性地爬行那些与预先定义好的主题相关的页面的网络爬虫。</p><p>通用爬虫又称全网爬虫，它将爬取对象从一些种子上URL扩充到整个网络，主要用途是为门户站点搜索大量引擎和大型Web服务提供商采集数据。</p><p>通用爬虫的爬行范围和数量巨大，对于爬行速度和储存空间要求高，对于爬向页面的顺序要求相对较低。同事，由于待刷新的页面太多，通常采用并行工作方式，但需要较长时间才能刷新一次界面。</p><p>焦距爬虫与通用爬虫相比，焦距爬虫只需要爬行与主题相关的页面，从而极大地节省了硬件和网络资源；保存的页面也由于数量少而更新快，可以更好地满足一些特定人群对待特定领域信息的需求。</p><h3 id="累计式和增量式爬虫"><a href="#累计式和增量式爬虫" class="headerlink" title="累计式和增量式爬虫"></a>累计式和增量式爬虫</h3><p><strong>累积式爬虫：</strong>累积式爬虫是指从某一个时间点开始，通过遍历的方式抓取系统所能允许存储和处理的所有网页。</p><p><strong>增量式爬虫：</strong>在具有一定量规模的网络页面集合的基础上，采用更新数据的方式选取已有集合中的过时网页进行抓取，以保证所抓取到的数据与真实网络数据足够接近。</p><p>进行增量式爬取的前提是，系统已经爬取了足够数量的网络页面，并具有这些页面被爬取的时间信息。与周期爬行和刷新页面的网络爬虫相比，增量式爬虫只会在需要时爬行新产生或发生新的页面，并不重新下载没有发生变化的页面，可有效减少数据下载量，及时更新已爬行的网页，减小时间和空间上的耗费，但是增加了爬行算法的复杂度和实现难度。</p><p>面向实际应用环境的网络蜘蛛设计中，通常既包括累计式爬取，也包括增量式爬取。累积式爬取一般用于数据集合的中特建立或大规模更新阶段，而增量式爬取则只要针对数据集合的日产维护与及时更新。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库2</title>
      <link href="2021/09/10/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/SQL%E6%95%B0%E6%8D%AE%E5%BA%932/"/>
      <url>2021/09/10/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/SQL%E6%95%B0%E6%8D%AE%E5%BA%932/</url>
      
        <content type="html"><![CDATA[<h1 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h1><p>客观事物是信息之源，是设计、建立数据库的出发点。计算机不能直接处理现实世界中的具体事物，所以<strong>人们必须事先将具体事物转换成计算机能够处理的数据。</strong></p><p>在数据库系统的形式化结构中如何抽象、表示、处理现实世界中的信息和数据呢？这就是数据库的<strong>数据模型。</strong></p><h2 id="信息的三种世界"><a href="#信息的三种世界" class="headerlink" title="信息的三种世界"></a>信息的三种世界</h2><p>计算机信息处理的对象是现实生活中的客观事物，在对客观事物实施处理的过程中，涉及到三个层次，即现实世界、信息世界（概念世界）和机器世界（数据世界），经历了两次抽象和转换。</p><h3 id="现实世界"><a href="#现实世界" class="headerlink" title="现实世界"></a>现实世界</h3><p>现实世界就是人们所能看到的、接触到的世界。现实世界就是存在于人脑之外的客观世界，客观事物及其相互联系就处于现实世界中。</p><h3 id="信息世界"><a href="#信息世界" class="headerlink" title="信息世界"></a>信息世界</h3><p>信息世界就是现实世界在人们头脑中的反映，又称概念世界。客观事物在信息世界中称为实体，反映事物间联系的是实体模型或<strong>概念模型。</strong></p><h3 id="数据世界"><a href="#数据世界" class="headerlink" title="数据世界"></a>数据世界</h3><p>数据世界又叫机器世界，是信息世界中的信息数据化后对应的产物。现实世界中的客观事物及其联系，在数据世界中用<strong>数据模型</strong>来描述。</p><h2 id="概念模型（信息世界）"><a href="#概念模型（信息世界）" class="headerlink" title="概念模型（信息世界）"></a>概念模型（信息世界）</h2><p>概念模型是现实世界的抽象反映，是独立于计算机系统的模型，是现实世界到机器世界的一个中间层次。</p><h2 id="数据模型-1"><a href="#数据模型-1" class="headerlink" title="数据模型"></a>数据模型</h2><p>数据模型是对客观事物及联系的数据描述，是概念模型的数据化，即数据模型提供表示和组织数据的方法。<br>数据模型通常由数据结构、数据操作和数据的完整性约束三部分（三要素*）组成。</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> SQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络操作系统3</title>
      <link href="2021/09/08/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F3/"/>
      <url>2021/09/08/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F3/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux网络操作系统3"><a href="#Linux网络操作系统3" class="headerlink" title="Linux网络操作系统3"></a>Linux网络操作系统3</h1><h2 id="一、Linux运行级别"><a href="#一、Linux运行级别" class="headerlink" title="一、Linux运行级别"></a>一、Linux运行级别</h2><p>1.查看当前系统的运行级别。<br>[root@localhost-]#runlevel </p><p>N 5<br>2.查看开机默认的运行级别。<br>[root@localhost-1#systemctl get-default </p><p>graphical.target</p><p>3.设置默认的运行级别为命令行模式。</p><p>[root@localhost-]#systemctl set-default multi-user target<br>[root@localhost-]#systemctl get-default multi-user.targe</p><p>4.切换当前运行级别到命令行模式。</p><p>[root@localhost-]#systemctl isolate multi-user.target</p><p>或者<br>[root@localhost-]#systemctlisolate runlevel3.target</p><h2 id="二、Linux操作系统基本操作"><a href="#二、Linux操作系统基本操作" class="headerlink" title="二、Linux操作系统基本操作"></a>二、Linux操作系统基本操作</h2><table><thead><tr><th>命令</th><th align="left">含义</th></tr></thead><tbody><tr><td>#halt</td><td align="left">关机</td></tr><tr><td>#shutdown</td><td align="left">（-h-r）now</td></tr><tr><td>#reboot</td><td align="left">重起</td></tr><tr><td>#root</td><td align="left">登陆</td></tr><tr><td>#rlogin</td><td align="left">远程登录</td></tr><tr><td>#login</td><td align="left">注销</td></tr><tr><td>#startx</td><td align="left">进入图形界面</td></tr><tr><td>#pwd</td><td align="left">查看当前所处的目录的绝对路径（我在哪里）</td></tr><tr><td>#ls</td><td align="left"></td></tr><tr><td>#cd</td><td align="left"></td></tr></tbody></table><p>三.Linux操作系统基本操作</p><table><thead><tr><th align="left">命令</th><th align="left">含义</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">root</td><td align="left">超级用户目录</td><td align="left">包括桌面管理等</td></tr><tr><td align="left">home</td><td align="left">用户目录</td><td align="left">包括用户信息等</td></tr><tr><td align="left">bin</td><td align="left">执行目录</td><td align="left">存放可执行文件包括常用命令</td></tr><tr><td align="left">sbin</td><td align="left">执行目录</td><td align="left">存放不提供给用户使用的命令</td></tr><tr><td align="left">boot</td><td align="left">引导目录</td><td align="left">存放引导系统时使用的各种文件</td></tr><tr><td align="left">etc</td><td align="left">配置目录</td><td align="left">系统配置时使用</td></tr><tr><td align="left">dev</td><td align="left">设备目录</td><td align="left">通过它访问外设</td></tr><tr><td align="left">mnt</td><td align="left">安装目录</td><td align="left">管理员设备临时安装点</td></tr><tr><td align="left">opt</td><td align="left">安装目录</td><td align="left">管理员软件包放置点</td></tr><tr><td align="left">lib</td><td align="left">库目录</td><td align="left">命令执行时使用</td></tr><tr><td align="left">usr</td><td align="left">共享目录</td><td align="left">存放系统中所有用户的共享文件</td></tr><tr><td align="left">var</td><td align="left">数据目录</td><td align="left">系统运行时要修改数据</td></tr><tr><td align="left">tmp</td><td align="left">临时目录</td><td align="left"></td></tr><tr><td align="left">proc</td><td align="left">虚拟目录</td><td align="left">虚构文件系统内存产生不存硬盘</td></tr><tr><td align="left">lost+fount</td><td align="left">空目录</td><td align="left"></td></tr></tbody></table><p><strong>文件类型颜色</strong><br>一般文件————-白色<br>目录文件————-蓝色<br>符号链接文件——-紫色<br>设备文件————–黄色<br>可执行文件———–青绿色<br>图片文件————–粉红色<br>压缩文件————–红色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">路径名</span><br><span class="line">A.绝对路径：以根目录开始。</span><br><span class="line">B.相对路径：以当前目录开始。</span><br><span class="line">C.&quot;.”和”.”：”.”当前目录”.”上级目录。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA程序设计3</title>
      <link href="2021/09/08/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A13/"/>
      <url>2021/09/08/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A13/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> JAVA程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> JAVA程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网组建与维护2</title>
      <link href="2021/09/07/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A42/"/>
      <url>2021/09/07/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A42/</url>
      
        <content type="html"><![CDATA[<h1 id="交换机的基本配置"><a href="#交换机的基本配置" class="headerlink" title="交换机的基本配置"></a>交换机的基本配置</h1><p><strong>任务步骤→配置交换机密码</strong><br>密码设置在全局配置模式下完成，配置命令为enable password。交换机、路由器都可以设置密码，设置密码可以有效地提高设备的安全性。</p><blockquote><p>SA&gt;</p><p>SA&gt;enable </p><p>SA#config terminal SA（config）#enable password 123456</p><p>！设置交换机特权密码为123456</p></blockquote><p>这些密码都是以明文的形式存储，所以很容易查看到。为了避免这种情况，可以对密码进行加密，即以密文的形式存储各种密码。</p><blockquote><p>SA（config）#enable password 123456                ！设置交换机特权密码为123456</p><p>SA（config）#service password-encryption        ！设置密码加密，密文存储</p></blockquote><p><strong>任务步骤→配置交换机接口IP地址及默认网关</strong></p><p>交换机接口IP的设置在全局配置模式下进行。不管是三层交换机还是二层交换机，在默认情况下都有一个Vlan1的接口，要配置交换机的接口IP，可以直接对Vlan1进行IP设置。</p><blockquote><p>SA&gt;</p><p>SA&gt;enable sA#config terminal sA（config）#interface vlan1    ！进入V1an 配置模式</p><p>SA#（config-if）#ip address 192.168.0.1 255.255.255.0                ！配置IP地址</p><p>SA（config-if）#no shutdown                                                                    ！开启VLAN </p><p>SA（config-if）#exit </p><p>SA（config）#ip de fault-gateway 192.168.0.254                                ！配置默认网关</p><p>SA（config）#</p></blockquote><p><strong>任务小结</strong></p><p>交换机的命名在全局模式下使用hostname命令完成。交换机的特权密码分为明文和密文两种方式，密文方式更加安全。<br>交换机的接口IP通过配置Vlan的IP进行设置。<br>设置交换机的Telnet管理可以方便管理员进行交换机的远程管理。</p><p><strong>任务描述</strong><br>海成公司在组建局域网过程中，使用的一批交换机配置相同或相似，为避免管理员的重复劳动，管理员从一台交换机上导出配置文件，直接上传到其它交换机上稍作修改即可。</p><p><strong>任务要求</strong></p><p>导出交换机的配置文件到本地，方便以后查询<br>从本地上传配置文件到交换机，避免管理员重复劳动<br>运行配置文件可以和导入的配置文件合并，方便对交换机的配置文件进行修改。</p><p><strong>任务步骤交换机的配置文件管理</strong><br>步骤1：按照如图示连接网络拓扑结构图。<br>步骤2：配置交换机1的主机名为SWITCH-A，管理地址为192.168.10.1，默认网关为192.168.10.254，控制台密码和特权密码分别为cisco和class。</p><blockquote><p>SWITCH-A（config）#in vlan 1<br>SWITCH-A（config-if）#ip add 192.168.10.1255.255.255.0<br>SWITCH-A（config-if）i#no shutdown<br>SWITCH-A（config）#line con O<br>SWITCH-A（config-line）#pass ciscov<br>SWITCH-A（config-line）#login<br>SWITCH-A（config-line）#exit<br>SWITCH-A（config）#enable secret class<br>SWTCH Alcoigjext/长</p></blockquote><h1 id="交换机的配置文件管理"><a href="#交换机的配置文件管理" class="headerlink" title="交换机的配置文件管理"></a>交换机的配置文件管理</h1><p><strong>任务小结</strong><br>在运行配置中导入配置文件后会覆盖当前的运行配置文件，需要修改的配置<br>最好在导入以后再操作。<br>在启动配置中导入配置文件也可以加载配置文件到交换机，但是需要在特权模式下使用命令“reload”重启交换机后才生效。</p><h1 id="交换机系统的备份与升级"><a href="#交换机系统的备份与升级" class="headerlink" title="交换机系统的备份与升级"></a>交换机系统的备份与升级</h1><p><strong>任务描述</strong></p><p>海成公司由于业务的扩大，想在网络中增加新的功能，但发现其中的一台交换机本班版本较低，管理员想对这台交换机进行IOS系统的升级。</p><p><strong>任务要求</strong></p><p>了解网络设备的操作系统文件（Cisco的操作系统是IOS、H3C的是VRP）</p><p>学习备份交换机的操作系统文件。</p><p>从本地还原网络操作系统文件。</p><p>任务4交换机系统的备份与升级</p><p><strong>任务分析</strong><br>要对交换机进行IOS系统的升级，首先要在版本高的交换机上备份IOS系统，所以管理员先从别的交换机上先备份IOS系统，再对版本较低的交换机进行升级。</p><p><strong>操作步骤→配置TFTP与交换机的通信</strong><br>连接网络拓扑结构图。<br>配置TFTP Server的IP地址、子网掩码。<br>配置交换机的主机名称和管理地址。</p><blockquote><p>Switch&gt;enable”<br>Switchfconfig tw Swatch（config）shostname Switch-A+<br>Switch-A（config）fin vlan 1”<br>Switch-A（config-if）#ip add 192.168.1.100 255.255.255.0</p><p>Switch-A（config-if）#no shutdown</p><p>Switch-A（config-if）#exite</p></blockquote><p><strong>操作步骤→查看和升级操作系统</strong><br>查看交换机的IOS系统<br>myteal I conigStrwces Desutop  softw are/serice sVIcrS TP DHV6<br>TTP File oNG cxon:-poaseco-me tet-iz.on<br>57试6g<br>（Q00-adMpnervicenk9-m.124-15.71i0<br>B c2600–mL122-2课b的<br>An c2600-4p0st419-m2124-8.b0<br>cQ800mm-addpsurucesks-mz.124-15.T1bn c2800mm-adipierdcea9-mz.151-4.M4bin c2800mm-ipbate-mz121-14.T7.bin c2400nm-lpbaune-mz.124.8tbnc2950-46042-m2121-22EAA.bin</p><p>升级交换机的IOS系统<br>c2950-16q4N2-mu121-22.EA8bln Switch-B#copy tftp:flash：Addreas or name of remote host[]？192.168.1.10<br>Source filename[]？c2960-lanbase-mz.122-25.FX.bine Destination filename[c2960-lanbase-mz.122-25.FX.bin]？+Warning:There is a file already existing with this name Do you want to over write？[confirm]”</p>]]></content>
      
      
      <categories>
          
          <category> 局域网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 局域网组建与维护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用密码技术3</title>
      <link href="2021/09/06/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF3/"/>
      <url>2021/09/06/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF3/</url>
      
        <content type="html"><![CDATA[<h1 id="应用密码技术3"><a href="#应用密码技术3" class="headerlink" title="应用密码技术3"></a>应用密码技术3</h1><h2 id="整除与同余"><a href="#整除与同余" class="headerlink" title="整除与同余"></a>整除与同余</h2><h3 id="整除"><a href="#整除" class="headerlink" title="整除"></a>整除</h3><p><strong>整除的定义</strong><br>对于整数$a，b（a\notin0）$，如果存在整数$x$使得$b=ax$，则称a整除b，或$a$是$b$的因，记作$a|b$。</p><p><strong>性质</strong><br>$ala$。</p><p>如果$a|b$，$b|a$，则$a=±b$。</p><p>如果$a|b，b|c，则a|c。$</p><p>如果$a|b，a|c，则对任意的整数x，y，有a|（bx+cy）。$</p><p><strong>公因子</strong><br>如果$a，b，c都是整数，a和b不全为0且c|a，c|b，则称c是a和b的公因子。$</p><p><strong>最大公因子</strong><br>$d是a和b的公因子$;<br>$a和b的任一公因子，也是d的因子。$<br>$则称d是a和b的最大公因子（greatest\quad common\quad divisor），记为d=gcd（a，b）。$<br><font color="#dd0000"> $gcd（a，b）=1\Leftrightarrow a，b互素$</font></p><p><strong>素数</strong><br>对于任一整数$p（p&gt;1），如果p的因子只有±1和±p，则称p为素数；否则称为合数。$<br><strong>算数基本定理</strong><br>对于任一整数a（a&gt;1），都可以唯一的分解为素数的乘积，即</p><p><font color="#dd0000">$a=p^a_1p^a_2…p^a_t$</font> $[公式中p^a_1的a为a_1、p^a_2的a为a_2、p^a_t的a为a_t]$<br>其中，$p_1&lt;p_2…&lt;p_t都是素数，a_i&gt;0(i=1，2.…,t)。$</p><p><strong>欧拉函数</strong><br>$设n是一正整数，小于n且与n互素的正整数的个数称为欧拉（Euler）函数，记为、φ（n）。$<br><strong>性质</strong></p><p>如果n是素数，则<font color="#dd0000">$φ（n）=n-1 $</font>；</p><p>如果m和n互素，则<font color="#dd0000">$φ(mn)=φ(m)φ(n)$</font>；</p><p>如果$n=p^a_1p^a_2…p^a_t$，其中，$p_1&lt;p_2&lt;.…p_t$都是素数，</p><p>a_i&gt;0（i=1，2,…,t)，则$φ(n)=n(1-\frac{1}{p_1})(1-\frac{1}{p_2})…(1-\frac{1}{p_t})$。</p><p><font color="#dd0000">φ(9)=6，可以知道1，2，4，5，7，8与9互素。</font></p><h3 id="同余"><a href="#同余" class="headerlink" title="同余"></a>同余</h3><p><strong>同余定义</strong><br>设n是一正整数，a是整数，如果用n除a，得商为q，余数为r，即a=qn+r，0sr&lt;n，q=a|<br>其中x]表示小于或等于x的最大整数。定义r为amod n，记为r=a mod n。如果两个整数a和b满足a modn=bmod n则称a和b模n同余，记作a=bmod n。<br><strong>Example</strong><br>设a=42，n=8。由于42=5×8+2，则2=42mod8。</p><p><strong>同余性质</strong><br>如果$n|(a-b)，则c\equiv b\quad mod\quad n$。<br>如果$a\quad mod\quad n=b\quad mod\quad n，则a\equiv b\quad mod\quad n$。<br>$a\equiv a \quad mod\quad n$。<br>如果$a\equiv bmodn$，则b\equiv amodn。<br>如果$a\equiv bmodn，b\equiv cmodn，则a\equiv cmodn$。<br>如果$a\equiv bmodn，c\equiv dmodn，则(a+c)\equiv (b+d)mod n，ac\equiv bdmodn$。</p><p><strong>同余类（剩余类）</strong><br>$定义Z_n为小于n的所有非负整数集合，即Z_n={0，1，2..…，n-1}，\称Zn为模n的同余类集合。$<br>$Z_n$中的加法和乘法都为模n运算，有如下性质<br>交换律：$（w+x）mod n=（x+w）mod n和（w×x）mod n=（x×w）mod n$<br>结合律：$[（w+x）+yl mod n=[w+（x+y）]mod n和[（w×x）×ylmod n=[w×（x×y）]mod n$<br>分配律：$[w×（x+y）]mod n=[（w×x）+（w×y）]mod n$</p><p><strong>有单位元：</strong>对加法，存在一个元素0，对VwEZn，有（0+w）mod n=w mod n，元素0称为加法单位元；对乘法，存在一个元素1，对VwE Zn，有（1xw）mod n=w mod n，元素1称为乘法单位元。<strong>有逆元：</strong>对VwEZn，若存在xEZn，（w+x）=0modn，则称x为w的加法逆元；同理，对乘法（w×x）=1modn，则称x为w的乘法逆元。</p><p>注意<br>并不是每个元素都有乘法逆元。WEZn有逆元白gd（w，n）=1<br>W是可逆的，则可以定义除法：<br>$\frac{x}{w}=xw^-1modn $</p><p>Example</p><p>设n=26，即$Z_n={1，2.…，25}$，求15的加法、乘法逆元。</p><p>15+11=0mod26，15的加法逆元为11；</p><p>gcd（15，26）=1且15×7=1mod26，15的乘法逆元为7。</p><p>求乘法逆元——欧几里得除法<br>$$<br>设a，b是两个正整数，记r_0=a，r_1=b，于是有：\<br>r0=q_1r_1+r_2，0\leq r_2&lt;r_1，\r_1=q_2r_2+r_3，0\leq r_3&lt;r_2，\……\r_l-2=q_l-1r_l,0\leq r_l&lt;r_l-1，\r_l-1=q_lr_l\r_l=gcd(a，b)<br>$$<br>求乘法逆元——欧几里得除法<br>最大公因子定理：设a，b是两个不全为零的整数，则存在两个整数u，v，使得<br>（a，b）=ua+vb<br>求逆元<br>在欧几里得除法中，如果a和n的最大公因子为1，通过反向选代操作有<br>$ua+vn=（a，n）=1→ua\equiv 1 mod n $</p><p>u是a模n的乘法逆元。</p><p>Example<br>求15模26的逆元。<br>$$<br>解：26=1×15+11\15=1×11+4\11=2×4+3\4=1×3+1\3=3×1\<br>\1=4-1×3\=4-1×（11-2×4）\=3×4-1×11\=3×（15-1×11）-1×11\<br>=3×15-4×11\=3×15-4×（26-1×15）\=7×15-4×26\<br>所以（15，26）=1，15模26的逆元为7。<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 应用密码技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 应用密码技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>办公自动化硬件系统</title>
      <link href="2021/09/06/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
      <url>2021/09/06/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="办公自动化硬件系统"><a href="#办公自动化硬件系统" class="headerlink" title="办公自动化硬件系统"></a>办公自动化硬件系统</h1><h2 id="办公基础"><a href="#办公基础" class="headerlink" title="办公基础"></a>办公基础</h2><h3 id="办公自动化硬件系统-1"><a href="#办公自动化硬件系统-1" class="headerlink" title="办公自动化硬件系统"></a>办公自动化硬件系统</h3><p><strong>一、办公自动化的概念</strong></p><p>办公自动化（Office Automation，OA）是将现代化办公和计算机网络功能结合起来的一种新型的办公方式，是以计算机为中心，采用一系列现代化的办公设备和先进的网络技术，广泛、全面、迅速地收集、整理、加工、存储和使用信息，使企业内部人员方便快捷地共享信息，高效地协同工作的一种办公模式。<br>实现办公自动化的目的是尽可能充分利用现代技术资源与信息资源，提高生产效率、工作效率和工作质量，辅助决策，以达到既定目标。</p><p><strong>二、办公自动化的功能办公自动化的主要功能如下：</strong></p><p>文字处理：<br>文字处理是现代化办公的主要工作之一，是指利用计算机处理文字，如输入文本、编辑文本、编排版式、存储和打印等。在办公自动化中可使用Word等软件进行文字的处理。</p><p>资料处理：<br>包括对各种文档资料进行分类、登记、索引、转存、查询和检索等。</p><p>数据处理：<br>数据处理也是现代化办公的主要工作之一，是按一定的目的把来自各个领域的原始数据加工成另一种形式的数据。例如，可利用Excel软件对数据进行记录、存储、运算、统计和分析等。</p><p>行政事务处理：<br>如对人事、财务、基建和办公用品等的管理。</p><p>图形、图像处理：<br>包括对图形和图像的输入、编辑、存储、检索和输出等。</p><p>语音处理：<br>包括语音的识别、输入、编辑、合成、存储和输出等。</p><p>信息交流和资源共享：<br>数利用现代化的网络技术，可以在系统内部各部门之间实现信息交流，使办公人员更有效地共享办公自动化系统的资源，同时便于与外界进行信息交流和资源共享。</p><p><strong>三、办公自动化所需条件</strong></p><p>实现办公自动化离不开办公人员、硬件环境和软件环境。</p><p>1.办公人员</p><p>办公人员包括管理决策人员、办公室工作人员、专业技术人员等，如右图所示。不同的办公人员在实现办公系统的自动化过程中扮演着不同的角色，但是，都需要掌握计算机的基本操作和维护技术，并能熟练地使用Office软件、打印机和复印机等常用办公设备，以及使用网络和进行移动办公等。</p><p>2.硬件环境</p><p>计算机系统：<br>计算机系统是办公自动化的核心设备。在科学技术飞速发展的今天，微型计算机在各个行业都得到了广泛应用。在办公自动化中，微型计算机是必不可少的工具，它的使用直接关系到企业的办公效率和效益。</p><p>计算机网络：<br>计算机网络技术的发展与普及，使得各个企业很容易就能组建局域网并连接到互联网，进行本地、远程资料传输，极大地提高了工作效率，节省了运营成本。</p><p>常用的办公设备：<br>要实现办公自动化还需要打印机、扫描仪、复印机、传真机、一体机、投影机等常用办公设备。例如，打印文件时需要使用打印机，复印文件时需要使用复印机等。</p><p>3.软件环境</p><p>办公自动化软件环境是指以操作系统为核心，辅以办公、绘图、辅助设计、病毒防护等应用软件组合而成的软件体系。其中，操作系统是计算机的核心软件，用于控制计算机的所有软硬件协同工作；办公软件是办公自动化中的基础软件，用于文档、表格、演示文稿的创建和编辑；绘图及辅助设计软件是办公领域的专业软件，用于图形、图像的绘制和处理等；病毒防护软件是确保计算机和网络系统安全运行的重要软件。</p><h1 id="选购和连接办公电脑"><a href="#选购和连接办公电脑" class="headerlink" title="选购和连接办公电脑"></a>选购和连接办公电脑</h1><p>随着电脑的普及，如今几乎所有领域都能看到它的身影。电脑已经成为人们日常办公中不可或缺的工具。<br>一名合格的办公人员，应该了解电脑的基础知识，并能根据办公需要选购和连接电脑。在本任务中，我们首先学习电脑硬件的基础知识和选购技巧，然后根据不同的办公需要拟定电脑配置清单，连接电脑外部设备并观看电脑组装视频。</p><ol><li>认识各种电脑配件，并了解它们的功用。</li><li>了解电脑主要接口的名称和功用。</li><li>能够根据办公需要选购台式电脑。</li><li>能够根据办公需要选购笔记本电脑。</li><li>能够根据需要连接电脑外部设备。</li></ol><h2 id="一、现代计算机的分类"><a href="#一、现代计算机的分类" class="headerlink" title="一、现代计算机的分类"></a>一、现代计算机的分类</h2><p>计算机俗称电脑，根据其特点和使用情况，通常可以分为服务器、工作站、台式机、笔记本、一体机和平板电脑几大类。</p><p><strong>服务器：</strong>服务器是指在网络环境中能为其他计算机提供服务的高性能计算机系统。服务器的硬件构成与普通计算机相似，但这些硬件是针对具体的网络应用而特别制定的。从应用上看，服务器主要分为网络服务器、打印服务器、磁盘服务器和文件服务器等。</p><p><strong>工作站：</strong>工作站是一种高档的微型计算机，通常配有高分辨率的大屏幕显示器及大容量的内、外存储器，并且具有强大的信息处理功能。工作站通常面向专业应用领域，如工程设计、三维动画制作和软件开发等。</p><p><strong>台式机：</strong>台式机也称桌面机，它由主机、显示器、键盘和鼠标等设备组成，是日常使用最多的计算机。</p><p><strong>笔记本：</strong>即笔记本电脑，也称便携式电脑，其功能与台式机不相上下，特点是体积小、重量轻。它就像一个纸质笔记本，打开后，一面是LCD（液晶显示器），另一面则是键盘以及当作鼠标使用的触摸板。</p><p><strong>一体机：</strong>随着计算机集成度的增强，计算机厂商开始把主机集成到显示器中，从而形成电脑一体机（All-In-One PC），简称一体机（Al0）。一体机较传统台式机的优点是连线少、体积小、集成度高、外观漂亮，缺点是性价比不高。</p><p><strong>平板电脑：</strong>平板电脑（Tablet Personal Computer，简称Tablet PC或Tablet）是一种小型、方便携带的个人电脑，它以触摸屏作为基本的输入设备，具有普通计算机的所有功能。</p><h2 id="二、认识电脑配件"><a href="#二、认识电脑配件" class="headerlink" title="二、认识电脑配件"></a>二、认识电脑配件</h2><p>目前常用的办公电脑为台式电脑和笔记本电脑。虽然这两种电脑在外形上存在着很大的差异，但是其硬件组成和工作原理基本目同。下面我们以台式电脑为例，来认识一下电脑的主要配件。</p><p><strong>台式电脑主要由主机、显示器、键盘和鼠标组成，其中主机是台式电脑硬件系统的核心。打开主机机箱侧面板，可看到主机内的配件，包括主板、CPU、CPU散热器、内存、硬盘、光驱、显卡、电源，以及各种连接线，如图所示。</strong></p><p><img src="https://z3.ax1x.com/2021/09/06/hhKlQg.png" alt="图示"></p><p><strong>主板</strong><br>主板又称母板，是电脑中其他硬件设备的载体，CPU、内存、显卡、声卡和网卡等都安装在其中，它还为硬盘、光驱、打印机、扫描仪等设备提供接口，因此，主板的品质将直接影响到整个机器的性能和稳定性。</p><p><img src="https://z3.ax1x.com/2021/09/06/hhMHu4.png" alt="主板"></p><p><strong>CPU</strong></p><p>CPU安装在主板的CPU插槽上，在它的上面有一个散热器。cPU（Central Processing Unit）的中文名称是中央处理器，它由控制器和运算器组成，是计算机的指挥和运算中心，其规格决定了计算机的档次。</p><p>1）CPU产品系列</p><p>生产CPU的厂商主要有Intel和AMD两家，其中大部分市场被Intel占领。<br>目前Intel公司的CPU产品主要有酷睿（Core）和奔腾（Pentium）系列。其中，酷睿系列为Intel公司的主打产品，性能最强，又分为i3、i5和i7系列，分别对应低、中、高端市场；奔腾系列主要面向入门级电脑。</p><p>AMD公司的CPU产品包括集成了显示芯片的APU系列（中低端均有），面向高端市场的羿龙（Phenom）和推土机（FX）系列，面向低端市场的速龙（Athlon）系列。</p><p><strong>CPU的主要技术参数</strong><br>CPU的技术参数主要包括主频、字长、核心、缓存等。</p><p>主频</p><p>主频是指CPU的时钟频率，单位是MHz或GHz，用来表示CPU运算和处理数据的速度。在核心数相同的情况下，CPU主频越高，其运算和处理数据的速度就越快。</p><p>字长</p><p>字长为CPU在单位时间内一次能处理的二进制数的位数。字长越大，CPU的工作效率越高。目前使用的CPU基本都是64位，即CPU一次能处理8个字节的数据。</p><p>CPU核心</p><p>CPU核心（Die）又称为CPU内核，是CPU最重要的组成部分。CPU所有的计算、接受/存储命令、处理数据都由核心执行。目前的CPU都是双核心、四核心、六核心或八核心，其中以双核心和四核心居多。核心越多，CPU性能越好。</p><p>Tip：例：inter酷睿i5-4690K是酷睿i5第四代CPU，编号690，K代表支持超频。</p><p><strong>内存</strong><br>内存也被称为内存储器，其作用是暂时存放需要CPU处理的程序和数据，关机后在其中存储的信息会自动消失。电脑在执行各种程序时，首先要把程序和数据调入内存（如从硬盘调入），然后从内存调入CPU缓存，这样才能由CPU处理。因此，内存的性能和质量是影响电脑运行速度和稳定性的关键。</p><p>内存的分类<br>内存就其发展的顺序来看，可以分为ERO RAM，SDRAM，DDR，DDR2，DDR3和DDR4等几种类型。其中，前4种内存已经被淘汰，DDR3和DDR4是目前市场主流</p><p><img src="https://z3.ax1x.com/2021/09/06/hh3m26.png" alt="DDR3和DDR4"></p><p>内存的主要技术参数</p><p>内存容量<br>内存容量是指内存的存储容量，这是内存的最关键参数。一般而言，内存容量越大，越有利于系统的运行。目前，主流台式机中采用的内存容量都在4GB以上。系统中内存的容量等于插在主板内存插槽上所有内存条容量的总和。</p><p>内存主频<br>内存主频用来表示内存的速度，内存主频越高在一定程度上代表着内存所能达到的速度越快。目前，DDR4内存的主频已达到3000 MHz以上。</p><p>CAS延迟时间（CL）<br>CAS延迟时间（CL）也是内存性能的一个重要指标。当CPU需要向内存读取数据时，在实际读取之前一般都有一个<br>“缓冲期”，“缓冲期”的时间长度就是CL。内存的CL值越低越好。</p><p><strong>硬盘</strong><br>硬盘是计算机中主要的辅助存储部件，它一般固定在计算机的机箱内，并通过主板的SATA接口与主板连接，具有容量大、可靠性高、断电后其中的数据也不会丢失等特点。</p><p>硬盘的分类</p><p>按接口分类：按接口不同，硬盘有SATA，SCSI和SAS等类型，其中后两种主要用于服务器硬盘。</p><p>按外形尺寸分类：按外形尺寸，硬盘有3.5英寸台式机用、2.5英寸笔记本用和1.8英寸、1英寸微型硬盘等类型。一般来说硬盘的尺寸越小，功耗越低，性能也越差。</p><p>按使用的技术分类：按使用的技术，硬盘可以分为传统的机械硬盘左图和新型的固态硬盘右图与机械硬盘相比，固态硬盘具有体积小、重量轻、速度快、发热低、结实、抗震性强、适应温度范围广、长期使用性能衰减低等优点；缺点是容量小，单位容量价格高。</p><p><img src="https://z3.ax1x.com/2021/09/06/hh8bkj.png" alt="固态硬盘和机械硬盘"></p><p>硬盘的主要技术参数</p><p>硬盘容量<br>硬盘的容量一般以GB或TB为单位。目前，主流的机械硬盘容量为1TB、1.5TB、2TB、3TB等。</p><p>转速<br>转速是指机械硬盘内电机主轴的旋转速度，也就是硬盘盘片在一分钟内所能完成的最大转数。转速的快慢是决定硬盘内部传输率的关键因素之一。硬盘转速以每分钟多少转来表示，单位为rpm（转每分）。rpm值越大，硬盘内部数据的传输率就越高。</p><p>缓存<br>硬盘缓存的基本作用是平衡硬盘内部与外部的数据传输速率，通过预读、写缓存，来减少系统的等待时间，提高数据传输速度。一般来说，硬盘的缓存越大越好。</p><p><strong>显卡</strong><br>显卡又称显示适配器，是显示器与主机进行通信的接口，是电脑中不可缺少的部件。</p><p>1）显卡的分类<br>显卡分为核心显卡（集成显卡）和独立显卡两大类。核心显卡是指将显示芯片（GPU）集成在CPU核心中，由主板提供VGA或DVI接口，由内存提供显示缓存，用户不再另行购买显卡。独立显卡是指插到主板专用扩展插槽的独立板卡，有独立的GPU和显存等。下图所示分别为核心显卡在主板上的接口和独立显卡。</p><p><img src="https://z3.ax1x.com/2021/09/06/hhJDde.png" alt="核心显卡和独显"></p><p>2）核心显卡和独立显卡的优缺点</p><p>独显的缺点：系统功耗大，发热量也较大；价格高。</p><p>独显的优点：单独安装有显存，一般不占用系统内存；性能强劲，比核心显卡能够得到更好的显示效果和性能；容易进行显卡的硬件升级。</p><p>核显的缺点：图形图像处理功能弱；占用系统内存。</p><p>核显的优点：功耗小，发热量小；部分核心显卡的性能已经可以媲美入门级的独立显卡；不用单独花钱购买，降低了购机成本。</p><p><strong>光驱</strong><br>光盘驱动器简称光驱，主要用来读写存储介质——光盘。</p><p>光区的分类<br>目前市面上的光驱产品主要有DVD光驱、DVD刻录机、蓝光COMBO和蓝光刻录机等几种。</p><p>DVD光驱：能读各种CD和DVD光盘。<br>DVD刻录机：除具备DVD光驱的功能外，还能刻录各种CD和DVD刻录盘。<br>蓝光COMBO：能读CD，DVD和蓝光光盘，还能刻录各种CD和DVD刻录盘。<br>蓝光刻录机：除具备蓝光COMBO的功能外，还能刻录蓝光光盘。</p><p>根据与电脑连接方式的不同，又可将光驱分为内置式和外置式。其中，外置式光驱通过USB接口连接到电脑上。</p><p><img src="https://z3.ax1x.com/2021/09/06/hhYfpR.png" alt="内置和外置光驱"></p><p><strong>电源和电源引出线</strong></p><p>电源为计算机的各硬件设备提供动力，使它们能正常工作，如图所示。电源引出线用来插接在主板、硬盘和显卡等设备上，为各设备供电。</p><p><img src="https://z3.ax1x.com/2021/09/06/hhtl4J.png" alt="电源和电源引出线"></p><p><strong>机箱</strong><br>机箱的主要作用是放置和固定电脑各配件，起到承托和保护作用。此外，机箱还具有屏蔽电磁辐射的重要作用。</p><p><strong>显示器</strong></p><p>显示器是电脑外部设备中非常重要的一个部件，是电脑的主要输出设备，用于显示电脑中处理后的数据、图片和文字等。</p><p>显示器的分类：</p><p>根据成像原理，可以将显示器分为CRT显示器（也称阴极射线管显示器）和LCD显示器（也称液晶显示器）。CRT显示器目前已被淘汰。液晶显示器具有体积小、功耗低和低辐射等特点，是目前常用的显示器，如图所示。</p><p>液晶显示器的技术参数：</p><p>液晶显示器的主要技术参数有：面板类型、屏幕尺寸、最佳分辨率、背光类型、对比度、响应时间、点距、亮度、可视角度和显示颜色（色彩）。</p><p><strong>键盘和鼠标</strong></p><p>键盘的种类<br>键盘根据接口类型的不同，可分为PS/2接口和USB接口键盘；根据连接方式的不同，可分为有线和无线键盘；根据产品定位的不同，可分为普通键盘、机械键盘、游戏键盘、多功能键盘等。</p><p>鼠标的种类<br>同样，鼠标根据接口类型的不同，可分为PS/2接口和USB接口鼠标；根据连接方式的不同，可分为有线和无线鼠标；根据工作方式的不同，可分为光电鼠标和激光鼠标等类型。</p><h2 id="三、选购台式电脑"><a href="#三、选购台式电脑" class="headerlink" title="三、选购台式电脑"></a>三、选购台式电脑</h2><p>购机的时候有很多误区，比如一味求新，一味求贵，或一味求便宜，认为CPU决定一切，等等，这些做法都是不可取的。总的说来，在购机时应遵循如下原则。</p><p><strong>适用</strong></p><p>所谓“适用”，就是根据自身使用需求来购机。例如，学生使用电脑主要用于学习和娱乐；专业人士则强调功能的强大以适应工作的需要。通常大多数电脑厂商也会基于此对其产品进行细分，以满足不同用户的需要。用户在购买电脑时一定要清楚自己的需求，如是普通文档处理、图形图像设计还是其他，以便能够在选购电脑时做到有的放矢。</p><p><strong>够用</strong></p><p>“够用”是指选购电脑时不要一味求新、求贵，电脑能满足自身的需求即可。例如，就CPU而言，如果电脑不需处理大容量的图形文件，那么选择Intel普通的i3双核CPU，或AMD的普通CPU就够用了。而那些对电脑有很高要求的用户，则应该考虑选用i5、i7四核以上，或羿龙Ⅱ八核等高端产品。</p><p>同样，主板、硬盘和内存等其他配件的选择也取决于用户的需求，够用即可，这样就可以避免因配置过高而造成浪费，或配置不足而不能满足需求。</p><p><strong>好用</strong></p><p>“好用”也可以理解为电脑的易用性，是指用户可以很好地理解电脑给予用户的提示、指令，并可以根据提示轻易地完成既定任务。例如，利用多功能键盘，用户可以通过按快捷键直接完成诸如上网、多媒体播放等功能。</p><p>而很多主板上提供的Debug除错灯，则可以帮助用户在电脑出问题时更快地找到问题根源。</p><p><strong>耐用</strong></p><p>“耐用”一方面指电脑的“健康与安全性”，另一方面也强调电脑的可扩展性和更新换代。如今，健康和环保已经成了一些电脑的技术指标。</p><p><strong>受用</strong></p><p>如何能在购买电脑后的使用中感到“受用”，这是包括品牌、服务、价格等在内的一个感性概念。我们应该根据自己的需求，将价格、服务、品牌加以比较和分析，这样才能买到真正受用的电脑。</p><h2 id="四、选购笔记本电脑"><a href="#四、选购笔记本电脑" class="headerlink" title="四、选购笔记本电脑"></a>四、选购笔记本电脑</h2><p>除了台式电脑外，常用的电脑类型还有笔记本电脑、一体机和平板电脑等，这些电脑虽然外观和体积与台式电脑不同，但核心组成都是一样的。</p><p><strong>笔记本电脑简介</strong></p><p>笔记本电脑的核心组成与台式电脑相同，也是由主板、CPU、内存、显卡、硬盘等组成的，只是各硬件的体积更小、集成度更高、制作更精密、功耗更小。因此，笔记本电脑的性能指标大部分与台式机相同，可参考台式机的技术参数购买。当然，笔记本电脑也有其独特的性能指标，如电池续航能力、接口类型和数量、是否带光驱、外观（长宽、厚度、重量、外壳和颜色）等。随着需求的不断细分，笔记本电脑也根据产品特点和定位的不同分为超极本、二合一电脑、游戏影音本、商务办公本、全能学生本等。</p><p><strong>◆超极本</strong><br>超极本（UItrabook）是Intel定义的可与iPad和Android平板电脑竞争的新一代计算机。超极本的外观以<br>“极致轻薄”为特点，其厚度可做到10mm以内，重量可轻到只有普通笔记本电脑的一半右图。</p><p><strong>◆二合一电脑</strong><br>二合一电脑是兼具传统笔记本电脑和平板电脑综合功能的产品，其屏幕和键盘可以拆开，拆开后就是平板电脑。右图为微软Surface Pro 4二合一电脑。</p><p><strong>◆商务办公本</strong><br>商务办公本主要针对商务办公用途，配置有高有低，一般更侧重于电脑的稳定性和安全性。</p><h3 id="笔记本电脑选购策略"><a href="#笔记本电脑选购策略" class="headerlink" title="笔记本电脑选购策略"></a>笔记本电脑选购策略</h3><p>现在市场上的笔记本电脑品牌众多，型号更是让人眼花缭乱，如何挑选一款合适的办公用笔记本电脑呢？</p><p><strong>◆看需要</strong></p><p>笔记本电脑的性能受品牌、价位、配置等多种因素的影响。因此，在购买笔记本电脑前，首先要知道自己的需求是什么，不能一味求贵，也不能因为贪图便宜而购买不符合需求的电脑。例如：</p><p>如果只是使用笔记本电脑进行文档处理、上网等，那么购买一款价格为3000元左右，CPU为中低档，使用集成显卡的笔记本电脑即可。</p><p>如果要使用笔记本进行图像处理、视频处理等工作，则需要购买具有高档CPU和显卡，以及大容量内存的笔记本电脑。</p><p>如果需要经常携带笔记本电脑出差，建议选择一款超薄、超轻型的笔记本；如果用户主要是在办公室或家里使用笔记本电脑，不妨选择屏幕大一点的。</p><p><strong>◆看品牌</strong></p><p>一般品牌形象好的电脑厂商，通常会在品质控制、选材、技术及维修服务上有较大的投资，其产品虽然贵一些，但质量和售后服务都有保证。因此，用户在选购笔记本电脑时，最好选择国际或国内的主流品牌，如华硕、联想、惠普、戴尔、三星、苹果等。</p><p><strong>◆看价比</strong></p><p>在购买笔记本电脑之前，最好在网上查询一下各品牌、各型号笔记本电脑的价格和配置，然后再确定购买哪一款笔记本电脑。</p><h2 id="五、了解电脑接口"><a href="#五、了解电脑接口" class="headerlink" title="五、了解电脑接口"></a>五、了解电脑接口</h2><p>作为普通办公人员，可能经常需要将鼠标、键盘、移动存储设备、打印机、传真机、扫描仪、投影机等外部设备与电脑相连，因此认识电脑的各接口并了解各接口的用途是十分必要的。下面以台式机为例了解一下各接口的名称及其作用。</p><p>在主机的前面板和背面上通常会配置一些设备接口，虽然主机的外观样式不同，但这些设备接口的功能是完全相同的，如右图所示。</p><p><img src="https://z3.ax1x.com/2021/09/08/h76ZVO.png" alt="主机接口例图"></p><p><strong>电源接口</strong></p><p>用来连接市电电源，为主机供电。注意开机状态下不能拔下电源线。</p><p><strong>PS/2接口</strong></p><p>用来连接PS/2接口的鼠标和键盘。其中，紫色接口用来连接键盘；绿色接口用来连接鼠标。此接口不支持热插拔（即只能在关机状态下插接设备）。</p><p><strong>DVI接口</strong></p><p>DVI是Digital Visual Interface的缩写，又称数字视频接口。该接口用来连接液晶显示器或投影机等，它直接输出数字显示信号，具有高工作频率、高带宽的特点，因而可以支持较高的显示分辨率。DVI接口不支持热插拔。</p><p><strong>VGA接口</strong></p><p>此接口输出模拟显示信号，也被称为D-Sub接口，主要用于连接显示器和投影机等，为15针D形接口。由于其输出的是模拟信号，因此显示效果没有DVI接口好。VGA接口不支持热插拔。</p><p><strong>HDMI接口</strong></p><p>HDMI是High Definition Multimedia Interface的缩写，中文名称是高清晰多媒体接口。HDMI接口能高品质地传输未经压缩的高清视频和多声道音频数据，最高数据传输速度为5Gb/s，主要用于连接液晶电视、显示器等设备。</p><p><strong>音频接口</strong></p><p>左侧浅蓝色为音频输入孔，用来接拾音器；中间浅绿色为音频输出孔，用来接音箱或耳机；右侧粉红色为音频输入孔，用来接麦克风。音频接口支持热插拔。</p><p><strong>USB接口</strong></p><p>USB是Universal Serial Bus（通用串行总线）的缩写。目前，大多数电脑外设都使用USB接口，如打印机、扫描仪、数码相机等。USB接口有USB 1.0，USB 2.0和USB3.0三种类型，传输速率分别为12Mb/s，480Mb/s和5Gb/s。USB 2.0和USB3.0是相互兼容的，但是要满足USB3.0传输，首先电脑主板要支持USB3.0，其次使用的设备也要支持USB3.0。USB接口支持热插拔。</p><p><strong>网络接口（RJ-45）</strong></p><p>此接口用来连接网线，支持热插拔。</p><hr><p>除了上述接口外，部分电脑还提供DisplayPort和IEEE1394等接口，如下图所示。</p><p><img src="https://z3.ax1x.com/2021/09/08/hHXdoD.png" alt="接口例图"></p><p><strong>DisplayPort接口</strong></p><p>DisplayPort也是一种高清数字显示接口标准，可以连接显示器、电视、DVD播放机等设备，它提供的数据传输速度可达10.8Gb/s。</p><p><strong>IEEE1394接口</strong></p><p>IEEE1394接口是为了增强外部多媒体设备与电脑连接性能而设计的高速串行总线，传输速率达到400Mb/s。IEEE 1394接口的特点是在传输数据时不占用CPU资源，主要用来连接数码摄像机及其他一些视频采集设备。如果主板上没有IEEE1394接口，可以通过购买IEEE1394卡来连接这些设备。</p><h2 id="六、组装硬件与安装软件"><a href="#六、组装硬件与安装软件" class="headerlink" title="六、组装硬件与安装软件"></a>六、组装硬件与安装软件</h2><p>电脑的组装包括硬件组装和软件安装两个方面，应该按照正确的步骤有条不紊地进行，下面将分别介绍电脑硬件和电脑软件的安装流程。</p><h3 id="1-组装电脑硬件的流程"><a href="#1-组装电脑硬件的流程" class="headerlink" title="1.组装电脑硬件的流程"></a>1.组装电脑硬件的流程</h3><p><strong>安装CPU/散热器</strong></p><p>把CPU安装到主板上，然后装好CPU散热器。</p><p><strong>安装内存</strong></p><p>把内存安装在主板上。</p><p><strong>安装主板</strong></p><p>将主板安装到机箱中。</p><p><strong>安装电源</strong></p><p>将电源安装到机箱中。</p><p><strong>安装硬盘和光驱</strong></p><p>把硬盘和光驱安装到机箱的相应位置上。</p><p><strong>安装板卡</strong></p><p>将显卡、声卡和网卡等扩展板卡安装在主板的扩展插槽上。</p><p><strong>合上机箱</strong></p><p>检查安装、连接正确无误后，整理机箱内的线材，然后合上机箱。</p><p><strong>连接各种线缆</strong></p><p>即机箱前置接口和按钮信号线，主板、显卡、硬盘和光驱电源线，以及硬盘和光驱等的数据线。</p><p><strong>连接外部设备</strong></p><p>连接键盘、鼠标、显示器和音箱（或耳麦）等，最后连接电源线。</p><h3 id="2-安装电脑软件的流程"><a href="#2-安装电脑软件的流程" class="headerlink" title="2.安装电脑软件的流程"></a>2.安装电脑软件的流程</h3><p>按照上述方法完成电脑硬件的安装后，即可安装软件，可以参考以下流程。</p><p><strong>硬盘分区/格式化</strong></p><p>新硬盘在使用前必须先分区并进行格式化，该操作可以在安装操作系统时进行，也可单独进行。</p><p><strong>安装操作系统</strong></p><p>在电脑中安装Windows7，Windows 10或Linux等操作系统。</p><p><strong>安装驱动程序</strong></p><p>安装操作系统无法自动安装的硬件驱动程序，如显卡驱动等。</p><p><strong>安装应用软件</strong></p><p>安装杀毒软件、图形处理软件、压缩/解压缩软件、办公软件、多媒体播放软件等常用软件。</p><h2 id="七、选购其他设备"><a href="#七、选购其他设备" class="headerlink" title="七、选购其他设备"></a>七、选购其他设备</h2><p>要实现办公自动化，除了购置办公电脑外，还需要添置打印机、扫描仪、复印机、传真机和投影机等常用办公设备。在本任务中，我们就来初步认识一下这些办公设备，了解选购这些办公设备时需要注意的事项。</p><h3 id="一、选购打印机"><a href="#一、选购打印机" class="headerlink" title="一、选购打印机"></a>一、选购打印机</h3><p>打印机是办公自动化中比较重要的输出设备，其主要作用是将电脑编辑的文字、表格和图片等信息打印到纸上，方便用户查看。</p><p>打印机的类型：办公中常用的打印机按工作方式和原理可分为针式打印机、喷墨打印机和激光打印机。</p><p>打印机的选购要点<br>在选购针式打印机时，应从现实需要、性能指标、使用寿命、功能优劣、是否安装字库、服务质量和打印噪声这几个方面进行考虑。<br>在选购喷墨打印机时，应注意墨滴控制、打印精度、耗材成本和打印速度几个方面，还应注意是否能直接打印照片。<br>在选购激光打印机时，应从打印质量、打印速度、可靠性、可扩展性、易用性、价格、耗材和售后服务几个方面进行考虑。</p><h3 id="二、选购扫描仪"><a href="#二、选购扫描仪" class="headerlink" title="二、选购扫描仪"></a>二、选购扫描仪</h3><p>扫描仪是一种输入设备，它可以将图片、照片、胶片以及文稿资料等书面材料扫描后输入到电脑中并以图片文件格式保存起来。</p><p>扫描仪的类型：扫描仪的种类有很多，常见的有平板式扫描仪、馈纸式扫描仪、便携式扫描仪等。</p><h3 id="三、选购复印机"><a href="#三、选购复印机" class="headerlink" title="三、选购复印机"></a>三、选购复印机</h3><p>复印技术是将纸或其他媒介上的内容转印到另外一个媒介上的技术。由于人们在日常办公中经常需要复印资料，复印机已经成为现代办公不可缺少的一种设备。</p><h3 id="四、选购传真机"><a href="#四、选购传真机" class="headerlink" title="四、选购传真机"></a>四、选购传真机</h3><p>传真机是把记录在纸上的文字、图表和相片等静止的图像变换成电信号，经传输线路传递到接收方，在接收方获得与发送原稿相似的记录图像的通信设备。</p><h3 id="五、选购多功能一体机"><a href="#五、选购多功能一体机" class="headerlink" title="五、选购多功能一体机"></a>五、选购多功能一体机</h3><p>简单来说，多功能一体机就是集打印、复印、扫描和传真等功能于一体的机器，如图所示。多功能一体机的优点是节省成本和物理空间，能实现多种功能，缺点是容易出故障且维修困难，有时会因为局部故障而影响整体使用。</p><h3 id="六、选购投影机"><a href="#六、选购投影机" class="headerlink" title="六、选购投影机"></a>六、选购投影机</h3><p>投影机又称投影仪，是通过数字光处理技术或者LCD液晶成像技术将图像或视频投射或反射到屏幕上的设备，可以通过不同的信号源，如计算机、手机、DVD、DV接入相应的图像和视频信号，实现播放。</p><h3 id="七、选购移动存储设备"><a href="#七、选购移动存储设备" class="headerlink" title="七、选购移动存储设备"></a>七、选购移动存储设备</h3><p>使用移动存储设备可以方便地将办公文件随身携带或传递到其他办公电脑中。</p><p><strong>移动存储设备的类型</strong><br>移动存储设备主要包括U盘、移动硬盘以及各种存储卡。</p><p><strong>U盘</strong><br>口U盘是USB盘的简称，是一种常见的移动存储设备，如图1-38所示。它的特点是体积小巧、存储容量大、价格便宜。目前常见的U盘的容量为4GB、8GB、16GB、32GB、64GB。</p><p><strong>移动硬盘</strong><br>口移动硬盘是以普通硬盘为存储介质的存储产品，如图所示。与U盘相比，它的存储容量更大、存储速度更快，但价格相对昂贵一些。</p><p><strong>存储卡</strong><br>口存储卡有SD、MicroSD（TF）等。MiniSD卡由SD卡发展而来，性能和传统的SD卡并无大的区别，只是体积更小。SD卡常用于DV、数码相机等设备；MicroSD卡常用于手机或数码相机等设备。</p><h3 id="八、选购其他办公设备"><a href="#八、选购其他办公设备" class="headerlink" title="八、选购其他办公设备"></a>八、选购其他办公设备</h3><p>在日常办公中，除了前面介绍的打印机、复印机、扫描仪和传真机等办公设备外，有时可能还会用到碎纸机、手写板、数码相机。光盘刻录机等办公设备。由于篇幅有限，在此不再介绍，只介绍选购碎纸机和手写板的相关知识。</p><p><strong>选购碎纸机</strong><br>碎纸机可以把纸长分害割成很多的细小纸片，以达到保密的目的。<br>一些当碎纸机还可以切害割信用卡、光盘等。<br>根据使用对象、使用环境的不同，可将碎纸机分为手摇碎纸机桌面型碎低机、小型个人/家用碎纸机、中型办公碎纸机、大型办公碎纸机等几种。</p><p><strong>选购手写板</strong><br>手写板（又称数位板或手绘板）是一种计算机输入设备，它通常由一块板子和一支压感笔组成，作用与键盘类似，用于文字、符合和图形的输入。<br>根据工作原理的不同，手写板可分为电阻式手写板、电磁式手写板和电容式手写板。</p><h1 id="办公自动化软件系统"><a href="#办公自动化软件系统" class="headerlink" title="办公自动化软件系统"></a>办公自动化软件系统</h1><h2 id="安装Windows-7操作系统"><a href="#安装Windows-7操作系统" class="headerlink" title="安装Windows 7操作系统"></a>安装Windows 7操作系统</h2><p>操作系统是使用电脑时的操作平台，任何电脑都需要安装操作系统后才能正常使用。因此，安装好电脑硬件后，首要任务是为其安装上操作系统及硬件驱动程序。</p><h3 id="一、了解Windows操作系统的版本和安装方式。"><a href="#一、了解Windows操作系统的版本和安装方式。" class="headerlink" title="一、了解Windows操作系统的版本和安装方式。"></a>一、了解Windows操作系统的版本和安装方式。</h3><p><strong>1.Windows操作系统的版本</strong><br>Windows操作系统包括Windows XP，Windows Vista，Windows 7，Windows 8和Windows 10等。其中，Windows XP和Windows Vista已逐渐被淘汰；Windows7是目前的主流；Windows 8和Windows 10由于用户使用习惯的原因，目前还没有真正流行。<br>Windows7操作系统按功能由低到高分为6个版本：入门版（Starter）、家庭普通版（Home Basic）、家庭高级版（Home Premium）、专业版（Professional）、旗舰版（Ultimate）和企业版（Enterprise），其中使用旗舰版（Ultimate）的用户最多。<br>此外，根据CPU一次处理数据的能力是32位还是64位，Windows系统还分为32位和64位两种类型。32位操作系统支持的最大内存为4GB；64位操作系统支持的最大内存可以很大。由于目前CPU都是64位，支持64位的操作系统，因此如果内存大于4GB，建议安装64位的Windows7操作系统，以充分利用内存。</p><p><strong>2.操作系统的安装方式</strong></p><p>安装操作系统主要有以下几种方式。</p><p>原装光盘引导安装<br>此方式是使用Windows原版（非Ghost版）安装光盘进行安装。安装时，需要将电脑设置为光驱启动，然后将安装光盘放入光驱，重新开机引导系统，安装程序会自动启动，用户可根据安装程序的提示一步一步进行安装。安装过程中可进行硬盘分区、选择安装位置（磁盘分区）、设置网络和用户等操作。</p><p>安装Ghost版的操作系统<br>用户也可以从网上下载Ghost版Windows操作系统的ISO镜像文件，将其刻录到光盘或拷贝到U盘中；或直接购买Ghost版Windows操作系统的安装光盘。安装此类操作系统时，首先需要将电脑设置为光驱或U盘启动，然后选择相应选项进行安装。Ghost版的Windows操作系统安装速度很快，且无需用户在安装过程中进行任何设置。</p><h3 id="二、了解U盘启动盘的作用，以及使用U盘作为启动盘的优点。"><a href="#二、了解U盘启动盘的作用，以及使用U盘作为启动盘的优点。" class="headerlink" title="二、了解U盘启动盘的作用，以及使用U盘作为启动盘的优点。"></a>二、了解U盘启动盘的作用，以及使用U盘作为启动盘的优点。</h3><p>启动盘又称紧急启动盘或安装启动盘，它是写入操作系统镜像文件的具有特殊功能的移动存储介质，主要用来在操作系统崩溃时进行修复或重装系统。早期的启动盘主要是光盘或者软盘，随着移动存储技术的成熟，逐渐出现了以U盘和移动硬盘作为载体的启动盘（即U盘启动盘）。</p><h3 id="三、了解驱动程序的作用和分类，以及获取驱动程序的方法。"><a href="#三、了解驱动程序的作用和分类，以及获取驱动程序的方法。" class="headerlink" title="三、了解驱动程序的作用和分类，以及获取驱动程序的方法。"></a>三、了解驱动程序的作用和分类，以及获取驱动程序的方法。</h3><p>安装完操作系统后，可能会出现屏幕分辨率不能调到最佳、播放影音时没有声音或无法连接到网络等问题。遇到这些问题时，首先应确认是否安装了相关硬件的驱动程序。</p><p>驱动程序的作用和分类<br>驱动程序是一种用于实现操作系统与硬件设备通信的特殊程序，相当于硬件的接口，操作系统只有通过这个接口才能控制硬件设备的工作。也就是说，正是通过驱动程序，各种硬件设备才能正常运行，达到既定的工作效果，否则就无法正常工作。例如，没有网卡驱动，便不能使用网络；没有声卡驱动，便不能播放声音。</p><p>驱动程序的获取方法<br>驱动程序可以通过操作系统自带、硬件设备附带光盘和网上下载三种途径获得。<br>如前所述，现在的操作系统，如Windows7系统中已经附带了大量的驱动程序，这样在系统安装完成后，便会自动为相关硬件安装上驱动程序。<br>各种硬件设备的生产厂商都会针对自己的硬件设备特点开发专门的驱动程序，并在销售硬件设备的同时一并免费提供给用户。<br>用户还可以在互联网中找到硬件设备生产厂家的官方网站或在其他软件网站中03下载相应的驱动程序。此外，也可以通过第三方软件，如驱动精灵、驱动人生等自动从网上搜索与电脑硬件相匹配的驱动程序并安装。</p><h3 id="四、掌握制作U盘启动盘的方法，并能利用它启动电脑，进入WinPE系统。"><a href="#四、掌握制作U盘启动盘的方法，并能利用它启动电脑，进入WinPE系统。" class="headerlink" title="四、掌握制作U盘启动盘的方法，并能利用它启动电脑，进入WinPE系统。"></a>四、掌握制作U盘启动盘的方法，并能利用它启动电脑，进入WinPE系统。</h3><p>由于U盘启动盘携带方便，且不受电脑有无光驱的限制，因此已成为首选装机工具。一般情况下，装机人员会先制作U盘启动盘，然后将Ghost版Windows7操作系统的镜像文件解压并复制到U盘，再将安装驱动程序的工具（如驱动精灵、驱动人生等）及常用软件拷贝到U盘中，这样U盘装机工具便制作好了，随时随地可以使用。</p><h3 id="五、能够在实践中利用U盘快速安装Windows操作系统。"><a href="#五、能够在实践中利用U盘快速安装Windows操作系统。" class="headerlink" title="五、能够在实践中利用U盘快速安装Windows操作系统。"></a>五、能够在实践中利用U盘快速安装Windows操作系统。</h3><p>步骤1</p><p>准备好U盘启动盘和Ghost版Windows 7操作系统的镜像文件。将Ghost版Windows7操作系统的ISO镜像文件解压缩，再将解压缩所得文件夹中以GHO为扩展名的Ghost映像文件复制到U盘启动盘中。</p><p>步骤2</p><p>重肩电脑，在出现开机画面时按【Del】键，进入BIOS设置程序。</p><p>步骤3</p><p>利用向右方向键移动光标，使其停留在Boot选项卡上，再按向下方向键选择Hard Disk Drives选项，按【Enter】键，从打开的界面中选择1st Drive或相似选项，按【Enter】键，从弹出的界面中选择U盘启动盘，按【Enter】键。</p><p>步骤4</p><p>按【Esc】键返回Boot主界面，按向上方向键选择Boot Device Priority或相似选项，按【Enter】键，从打开的界面中选择1st Boot Device或相似选项，然后按【Enter】键，从弹出的界面中选择U盘作为第一启动设备，按【Enter】键。</p><p>步骤5</p><p>选择2nd Boot Device或相似选项，按【Enter】键，从弹出的界面中选择硬盘作为第二启动设备，按【Enter】键，再按【Esc】键返回Boot主界面。</p><p>步骤6</p><p>按【F10】键，在弹出的界面中按【Enter】键（也可能要先按【Y】键），保存并退出BIOS设置程序。此时电脑将重启，并从U盘启动，进入U盘启动盘工具界面。</p><p>步骤7</p><p>在该界面中通过按键盘的上、下方向键选择好菜单，按【Enter】键。</p><p>步骤8</p><p>稍微等待一会儿，即可进入Windows PE系统。</p><p>步骤9</p><p>如果需要，可先对硬盘进行分区，此处我们沿用磁盘上原有的分区，直接双击Windows PE桌面上的“一键装机”。</p><p>步骤10</p><p>在弹出的对话框中可看到系统自动选择了“还原分区”单选按钮，并选中了U盘中的Ghost映像文件，如果选择错误或没有自动选择，可单击其后的“打开”按钮，从弹出的对话框中选择Ghost映像文件；接着在对话框下方的列表中选择要还原到的分区（即安装Windows7的分区，一般为C盘）；最后单击“确定”按钮。</p><p>步骤11</p><p>弹出对话框提示本操作将删除C盘上的数据，选中“完成后重启”复选框，视情况选择其他两个复选框，然后单击“是”按钮，如图所示。</p><p>步骤12</p><p>此时自动启动Ghost软件并将Ghost映像文件还原到C盘中。完成后将自动重启并自动安装Windows7操作系统，用户不用再进行任何操作。</p><h3 id="六、能够使用驱动精灵安装驱动程序。"><a href="#六、能够使用驱动精灵安装驱动程序。" class="headerlink" title="六、能够使用驱动精灵安装驱动程序。"></a>六、能够使用驱动精灵安装驱动程序。</h3><p>一般来说，驱动程序都可以在产品附赠的光盘中找到，如果光盘已经丢失，可以根据产品型号到官方网站下载；还可以运用一些软件（如驱动精灵、驱动人生等）检测硬件驱动安装情况并自动下载和安装适合的驱动程序。其中，驱动精灵是一款集驱动管理和硬件检测于一体的管理工具，可实现驱动程序下载、安装、备份、恢复和删除等功能。</p><h2 id="安装与卸载应用软件"><a href="#安装与卸载应用软件" class="headerlink" title="安装与卸载应用软件"></a>安装与卸载应用软件</h2><table><thead><tr><th>软件用途</th><th>软件推荐</th><th>说明</th></tr></thead><tbody><tr><td>文字处理</td><td>office</td><td>Office是使用最为泛的办公软件，它包含多个组件，如Word、Excel、powerpoint等</td></tr><tr><td>压缩/解压缩工具</td><td>WinRAR</td><td>WinRAR是目前最好用的压缩/解压缩软件</td></tr><tr><td>图像处理</td><td>Photoshop</td><td>Photoshop是目前功能最强大的图像处理软件</td></tr><tr><td>图像浏览</td><td>ACDSee</td><td>使用ACDSee可以方便地查看、管理电脑中的图像文件</td></tr><tr><td>多媒体播放</td><td>potplayer、VLC</td><td>可用于播放本地视频</td></tr><tr><td>杀毒软件</td><td>360杀毒、卡巴斯基、腾讯安全管家、火绒</td><td>只要电脑上网，就有可能感染病毒，为避免遭受病毒侵害，安装一款杀毒软件是必须的</td></tr><tr><td>下载工具</td><td>迅雷</td><td>下载工具可以提高下载文件的速度，而且支持断点续传</td></tr><tr><td>网络防火墙</td><td>360安全卫士</td><td>安装网络防火墙能够阻挡一些低级黑客的攻击</td></tr><tr><td>通信工具</td><td>微信、QQ、Skype</td><td>利用此类软件可方便地与远方的朋友或商业伙伴交流</td></tr><tr><td>输入法</td><td>搜狗拼音输入法</td><td>利用它可以根据拼音快速输入汉字</td></tr><tr><td>浏览器</td><td>360安全浏览器、edge、火狐、charm</td><td>利用它可以快速安全地访问网页</td></tr></tbody></table><h3 id="软件安装注意事项"><a href="#软件安装注意事项" class="headerlink" title="软件安装注意事项"></a>软件安装注意事项</h3><p>安装软件虽然简单，但需要注意的事项却很多。稍不注意，就会使我们的电脑变得不稳定。很多系统问题，如蓝屏、死机、启动速度慢等大都是由软件而引起的，很多电脑病毒也是由软件而起。下面就来介绍软件安装过程中的各种注意事项。</p>]]></content>
      
      
      <categories>
          
          <category> 办公自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 办公自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PS</title>
      <link href="2021/09/05/PS/PS/"/>
      <url>2021/09/05/PS/PS/</url>
      
        <content type="html"><![CDATA[<h1 id="认识Ps软件，如何学习本课程"><a href="#认识Ps软件，如何学习本课程" class="headerlink" title="认识Ps软件，如何学习本课程"></a>认识Ps软件，如何学习本课程</h1><h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><p>photoshop是由Adobe公司开发的图形圈像处理和编辑软件。它功能强大、易学易用、深受图形图像处理爱好者和平面设计人员的喜爱，已经成为这一领域最流行的软件之一。<br>运用领域</p><h2 id="平面设计"><a href="#平面设计" class="headerlink" title="平面设计"></a>平面设计</h2><p>平面设计是Photoshop应用最为广泛的领域，无论是我们正在阅读的图书封面，还是大街上看到的招帖、海报，这些具有丰富图像的平面印刷品，基本上都需要Photshop软件对图像进行处理。</p><h2 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h2><p>UI设计（或称界面设计）是指对软件的人机交互、操作逻辑、界面美观的整体设计，也叫界面设计。</p><h2 id="商业精修"><a href="#商业精修" class="headerlink" title="商业精修"></a>商业精修</h2><p>对产品或者人像进行后期的精细处理（光影、材质、体积、透视、瑕疵、色调）</p><h2 id="创意合成"><a href="#创意合成" class="headerlink" title="创意合成"></a>创意合成</h2><p>创意合成是Photoshop的特长，通过Photoshop的处理，可以将不同的对象组合在一起，产生各类绚丽多姿、光怪陆离的效果。</p><h2 id="摄影后期"><a href="#摄影后期" class="headerlink" title="摄影后期"></a>摄影后期</h2><p>摄影师期作为一种对视觉要求非常严格的工作，其最终成品往往要经过photoshop的修改才能得到满意的效果。</p><h2 id="插画绘图"><a href="#插画绘图" class="headerlink" title="插画绘图"></a>插画绘图</h2><p>插图（画）是运用图案表现的形象，本着审美与实用相统一的原则，尽量使线条，形态清晰明快，制作方便。插图是世界都能通用的语言，其设计在商业应用上通常分为人物、动物、商品形象。</p><h1 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h1><p><img src="https://z3.ax1x.com/2021/09/04/h22Xrj.png" alt="PS软件界面"></p><h1 id="颜色模式的认识"><a href="#颜色模式的认识" class="headerlink" title="颜色模式的认识"></a>颜色模式的认识</h1><h3 id="色彩的常用模式"><a href="#色彩的常用模式" class="headerlink" title="色彩的常用模式"></a>色彩的常用模式</h3><ol><li>RGB模式：电子屏幕计算颜色(R:红    G:绿    B:蓝)</li><li>CMYK模式：油墨印刷计算颜色：(C:青色    M:品红色    Y:黄色    K:黑色)</li><li>灰度模式</li></ol><h3 id="颜色填充"><a href="#颜色填充" class="headerlink" title="颜色填充"></a>颜色填充</h3><p>1.色彩基础：色相(H)，饱和度(S)，名度(B)</p><p>2.拾色器认识</p><p>3.颜色填充：</p><p>填充前景色：<kbd>Alt</kbd>+<kbd>Delete</kbd></p><p>填充背景色：<kbd>Ctrl</kbd>+<kbd>Delete</kbd></p><h1 id="PS格式"><a href="#PS格式" class="headerlink" title="PS格式"></a>PS格式</h1><h2 id="文件常用格式"><a href="#文件常用格式" class="headerlink" title="文件常用格式"></a>文件常用格式</h2><h3 id="PS原理"><a href="#PS原理" class="headerlink" title="PS原理"></a>PS原理</h3><p>通过修改像素来修改图片</p><h3 id="分辨率的理解"><a href="#分辨率的理解" class="headerlink" title="分辨率的理解"></a>分辨率的理解</h3><p>分辫率越大尺寸越小</p><p>分辨率越小尺寸越大</p><h3 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h3><h4 id="JPEG-做兼职或平时预览的图片"><a href="#JPEG-做兼职或平时预览的图片" class="headerlink" title="JPEG(做兼职或平时预览的图片)"></a>JPEG(做兼职或平时预览的图片)</h4><p>常用的图片格式</p><p>通用格式，内存小画质高，压缩速度快</p><p>清晰度可以根据需求来调动</p><p>发给客户的不要发高清的，除非是支付完设计费用。（防止白嫖）品质越高画面越细腻<br>文件大小根据实际情况（网页上都布要求）</p><p>兼职的时候需要加水印</p><h4 id="GlF（动范图片）兼职微信表情包、电商动图"><a href="#GlF（动范图片）兼职微信表情包、电商动图" class="headerlink" title="GlF（动范图片）兼职微信表情包、电商动图"></a>GlF（动范图片）兼职微信表情包、电商动图</h4><h4 id="PNG（无背景清渐原图）"><a href="#PNG（无背景清渐原图）" class="headerlink" title="PNG（无背景清渐原图）"></a>PNG（无背景清渐原图）</h4><p>一般是素材文件格式、免抠图</p><p>可以是透明底</p><h4 id="PSD（PS制作修改源文件）"><a href="#PSD（PS制作修改源文件）" class="headerlink" title="PSD（PS制作修改源文件）"></a>PSD（PS制作修改源文件）</h4><p>方便修改<br>一般不要发源文件给对方<br>版权</p><h1 id="认识选区"><a href="#认识选区" class="headerlink" title="认识选区"></a>认识选区</h1><h2 id="选区的原理"><a href="#选区的原理" class="headerlink" title="选区的原理"></a>选区的原理</h2><p>工具栏的工具</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><p><strong>建立、取消、加选、减选、反选</strong></p><p>有“蚂蚁线”的都叫选区工具，<kbd>Ctrl</kbd>+<kbd>D</kbd>取消选区</p><p>按住<kbd>Shift</kbd>可以增加选区，按住<kbd>Alt</kbd>键能减少选区</p><p>按住<kbd>Shift</kbd>+<kbd>Alt</kbd>键将选择两款区域的相交区域</p><p><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>I</kbd>是反选，将所选择的区域反向选择</p><p><strong>羽化</strong></p><p>先调数值</p><p><kbd>Shift</kbd>+<kbd>F6</kbd></p><p><strong>复制图层</strong></p><p><kbd>Ctrl</kbd>+<kbd>J</kbd>（可用作抠图）</p><p><strong>调出选区</strong></p><p><kbd>Ctrl</kbd>+左键</p><p>取消是<kbd>Ctrl</kbd>+<kbd>D</kbd></p><h1 id="选区工具组"><a href="#选区工具组" class="headerlink" title="选区工具组"></a>选区工具组</h1><h2 id="选框工具"><a href="#选框工具" class="headerlink" title="选框工具"></a>选框工具</h2><p>矩形选区，按住<kbd>Shift</kbd>后是正方形，按住<kbd>空格</kbd>可以移动选区</p><p>同样的，椭圆选区按住<kbd>Shift</kbd>的时候选区是圆形</p><h2 id="套索工具"><a href="#套索工具" class="headerlink" title="套索工具"></a>套索工具</h2><p><strong>套索工具</strong></p><p>直接圈起来</p><p>可用在要求不精确，可以快速选择的区域</p><p><strong>多边型套索工具</strong></p><p>不将之与开头相结合起来的话，它是不会形成选区的</p><p>多次移动后找不到开始的位置，双击空白处可自动找到源头</p><p><strong>磁性套索工具</strong></p><p>会沿着所选择的边缘自动吸附</p><p>不精确</p><h2 id="快速选择工具"><a href="#快速选择工具" class="headerlink" title="快速选择工具"></a>快速选择工具</h2><p>抠图的思路：</p><p>图形是否规则</p><p>色彩对比度是否强烈</p><p>所扣取对象轮廓是否清晰</p><h2 id="魔棒工具"><a href="#魔棒工具" class="headerlink" title="魔棒工具"></a>魔棒工具</h2><p>容差最大255，连续的位置，相同的色彩都会被选择</p><h2 id="色彩范围"><a href="#色彩范围" class="headerlink" title="色彩范围"></a>色彩范围</h2><p>容差</p><p>吸管</p><h2 id="内容识别"><a href="#内容识别" class="headerlink" title="内容识别"></a>内容识别</h2><p><kbd>Shift</kbd>+<kbd>F</kbd>可以根据周围环境电脑自动进行计算而得出</p><h2 id="选择并遮住"><a href="#选择并遮住" class="headerlink" title="选择并遮住"></a>选择并遮住</h2><h1 id="修复工具组"><a href="#修复工具组" class="headerlink" title="修复工具组"></a>修复工具组</h1><h2 id="污点修复组"><a href="#污点修复组" class="headerlink" title="污点修复组"></a>污点修复组</h2><p><strong>画笔大小调整<kbd>Alt</kbd>+右键，向右变大，向左变小</strong></p><h3 id="污点修复画笔工具"><a href="#污点修复画笔工具" class="headerlink" title="污点修复画笔工具"></a>污点修复画笔工具</h3><p>根据周围的情况将不一样的地方进行去除</p><h3 id="修复画笔工具"><a href="#修复画笔工具" class="headerlink" title="修复画笔工具"></a>修复画笔工具</h3><p>按住<kbd>Alt</kbd>键选择一个区域进行复制遮挡</p><p>画笔的硬度大小的调整，按住<kbd>Alt</kbd>键，点击鼠标右键，向上硬度变小，向下硬度变大</p><h3 id="修补工具"><a href="#修补工具" class="headerlink" title="修补工具"></a>修补工具</h3><p>自己选择污点的区域，拖动到好的地方</p><h3 id="内容感知移动工具"><a href="#内容感知移动工具" class="headerlink" title="内容感知移动工具"></a>内容感知移动工具</h3><p>结构和颜色</p><h3 id="红眼工具"><a href="#红眼工具" class="headerlink" title="红眼工具"></a>红眼工具</h3><p>使用之后点击红眼部分会将红眼换为黑色</p><h2 id="仿制图章"><a href="#仿制图章" class="headerlink" title="仿制图章"></a>仿制图章</h2><h3 id="Alt键复制源"><a href="#Alt键复制源" class="headerlink" title="Alt键复制源"></a>Alt键复制源</h3><p>选择画笔大小，按住<kbd>Alt</kbd>键就会有靶子的形式，拖动进行覆盖</p><p>按住<kbd>Alt</kbd>移动周围景象，一点点替换</p><h3 id="调整大小和边缘软硬"><a href="#调整大小和边缘软硬" class="headerlink" title="调整大小和边缘软硬"></a>调整大小和边缘软硬</h3><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>勾选：与其相平行</p><p>未勾选：每次都重新从所选择的位置开始</p><h2 id="橡皮擦"><a href="#橡皮擦" class="headerlink" title="橡皮擦"></a>橡皮擦</h2><h3 id="橡皮擦-1"><a href="#橡皮擦-1" class="headerlink" title="橡皮擦"></a>橡皮擦</h3><p>直接进行擦除</p><h3 id="背景橡皮擦"><a href="#背景橡皮擦" class="headerlink" title="背景橡皮擦"></a>背景橡皮擦</h3><p>将容差调小后，只会擦除某一背景色</p><p>一次选项</p><h3 id="魔术橡皮擦"><a href="#魔术橡皮擦" class="headerlink" title="魔术橡皮擦"></a>魔术橡皮擦</h3><p>直接删除背景色</p><h1 id="画笔工具"><a href="#画笔工具" class="headerlink" title="画笔工具"></a>画笔工具</h1><h2 id="绘画画笔工具"><a href="#绘画画笔工具" class="headerlink" title="绘画画笔工具"></a>绘画画笔工具</h2><h3 id="画笔工具-1"><a href="#画笔工具-1" class="headerlink" title="画笔工具"></a>画笔工具</h3><p>基本操作</p><ol><li>调整颜色（前景色）</li><li>调整大小和软硬（硬度越大，边缘越明显，硬度越小，边缘越柔和）（按住<kbd>Alt</kbd>和鼠标右键画笔向右放大，向左缩小，硬度向上变小，向下变大）</li><li>不透明度和流量（不透明度50%的时候，单点和连续的效果都是50%。流量单点才会是所选择的数额，连续拖动时不会改变）</li><li>笔刷（）</li></ol><p>画笔设置</p><p>导入画笔（双击安装）</p><h3 id="铅笔工具"><a href="#铅笔工具" class="headerlink" title="铅笔工具"></a>铅笔工具</h3><p>只有大小调整</p><p>方便我们绘图、描边、勾边、构图等</p><h3 id="颜色替换工具"><a href="#颜色替换工具" class="headerlink" title="颜色替换工具"></a>颜色替换工具</h3><p>和橡皮擦有些类似，将背景替换</p><h3 id="混和器画笔工具"><a href="#混和器画笔工具" class="headerlink" title="混和器画笔工具"></a>混和器画笔工具</h3><p>将两种颜色进行混合，使其混合的比较自然。</p><p>每次描边后清理画笔</p><p>上方的参数越大，过度的效果就会非常强烈，有时会比较生硬</p><p>上方的参数越小，过度的效果就比较缓慢柔和</p><h2 id="历史记录画笔工具"><a href="#历史记录画笔工具" class="headerlink" title="历史记录画笔工具"></a>历史记录画笔工具</h2><p>历史记录画笔工具在窗口下方，点击之后就会打开，每一步操作都会被记录下来。</p><h1 id="渐变工具"><a href="#渐变工具" class="headerlink" title="渐变工具"></a>渐变工具</h1><h2 id="渐变工具-1"><a href="#渐变工具-1" class="headerlink" title="渐变工具"></a>渐变工具</h2><h3 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h3><ol><li>渐变预设，选择、新建、删除</li><li>渐变调整，颜色、位置、不同明度</li><li>渐变样式</li></ol><h2 id="油漆桶工具"><a href="#油漆桶工具" class="headerlink" title="油漆桶工具"></a>油漆桶工具</h2><p>9过</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Apk的基本结构</title>
      <link href="2021/09/04/Android%E9%80%86%E5%90%91/2.Apk%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
      <url>2021/09/04/Android%E9%80%86%E5%90%91/2.Apk%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>用解压缩软件打开apk文件后</p><h1 id="assets"><a href="#assets" class="headerlink" title="assets"></a>assets</h1><p>assets，其中存放着未经过编译的资源，可以取出直接使用</p><p>资源文件（图片、音频、数据库、网页、配置文件等）</p><h1 id="lib"><a href="#lib" class="headerlink" title="lib"></a>lib</h1><p>lib，其中主要存放着so文件，也就是本地代码</p><p>其为cpu的平台</p><h2 id="有时候会有libs文件夹"><a href="#有时候会有libs文件夹" class="headerlink" title="有时候会有libs文件夹"></a>有时候会有libs文件夹</h2><p>这个文件夹一般是引用的第三方的东西（java包等）</p><h1 id="META-INF"><a href="#META-INF" class="headerlink" title="META-INF"></a>META-INF</h1><p>Apk的签名文件</p><p>每个Apk打包编译之后都要做一个Apk的签名，这个Apk签名在正常的安卓系统中是要做验证的</p><p>如果将apk中的文件改了，就需要重新签名</p><p>或者使用幸运破解器破解系统核心，这种方法不需要重新签名</p><h1 id="res"><a href="#res" class="headerlink" title="res"></a>res</h1><p>resources.arsc资源加密（语言包）</p><p>res文件夹一般放的都是程序的图标，样式，布局</p><p>其中的文件通常是经过编译的，要想看到原本的内容就需要反编译的，工具有apktool等</p><h1 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h1><p>AndroidManifest.xml是清单文件（图标、界面、权限、入口）</p><h1 id="classes-dex"><a href="#classes-dex" class="headerlink" title="classes.dex"></a>classes.dex</h1><p>classes.dex是运行在虚拟机上的文件，其中为Smali代码，也是源代码</p><p>较大的apk不止一个classes文件，所以进行反编译时要将其合成起来</p><h1 id="JVM、DVM与ART"><a href="#JVM、DVM与ART" class="headerlink" title="JVM、DVM与ART"></a>JVM、DVM与ART</h1><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><p>Java虚拟机，运行的是，java文件编译后的.class文件</p><h2 id="Dalvik"><a href="#Dalvik" class="headerlink" title="Dalvik"></a>Dalvik</h2><p>Android4.4及以前使用的都是Dalvik虚拟机，我们知道Apk在打包的过程中会先将java等源码通过javac编译成.class文件，但是我们的Dalvik虚拟机只会执行.dex文件，这个时候dx会将.class文件转换成Dalvik虚拟机执行的，dex文件。Dalvik虚拟机在启动的时候会先将.dex文件转换成快速运行的机器码，又因为65535这个问题，导致我们在应用冷启动的时候有一个合包的过程，最后导致的一个结果就是我们的app启动慢，这就是Dalvik虚拟机的  JIT 特性。</p><h2 id="ART"><a href="#ART" class="headerlink" title="ART"></a>ART</h2><p> ART虚拟机是在Android5.0才开始使用的Android虚拟机，ART虚拟机必须要兼容Dalvik虚拟机的特性，但是ART有一个很好的特性AOT（ahead of time），这个特性就是我们在安装APK的时候就将dex直接处理成可直接供ART虚拟机使用的机器码，ART虚拟机将.dex文件转换成可直接运行的.oat文件，ART虚拟机天生支持多dex，所以也不会有一个合包的过程，所以ART虚拟机会很大的提升APP冷启动速度。</p><p>Xposed hook的是Java代码，所以Xposed不支持5.0以及以上系统。</p><p>Xposed hook的是Java代码，所以Xposed87版不支持5.0以及以上系统。<br>89版5.0-7.1</p><h1 id="常规工具安装与环境配置"><a href="#常规工具安装与环境配置" class="headerlink" title="常规工具安装与环境配置"></a>常规工具安装与环境配置</h1><p><a href="http://www.androiddevtools.cn/">http://www.androiddevtools.cn/</a><br><strong>路径里不要带空格或者中文</strong></p><h2 id="Android开发工具"><a href="#Android开发工具" class="headerlink" title="Android开发工具"></a>Android开发工具</h2><p>JDK与JRE</p><p>adt-bundle（eclipse、Android SDK-&gt;adb、ddms、fastboot）</p><p>adb 环境变量</p><p>eclipse的配置</p><p>Project-&gt;properties-&gt;Java Bulid Path（Java运行环境）</p><p>Project-&gt;properties-&gt;Java Compiler（Java编译环境）</p><p>Project-&gt;properties-&gt;Resource-&gt;Other-&gt;UTF-8</p><p>Window-&gt;showview-&gt;other-&gt;Android-&gt;logcat</p><p>Window–&gt;properties -&gt;Java–&gt;Editor-&gt;Content Assist–&gt;auto activation triggers for java-&gt;.abcdefghijklmnopqrstuvwxyz</p><h2 id="Android逆向工具"><a href="#Android逆向工具" class="headerlink" title="Android逆向工具"></a>Android逆向工具</h2><p>AndroidKiller<br>JEB2.0<br>Android逆向助手<br>jadx</p><h2 id="Android调试工具"><a href="#Android调试工具" class="headerlink" title="Android调试工具"></a>Android调试工具</h2><p>JEB2.0<br>IDEA-&gt;Smali插件<br>IDA</p><h2 id="Android-辅助工具"><a href="#Android-辅助工具" class="headerlink" title="Android 辅助工具"></a>Android 辅助工具</h2><p>Android Helper<br>APK查壳PKID</p><p>夜神模拟器-&gt;<br>采用的是4.4版本<br>支持xposed<br>安装快<br>adb 调试端口为adb connect 127.0.0.1：62001</p><p>逍遥模拟器一&gt;<br>采用的是4.4版本<br>支持xposed安装快<br>adb调试端口为127.0.0.1：21503，jeb附加的时候经常找不到模拟器，需要手动adb connect一下</p><p>雷电模拟器-&gt;<br>采用的是5.1.1版本<br>动态调试稳定<br>修改apk以后无需重签名，也能装上去，支持覆盖安装安装慢</p><h2 id="Android抓包工具"><a href="#Android抓包工具" class="headerlink" title="Android抓包工具"></a>Android抓包工具</h2><p>Fiddler<br>HTTP Debugger Pro<br>Hook 框架和模块</p><h2 id="JDK清理"><a href="#JDK清理" class="headerlink" title="JDK清理"></a>JDK清理</h2><p>Win+R-&gt;regedit-&gt;1ocal_machine-&gt;software-&gt;wow6432node-&gt;javasoft/Jremetrics </p><p>Win+R-&gt;regedit-&gt;local_machine-&gt;software-&gt;javasoft/Jremetrics</p><p>先装64位JDK，环境都装好以后，再装32位JDK，然后把JAVA_HOME改成64位的路径</p><h1 id="Android分区目录与ADB指令与Linux命令行"><a href="#Android分区目录与ADB指令与Linux命令行" class="headerlink" title="Android分区目录与ADB指令与Linux命令行"></a>Android分区目录与ADB指令与Linux命令行</h1><h2 id="常用ab指令"><a href="#常用ab指令" class="headerlink" title="常用ab指令"></a>常用ab指令</h2><p>adb devices      (显示当前连接设备数)<br>adb connect 127.0.0.1：21503<br>adb shel1      (进入设备控制台)<br>adb push<br>adb pull<br>adb install<br>adb-s name      </p><h2 id="Linux命令行"><a href="#Linux命令行" class="headerlink" title="Linux命令行"></a>Linux命令行</h2><p>ls        (显示文件目录)<br>cd        (切换目录)<br>cat<br>Su<br>grep<br>getprop<br>chmod<br>ps<br>md5<br>mV<br>cp<br>rm -f        (强制移除)</p><h2 id="Android通常有以下分区（用df来查看分区情况）"><a href="#Android通常有以下分区（用df来查看分区情况）" class="headerlink" title="Android通常有以下分区（用df来查看分区情况）"></a>Android通常有以下分区（用df来查看分区情况）</h2><p>System分区：就是我们刷ROM的分区</p><p>Data分区：分区就是我们装APK的分区</p><p>Cache分区：是缓存分区</p><p>SDCard分区：就是挂载的SD卡。</p><p><strong>根目录 /<br>绝对路径与相对路径<br>隐藏文件  ls  -a  .开头的文件<br>可执行程序的运行./as   /data/local/tmp/as<br>用户组与文件权限  ls  -l</strong></p><p>Android的用户组有System、root、shell第一个字符代表文件类型，后面9个字符表示文件权限</p><p>-：普通文件</p><p>d：文件夹</p><p>l：符号连接（软连接）后面会用-&gt;打印出指向的真实文件</p><p>S：socket文件</p><p>p：block(buffered) spercial块文件(光驱、硬盘)</p><p>第一个rwx代表文件所有者的权限，第二个rwx代表和所有者同组人的权限，第三个rwx代表其他用户对该文件的权限</p><p>rwx可读可写可执行</p><p>-代表没有权限</p><p>权限还可以用数字来表示    r=4    w=2    x=1<br>Android下面的目录和文件都是有权限的，要操作目录和文件都需要有对应权限才能操作。如果没有，则使用chomd 777来修改</p><h2 id="data分区常见目录：app、syste、data、local、misc"><a href="#data分区常见目录：app、syste、data、local、misc" class="headerlink" title="data分区常见目录：app、syste、data、local、misc"></a>data分区常见目录：app、syste、data、local、misc</h2><h3 id="1、data-data目录"><a href="#1、data-data目录" class="headerlink" title="1、data/data目录"></a>1、data/data目录</h3><p>存放的是所有APK程序数据的目录，每个APK对就一个自己的Data目录，就是在data/data/目录下，会产生一个跟Package一样的目录。比如有一个APK，它的包名叫com.test.hello则，在data/data/目录下会有一个com.test.hello的目录，这个APK只能操作此目录，不能操作其它APK的目录</p><h3 id="2、data-app目录"><a href="#2、data-app目录" class="headerlink" title="2、data/app目录"></a>2、data/app目录</h3><p>用户安装的APK放在这里。我们如果把APK放入这个文件夹下面的话，就算安装好了。这就叫静默安装。不用管APK文件里面的lib目录下的库文件，系统会自动帮我们放入调用库</p><h3 id="3、data-misc目录"><a href="#3、data-misc目录" class="headerlink" title="3、data/misc目录"></a>3、data/misc目录</h3><p>保存WIFI帐号，VPN设置信息等。比如保存了一个WIFI连接帐号，则此目录下的WIFI目录下面wpa_supplicant.conf可以查看到</p><h2 id="system分区常用目录：app、lib、xbin、bin、media、framework"><a href="#system分区常用目录：app、lib、xbin、bin、media、framework" class="headerlink" title="system分区常用目录：app、lib、xbin、bin、media、framework"></a>system分区常用目录：app、lib、xbin、bin、media、framework</h2><h3 id="1、system-app目录"><a href="#1、system-app目录" class="headerlink" title="1、system/app目录"></a>1、system/app目录</h3><p>存放系统自带的APK。将APK放入到System/app目录下，也是静默安装</p><h3 id="2、system-lib目录"><a href="#2、system-lib目录" class="headerlink" title="2、system/lib目录"></a>2、system/lib目录</h3><p>存放APK程序用到的库文件</p><h3 id="3、system-bin目录和system-xbin目录"><a href="#3、system-bin目录和system-xbin目录" class="headerlink" title="3、system/bin目录和system/xbin目录"></a>3、system/bin目录和system/xbin目录</h3><p>存放的是shel1命令</p><h3 id="4、system-framework目录"><a href="#4、system-framework目录" class="headerlink" title="4、system/framework目录"></a>4、system/framework目录</h3><p>启用Android系统所用到框架，如一些jar文件</p><p><strong>sd卡目录：/sdcard        /mot/sdcard</strong></p><h2 id="真机调试环境配置"><a href="#真机调试环境配置" class="headerlink" title="真机调试环境配置"></a>真机调试环境配置</h2><p>真机获取ROOT权限<br>完全ROOT<br>不完全ROOT<br>开启USB 调试</p><p>调试一个APK，必须满足以下两个条件中的任何一个：<br>1、AndroidManifest.xml中的Application标签包含android:debuggable=”true”<br>2、/default.prop中的ro.debuggable的值为1</p><p>方法一：</p><p>用AK反编译以后在AndroidManifest.xml文件中的Application标签中加android:debuggable=”true”然后回编译</p><p>这个方法虽然简单，但是问题多，比如：签名验证、加壳</p><p>方法二：</p><p>那么要修改值，1种就是改文件，另一种就是改内存</p><p>init 进程会解析这个default.prop文件，然后把这些属性信息解析到内存中，给所有app进行访问使用，所以在init进程的内存块中是存在这些属性值的，那么这时候我们可以利用进程注入技术，我们可以使用ptrace注入到init进程，然后修改内存中的这些属性值，只要init 进程不重启的话，那么这些属性值就会起效。</p><p>解决方法：<br>第一步：拷贝mprop到/data/目录下<br>第二步：./mprop ro.debuggable 1<br>第三步：getprop ro.debuggable（查看此时ro.debuggable在内存中的值）<br>第四步：stop start（重启adbd进程）</p>]]></content>
      
      
      <categories>
          
          <category> Android逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 基础教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA程序设计2</title>
      <link href="2021/09/03/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A12/"/>
      <url>2021/09/03/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A12/</url>
      
        <content type="html"><![CDATA[<h1 id="一、标识符与关键字"><a href="#一、标识符与关键字" class="headerlink" title="一、标识符与关键字"></a>一、标识符与关键字</h1><h2 id="1-Java中的标识符"><a href="#1-Java中的标识符" class="headerlink" title="1.Java中的标识符"></a>1.Java中的标识符</h2><p>在编程过程中，经常需要在程序中定义一些符号来标记一些名称，如包名、类名、方法名、参数名、变量名等，这些符号被称为标识符。标识符可以由任意顺序的太小写字母、数字、下划线（）和美元符号（$）组成，但不能以数字开头，不能是Java中的关键字。</p><p>建议初学者在定义标识符时还应该遵循以下规则：</p><ol><li>包名所有字母一律小写。例如：cn.itcast.test。</li><li>类名和接口名每个单词的首字母都要大写。如：ArrayList、Iterator。</li><li>常量名所有字母都大写，单词之间用下划线连接。例如：。<br>DAY_OF_MONTH。</li><li>变量名和方法名的第一个单词首字母小写，从第二个单词开始每个单词首字母大写。例如：lineNumber、getLineNumber。</li><li>在程序中，应该尽量使用有意义的英文单词来定义标识符，使得程序便于阅读。例如使用userName表示用户名，password表示密码</li></ol><h2 id="2-Java中的关键字"><a href="#2-Java中的关键字" class="headerlink" title="2.Java中的关键字"></a>2.Java中的关键字</h2><p>关键字是编程语言里事先定义好并赋予了特殊含义的单词，也称作保留字。程序员自己定义标识符时不能使用它们。</p><table><thead><tr><th>abstaract</th><th>boolean</th><th>break</th><th>byte</th><th>case</th><th>catch</th><th>char</th></tr></thead><tbody><tr><td>const</td><td>class</td><td>continue</td><td>default</td><td>do</td><td>double</td><td>else</td></tr><tr><td>extends</td><td>false</td><td>final</td><td>finally</td><td>float</td><td>for</td><td>goto</td></tr><tr><td>if</td><td>implements</td><td>import</td><td>instanceof</td><td>int</td><td>interface</td><td>long</td></tr><tr><td>native</td><td>new</td><td>null</td><td>package</td><td>private</td><td>protected</td><td>public</td></tr><tr><td>return</td><td>short</td><td>static</td><td>strictfp</td><td>super</td><td>switch</td><td>this</td></tr><tr><td>throw</td><td>throws</td><td>transient</td><td>true</td><td>try</td><td>void</td><td>volatile</td></tr><tr><td>while</td><td>synchronized</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="二、常量与变量"><a href="#二、常量与变量" class="headerlink" title="二、常量与变量"></a>二、常量与变量</h1><h2 id="1-Java中的常量"><a href="#1-Java中的常量" class="headerlink" title="1.Java中的常量"></a>1.Java中的常量</h2><p>常量就是在程序中固定不变的值，是不能改变的数据。在Java中，常量包括整型常量、浮点数常量、布尔常量、字符常量等。</p><h3 id="1-整型常量"><a href="#1-整型常量" class="headerlink" title="1.整型常量"></a>1.整型常量</h3><p>整型常量是整数类型的数据，它的表现形式有四种，具体如下：<br>（1）二进制：由数字0和1组成的数字序列，如：00110101。<br>（2）八进制：以0开头并且其后由0<del>7范围（包括0和7）内的整数组成的数字序列，如：0342。<br>（3）+进制：由数字0r9范围（包括0和9）内的整数组成的数字序列。如：<br>198。整数以十进制表示时，第一位不能是0，0本身除外（4）十六进制：以0x或者0X开头并且其后由0～9、A</del>F（包括0和9、A和F）组成的数字序列，如0×25AF。</p><h3 id="2-浮点数常量"><a href="#2-浮点数常量" class="headerlink" title="2.浮点数常量"></a>2.浮点数常量</h3><p>浮点数常量就是在数学中用到的小数，分为float单精度和double双精度两种类型。<br>单精度浮点数后面以F或f结尾，具体示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2e3f of 5.022e+23f</span><br></pre></td></tr></table></figure><p>双精度浮点数后面以D或d结尾，具体示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.6d   3.84d</span><br></pre></td></tr></table></figure><h3 id="3-字符常量"><a href="#3-字符常量" class="headerlink" title="3.字符常量"></a>3.字符常量</h3><p>字符常量用于表示一个字符，一个字符常量要用一对英文半角格式的单引号（’  ‘）引起来，它可以是英文字母、数字、标点符号、以及由转义序列来表示的特殊字符。且体示例加下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;a&#x27; &#x27;1&#x27; &#x27;&amp;&#x27; &#x27;\r&#x27; &#x27;\u0000&#x27;</span><br></pre></td></tr></table></figure><p>上面的示例中，’\u0000’表示一个空白字符，即在单引号之间没有任何字符。之所以能这样表示是因为，Java采用的是Unicode字符集，Unicode字符以\u开头，空白字符在Unicode码表中对应的值为’\u0000’。</p><h3 id="4-字符串常量"><a href="#4-字符串常量" class="headerlink" title="4.字符串常量"></a>4.字符串常量</h3><p>字符串常量用于表示一串连续的字符，一个字符串常量要用一对英文半角格式的双引号（””）引起来，具体示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;HelloWorld&quot;  &quot;123&quot;  &quot;Welcome \n XXX&quot;  &quot;&quot;</span><br></pre></td></tr></table></figure><p>一个字符串可以包含一个字符或多个字符，也可以不包含任何字符，即长度为零。</p><h3 id="5-布尔常量"><a href="#5-布尔常量" class="headerlink" title="5.布尔常量"></a>5.布尔常量</h3><p>布尔常量即布尔型的两个值true和false，该常量用于区分一个事物的真与假。</p><h3 id="6-nu11常量"><a href="#6-nu11常量" class="headerlink" title="6.nu11常量"></a>6.nu11常量</h3><p>nul1常量只有一个值null，表示对象的引用为空。</p><h3 id="7-常量的声明"><a href="#7-常量的声明" class="headerlink" title="7.常量的声明"></a>7.常量的声明</h3><p>所谓常量，就是值永远不允许被改变的量。如果要声明一个常量，就必须用关键字final修饰。<br>（1）声明常量的具体方式如下：<br>final 常量类型  常量标识符；</p><p>例如：</p><p>final int YOUTH_AGE；   //声明一个int型常量</p><p>final float PIE；    //声明一个float型常量</p><p>注意：按照Java命名规则，常量标识符所有的字符都要大写，各个单词之间用下划线_分隔</p><p>（2）在声明常量时，通常情况下立即为其赋值，即立即对常量进行初始化，声明并初始化常量的具体方式如下：<br>final 常量类型常量标识符=常量值；</p><p>例如：</p><p>final float PIE=3.14F;        //声明foat型常量，初始化为3.14</p><p>说明：为float型常量赋值时，需要在数值的后面加上一个字母“F”或“f”</p><p>（3）声明多个同一类型的常量，可以采用下面的形式：<br>final 常量类型常量1=常量值1，常量2=常量值2..…；</p><p>例如：<br>final int NUM1=14，NUM2=25，NUM3=36；</p><p>注意：如果在声明常量时已经对其进行了初始化，则常量的值不允许再被修改。</p><h2 id="2、JAVA中的变量"><a href="#2、JAVA中的变量" class="headerlink" title="2、JAVA中的变量"></a>2、JAVA中的变量</h2><h3 id="1-变量的定义"><a href="#1-变量的定义" class="headerlink" title="1.变量的定义"></a>1.变量的定义</h3><p>​     变量是内存中的一个存储区域，该区域有自己的名称（变量名）和类型（数据类型），Java中每个变量必须先声明，后使用， 该区域的数据可以在同一类型范围内不断变化。</p><h3 id="2-变量的数据类型"><a href="#2-变量的数据类型" class="headerlink" title="2.变量的数据类型"></a>2.变量的数据类型</h3><p>Java语言中的数据类型划分为两大类，分别是基本数据类型和引用数据类型。</p><blockquote><p>数据类型</p><blockquote><p>基本数据类型</p><blockquote><p>数值型</p><blockquote><p>整数类型</p></blockquote><blockquote><p>浮点类型</p></blockquote></blockquote><blockquote><p>字符型</p></blockquote><blockquote><p>布尔型</p></blockquote></blockquote><blockquote><p>引用数据类型</p><blockquote><p>类</p></blockquote><blockquote><p>接口</p></blockquote><blockquote><p>数组</p></blockquote><blockquote><p>枚举</p></blockquote><blockquote><p>注解</p></blockquote></blockquote></blockquote><h3 id="4-整数类型变量"><a href="#4-整数类型变量" class="headerlink" title="4.整数类型变量"></a>4.整数类型变量</h3><p>（1）用来存储整数数值，即没有小数部分的值。<br>（2）整数类型分为4种类型：字节型（byte）、短整型（short）、整型（int）和长整型（long）。</p><table><thead><tr><th>类型名</th><th>占用空间</th><th>取值范围</th></tr></thead><tbody><tr><td>byte</td><td>8位（1个字节）</td><td>-2^7 ~ 2^7-1</td></tr><tr><td>short</td><td>16位（2个字节）</td><td>-2^15 ~ 2^15-1</td></tr><tr><td>int</td><td>32位（4个字节）</td><td>-2^31 ~ 2^31-1</td></tr><tr><td>long</td><td>64位（8个字节）</td><td>-2^63 ~ 2^63-1</td></tr></tbody></table><h3 id="5-浮点数类型变量"><a href="#5-浮点数类型变量" class="headerlink" title="5.浮点数类型变量"></a>5.浮点数类型变量</h3><p>（1）浮点数类型变量用来存储小数数值。<br>（2）浮点数类型分为两种：单精度浮点数（float）、双精度浮点数（double），double型所）表示的浮点数比foat型更精确。</p><table><thead><tr><th align="center">类型名</th><th align="center">占用空间</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="center">float</td><td align="center">32位（4个字节）</td><td align="left">1.4E-45 ~ 3.4E+38，-1.4E-45 ~ -3.4E+38</td></tr><tr><td align="center">double</td><td align="center">32位（4个字节）</td><td align="left">4.9E-324 ~ 1.7E+308，-4.9E-324 ~ -1.7E+308</td></tr></tbody></table><p>（3）在取值范围中，E表示以10为底的指数，E后面的“+”号和“-”号代表正指数和负指数，例如1.4E-45表示1.4*10-45。<br>（4）在为一个float类型的变量赋值时需要注意一点，所赋值的后面一定要加上字母“F”（或“f”），而为double类型的变量赋值时，可以在所赋值的后面加上字符“D”（或“d”），也可不加。<br>（5）在程序中也可以为一个浮点数类型变量赋予一个整数数值。</p><h3 id="6-字符类型变量"><a href="#6-字符类型变量" class="headerlink" title="6.字符类型变量"></a>6.字符类型变量</h3><p>（1）用于存储一个单一字符，在Java中用char表示。<br>（2）每个char类型的字符变量都会占用2个字节。<br>（3）赋值时，要用英文半角格式的单引号（’’）把字符括起来，如 ‘a’ 。<br>（4）也可以赋值为0~65535范围内的整数，计算机会自动将这些整数转化为所对应的字符，如数值97对应的字符为 ‘a’ 。</p><h3 id="7-布尔类型变量"><a href="#7-布尔类型变量" class="headerlink" title="7.布尔类型变量"></a>7.布尔类型变量</h3><p>布尔类型变量用来存储布尔值，在Java中用boolean表示，该类型的变量只有两个值，即true和false。</p><h1 id="运算符与表达式"><a href="#运算符与表达式" class="headerlink" title="运算符与表达式"></a>运算符与表达式</h1><h2 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h2><p>算术运算符就是用来处理四则运算的符号，这是最简单、最常用的运算符号。</p><table><thead><tr><th align="center">运算符</th><th align="center">运算</th><th align="center">范例</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">正号</td><td align="center">+3</td><td align="center">3</td></tr><tr><td align="center">-</td><td align="center">负号</td><td align="center">b=4；-b</td><td align="center">-4</td></tr><tr><td align="center">+</td><td align="center">加</td><td align="center">5+5</td><td align="center">10</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="center">6-4</td><td align="center">2</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="center">3*4</td><td align="center">12</td></tr><tr><td align="center">/</td><td align="center">除</td><td align="center">5/5</td><td align="center">1</td></tr><tr><td align="center">%</td><td align="center">取模（即算术中的求余数）</td><td align="center">7%5</td><td align="center">2</td></tr><tr><td align="center">++</td><td align="center">自增（前）</td><td align="center">a=2;b=++a</td><td align="center">a=3,b=3</td></tr><tr><td align="center">++</td><td align="center">自增（后）</td><td align="center">a=2;b=a++</td><td align="center">a=3,b=2</td></tr><tr><td align="center">–</td><td align="center">自减（前）</td><td align="center">a=2,b=–a</td><td align="center">a=1,b=1</td></tr><tr><td align="center">–</td><td align="center">自减（后）</td><td align="center">a=2;b=a–</td><td align="center">a=1,b=2</td></tr></tbody></table><p>算术运算符看上去比较简单，也很容易理解，但在实际使用时有很多需要注意的问题，具体如下：</p><p>1.在进行自增（++）和自减（–）的运算时，如果运算符（++或–）放在操作数的前面则是先进行自增或自减运算，再进行其它运算。反之，如果运算符放在操作数的后面则是先进行其它运算再进行自增或自减运算。</p><p>2.在进行除法运算时，当除数和被除数都为整数时，得到的结果也是一个整数。如果除法运算有小数参与，得到的结果会是一个小数。</p><p>3.在进行取模（%）运算时，运算结果的正负取决于被模数（%左边的数）的符号，与模数（%右边的数）的符号无关。</p><h2 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h2><p>赋值运算符的作用就是将常量、变量或表达式的值赋给某一个变量</p><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=3;b=2</td><td>a=3;b=2</td></tr><tr><td>+=</td><td>加等于</td><td>a=3;b=2;a+=b</td><td>a=5;b=3</td></tr><tr><td>-=</td><td>减等于</td><td>a=3;b=2;a-=b</td><td>a=1;b=2</td></tr><tr><td>*=</td><td>乘等于</td><td>a=3;b=2;a*=b</td><td>a=6;b=2</td></tr><tr><td>/=</td><td>除等于</td><td>a=3;b=2;a/=b</td><td>a=1;b=2</td></tr><tr><td>%=</td><td>模等于</td><td>a=3;b=2;a%=b</td><td>a=1;b=2</td></tr></tbody></table><p>在赋值运算符的使用中，需要注意以下几个问题：</p><p>（1）在Java中可以通过一条赋值语句对多个变量进行赋值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">in×，Y，z；</span><br><span class="line">Px=y=z=5；        //为三个变里同时就值</span><br><span class="line">intx=y=z=5：      //这样写是错误的</span><br></pre></td></tr></table></figure><p>（2）除了“=”，其它的都是特殊的赋值运算符，以“+=”为例，x+=3就相当于x=x+3，首先会进行加法运算x+3，再将运算结果赋值给变量x。-=、*=、/=、%=赋值运算符都可依此类推。</p><p>（3）在为变量赋值时，当两种类型彼此不兼容，或者目标类型取值范围小于源类型时，需要进行强制类型转换。</p><p>（4）然而在使用+=、-=、*=、/=、%=运算符进行赋值时，强制类型转换会自动完成，程序不需要做任何显式地声明。</p><h2 id="3-比较运算符"><a href="#3-比较运算符" class="headerlink" title="3.比较运算符"></a>3.比较运算符</h2><p>比较运算符用于对两个数值或变量进行比较，其结果是一个布尔值，即true或false。</p><table><thead><tr><th>运算符</th><th>运算</th><th>范例</th><th>结果</th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4==3</td><td>false</td></tr><tr><td>!=</td><td>不等于</td><td>4!=3</td><td>true</td></tr><tr><td>&lt;</td><td>小于</td><td>4&lt;3</td><td>false</td></tr><tr><td>&gt;</td><td>大于</td><td>4&gt;3</td><td>true</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4&lt;=3</td><td>false</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4&gt;=3</td><td>true</td></tr></tbody></table><p>比较运算符在使用时需要注意一个问题，不能将比较运算符“==”误写成赋值运算符“=”。</p><h2 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h2>]]></content>
      
      
      <categories>
          
          <category> JAVA程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> JAVA程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda介绍、安装及使用教程</title>
      <link href="2021/09/02/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB1/"/>
      <url>2021/09/02/Python/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB1/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda介绍、安装及使用教程"><a href="#Anaconda介绍、安装及使用教程" class="headerlink" title="Anaconda介绍、安装及使用教程"></a>Anaconda介绍、安装及使用教程</h1><h2 id="一、序"><a href="#一、序" class="headerlink" title="一、序"></a>一、序</h2><p>Python是一种面向对象的解释型计算机程序设计语言，其使用，具有跨平台的特点，可以在Linux、macOS以及Windows系统中搭建环境并使用，其编写的代码在不同平台上运行时，几乎不需要做较大的改动，使用者无不受益于它的便捷性。</p><p>此外，Python的强大之处在于它的应用领域范围之广，遍及人工智能、科学计算、Web开发、系统运维、大数据及云计算、金融、游戏开发等。实现其强大功能的前提，就是Python具有数量庞大且功能相对完善的标准库和第三方库。通过对库的引用，能够实现对不同领域业务的贝开发。然而，正是由于库的数量庞大，对于管理这些库以及对库作及时的维护成为既重要但复杂度又高的事情。</p><h2 id="二、什么是Anaconda？"><a href="#二、什么是Anaconda？" class="headerlink" title="二、什么是Anaconda？"></a>二、什么是Anaconda？</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><p>Anaconda（官方网站）就是可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。 </p><h3 id="2-特点"><a href="#2-特点" class="headerlink" title="2.特点"></a>2.特点</h3><blockquote><p>开源<br>安装过程简单<br>高性能使用Python和R语言<br>免费的社区支持</p></blockquote><p>其特点的实现主要基于Anaconda拥有的：</p><ol><li>conda包</li><li>环境管理器</li><li>1,000+开源库</li></ol><p>如果日常工作或学习并不必要使用1，000多个库，那么可以考虑安装Miniconda（图形界面下载及命令行安装请戳），这里不过多介绍Miniconda的安装及使用。</p><h3 id="3-Anaconda、conda、pip、virtualenv的区别"><a href="#3-Anaconda、conda、pip、virtualenv的区别" class="headerlink" title="3.Anaconda、conda、pip、virtualenv的区别"></a>3.Anaconda、conda、pip、virtualenv的区别</h3><p><strong>Anaconda</strong></p><p>Anaconda是一个包含180+的科学包及其依赖项的发行版本。其包含的科学包包括：conda，numpy，scipy，ipython notebook等。</p><p><strong>conda</strong></p><p>conda是包及某依赖项和环境的管理工具。<br>适用语言：Python，R，Ruby，Lua，Scala，Java，JavaScript，C/C++，FORTRAN。<br>适用平台：Windows，macOS，Linux</p><p>用途：</p><p>快速安装、运行和升级包及其依赖项。<br>在计算机中便捷地创建、保存、加载和切换环境。<br>如果你需要的包要求不同版本的Python，你无需切换到不同的环境，因为conda同样是一个环境管理器。仅需要几条命令，你可以创建一个完全独立的环境来运得不同的Python版本，同时继续在你常规的环境中使用你常用的Python版本。——conda官方网站</p><p>conda为Python项目而创造，但可适用于上述的多种语言。<br>conda包和环境管理器包含于Anaconda的所有版本当中。</p><p><strong>pip</strong></p><p>pip是用于安装和管理软件包的包管理器。</p><p>pip编写语言：Python。</p><p>Pthon中默认安装的版本：</p><p>Python2.7.9及后续版本：默认安装，命令为pip </p><p>Python3.4及后续版本：默认安装，命令为pip3</p><p>pip名称的由来：pip采用的是递归缩写进行命名的。其名字被普遍认为来源于2处：</p><p>“Pip installs Packages”（“pip安装包”）<br>“Pip installs Python”（“pip安装Python”）</p><p><strong>virtuale</strong></p><p>virtualenv：用于创建一个独立的 Python 环境的工具</p><p>解决问题：</p><p>当一个程序需要使用Python2.7版本，而另一个程序需要使用Python3.6版本，如何同时使用这两个程序？</p><p>如果将所有程序都安装在系统下的默认路径，如：/usr/lib/python2.7/site-packages，当不小心升级了本不该升级的程序时，将会对其他的程序造成影响。</p><p>如果想要安装程序并在程序运行时对其库或库的版本进行修改，都会导致程序的中断。</p><p>在共享主机时，无法在全局site-packages目录中安装包。</p><p>virtualenv将会为它自己的安装目录创建一个环境，这并不与其他virtualenv环境共享库；同时也可以选择性地不连接已安装的全局库。</p><p><strong>pip与conda比较</strong></p><p>依赖项检查</p><p>pip：不一定会展示所需其他依赖包。<br>安装包时或许会直接忽略依赖项而安装，仅在结果中提示错误。</p><p>conda：</p><p>列出所需其他依赖包。<br>安装包时自动安装其依赖项。<br>可以便捷地在包的不同版本中自由切换。</p><p>环境管理</p><p>pip：维护多个环境难度较大。</p><p>conda：比较方便地在不同环境之间进行切换，环境管理较为简单。</p><p>对系统自带Python的影响</p><p>pip：在系统自带Python中包的**更新/回退版本/卸载将影响其他程序。</p><p>conda：不会影响系统自带Python。</p><p>适用语言</p><p>pip：仅适用于Python。<br>conda：适用于Python，R，Ruby，Lua，Scala，Java，JavaScript，C/C++，FORTRAN。</p><h3 id="conda与pip、virtualenv的关系"><a href="#conda与pip、virtualenv的关系" class="headerlink" title="conda与pip、virtualenv的关系"></a>conda与pip、virtualenv的关系</h3><p>conda 结合了pip和virtualenv的功能。</p><h2 id="三、Anaconda的适用平台及安装条件"><a href="#三、Anaconda的适用平台及安装条件" class="headerlink" title="三、Anaconda的适用平台及安装条件"></a>三、Anaconda的适用平台及安装条件</h2><h3 id="1-适用平台"><a href="#1-适用平台" class="headerlink" title="1.适用平台"></a>1.适用平台</h3><p>Anaconda可以在以下系统平台中安装和使用：</p><p>Windows<br>macOS<br>Linux(×86/Power8)</p><h3 id="2-安装条件"><a href="#2-安装条件" class="headerlink" title="2.安装条件"></a>2.安装条件</h3><p>系统要求：32位或64位系统均可<br>下载文件大小：约500MB<br>所需空间大小：3GB空间大小（Miniconda仅需400MB空间即可）</p><h2 id="三、Anaconda的安装步骤"><a href="#三、Anaconda的安装步骤" class="headerlink" title="三、Anaconda的安装步骤"></a>三、Anaconda的安装步骤</h2><h3 id="1-macOS系统安装Anaconda"><a href="#1-macOS系统安装Anaconda" class="headerlink" title="1.macOS系统安装Anaconda"></a>1.macOS系统安装Anaconda</h3><p> ① 图形界面安装</p><p>前往官方下载页面下载。有两个版本可供选择：Python 3.6和 Python 2.7，我下载的是前者。选择版之后点击“64-Bit Graphical  Installer”进行下载。</p><p>完成下载之后，双击下载文件，在对话框中“Introduction”、</p><p>“Read Me”、“License”部分可直接点击下一步。</p><p>“Destination Select”部分选择“Install for me only”并点击下一步。</p><p>注意：若有错误提示信息“You cannot install Anaconda in this   location”则重新选择“Install for me only”并点击下一步。</p><p>“Installation Type”部分，可以点击“Change Install Location”来改变安装位置。标准的安装路径是在用户的家目录下。在这一步我没有改变安装位置。若选择默认安装路径，则直接点击“Install”进行安装。</p><p>等待“Installation”部分结束，在“Summary”部分若看到“The  installation was completed successfully.”则安装成功，直接点击“Close”关闭对话框。</p><p>在 mac 的 Launchpad 中 可 以 找 到 名 为“Anaconda-Navigator”的图标，点击打开。</p><p>若“Anaconda-Navigator”成功启动，则说明真正成功地安装了 Anaconda；如果未成功，请务必仔细检查以上安装步骤。</p><p>“Anaconda-Navigator”中已经包含“Jupyter Notebook”、“Jupyterlab”、“Qtconsole”和“Spyder”。（图中的“Rstudio”是我后来安装的，但它默认出现在“Anaconda-Navigator”的启动界面，只需要点击“Install”便可安装。）</p><p>完成安装。</p><p>② 命令行安装</p><p>前往官方下载页面下载。有两个版本可供选择：Python 3.6和Python 2.7 ，我 下 载 的 是 前 者 。 选 择 版 之 后 点 击 “64-Bit Command-Line Installer”进行下载。</p><p>完成下载之后，在 mac 的 Launchpad 中找到“其他”并打开“终端”。</p><p>安装 Python 3.6 ：bash~/Downloads/Anaconda3-5.0.1-MacOSX-x86_64.sh</p><p>安装 Python 2.7 ：bash~/Downloads/Anaconda2-5.0.1-MacOSX-x86_64.sh</p><p>注意：</p><p>首词 bash 也需要输入，无论是否用的 Bash shell。</p><p>如果你的下载路径是自定义的，那么把该步骤路径中的~/Downloads 替换成你自己的下载路径。</p><p>如果你将第 1 步下载的.sh 文件重命名了，那么把该步骤路径中的Anaconda3-5.0.1-MacOSX-x86_64.sh 或Anaconda2-5.0.1-MacOSX-x86_64.sh 替换成你重命名后的文件名。</p><p>强烈建议：不要修改文件名。如果重命名，使用英文进行命名。</p><p>安装过程中，看到提示“In order to continue the installationprocess, please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。</p><p>在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。</p><p>安装过程中，提示“Press Enter to confirm the location,Press CTRL-C to cancel the installation or specify an alternateinstallation directory.”（“按回车键确认安装路径，按’CTRL-C’取消安装或者指 定安装目录。” ）如果接受默认安装路径，则会显示“PREFIX=/home//anaconda&lt;2 or 3&gt;”并且继续安装。安装过程大约需要几分钟的时间。</p><p>建议：直接接受默认安装路径。</p><p>安装器若提示“Do you wish the installer to prepend the Anaconda install location to PATH in your /home//.bash_profile ?”（“你希望安装器添加 Anaconda 安装路径在/home//.bash_profile 文件中吗？”），建议输入“yes”。</p><p>注意：</p><p>路径/home//.bash_profile 中“”即进入到家目录后你的目录名。</p><p>如果输入“no”，则需要手动添加路径。添加 export PATH=”//bin:$PATH”在“.bashrc”或者“.bash_profile”中。其中，“”替换为你真实的 Anaconda安装路径。</p><p>看到“Thank you for installing Anaconda!”则说明已经成功完成安装。</p><p>关闭终端，然后再打开终端以使安装后的 Anaconda 启动。</p><p>验证安装结果。可选用以下任意一种方法：</p><p>在终端中输入命令 condal list，如果 Anaconda 被成功安装，则会显示已经安装的包名和版本号。</p><p>在终端中输入 python。这条命令将会启动 Python 交互界面，如果Anaconda 被成功安装并且可以运行，则将会在 Python 版本号的右边显示“Anaconda custom (64-bit)”。退出 Python 交互界面则输入 exit()或 quit()即可。</p><p>在终端中输入 anaconda-navigator。如果 Anaconda 被成功安装，则Anaconda Navigator 的图形界面将会被启动。</p><h3 id="2-Windows-系统安装-Anaconda"><a href="#2-Windows-系统安装-Anaconda" class="headerlink" title="2.Windows 系统安装 Anaconda"></a>2.Windows 系统安装 Anaconda</h3><p>前往官方下载页面下载。有两个版本可供选择：Python 3.6和 Python 2.7，选择版之后根据自己操作系统的情况点击“64-BitGraphical Installer”或“32-Bit Graphical Installer”进行下载。</p><p>完成下载之后，双击下载文件，启动安装程序。</p><p>注意：</p><p>如果在安装过程中遇到任何问题，那么暂时地关闭杀毒软件，并在安装程序完成之后再打开。</p><p>如果在安装时选择了“为所有用户安装”，则卸载 Anaconda 然后重新安装，只为“我这个用户”安装。</p><p>选择“Next”。</p><p>阅读许可证协议条款，然后勾选“I Agree”并进行下一步。</p><p>除非是以管理员身份为所有用户安装，否则仅勾选“JustMe”并点击“Next”。</p><p>在“Choose Install Location”界面中选择安装 Anaconda 的目标路径，然后点击“Next”。</p><p>注意：</p><p>目标路径中不能含有空格，同时不能是“unicode”编码。</p><p>除非被要求以管理员权限安装，否则不要以管理员身份安装。</p><p>在“Advanced Installation Options”中不要勾选“Add Anaconda to my PATH environment variable.”（“添加 Anaconda 至我的环境变量。”）。因为如果勾选，则将会影响其他程序的使用。如果使用 Anaconda，则通过打开 Anaconda Navigator 或者在开始菜单中的“Anaconda Prompt”（类似 macOS 中的“终端”）中进行使用。</p><p>除非你打算使用多个版本的 Anaconda 或者多个版本的Python，否则便勾选“Register Anaconda as my default Python 3.6”。</p><p>然后点击“Install”开始安装。如果想要查看安装细节，则可以点击“Show Details”。</p><p>点击“Next”。</p><p>进入“Thanks for installing Anaconda!”界面则意味着安装成功，点击“Finish”完成安装。</p><p>注意：如果你不想了解“Anaconda 云”和“Anaconda 支持”，则可以不勾选“Learn more about Anaconda Cloud”和“Learn more about Anaconda Support”。</p><p>1.验证安装结果。可选以下任意方法：</p><p>“开始 → Anaconda3（64-bit）→ Anaconda Navigator”，若可以成功启动 Anaconda Navigator 则说明安装成功。</p><p>“开始 → Anaconda3（64-bit）→ 右键点击 Anaconda Prompt → 以管理员身份运行”，在 Anaconda Prompt 中输入 conda list，可以查看已经安装的包名和版本号。若结果可以正常显示，则说明安装成功。</p><h3 id="3-Linux-系统安装-Anaconda"><a href="#3-Linux-系统安装-Anaconda" class="headerlink" title="3.Linux 系统安装 Anaconda"></a>3.Linux 系统安装 Anaconda</h3><p>前往官方下载页面下载。有两个版本可供选择：Python 3.6 和 Python2.7。</p><p>启动终端，在终端中输入命令 md5sum /path/filename 或 sha256sum/path/filename</p><p>注意：将该步骤命令中的/path/filename 替换为文件的实际下载路径和文件名。其中，path 是路径，filename 为文件名。</p><p>强烈建议：</p><p>路径和文件名中不要出现空格或其他特殊字符。</p><p>路径和文件名最好以英文命名，不要以中文或其他特殊字符命名。</p><p>1.根据    Python 版本的不同有选择性地在终端输入命令：</p><p>Python 3.6：bash ~/Downloads/Anaconda3-5.0.1-Linux-x86_64.sh</p><p>Python 2.7：bash ~/Downloads/Anaconda2-5.0.1-Linux-x86_64.sh</p><p>注意：</p><p>首词 bash 也需要输入，无论是否用的 Bash shell。</p><p>如果你的下载路径是自定义的，那么把该步骤路径中的~/Downloads 替换成你自己的下载路径。</p><p>除非被要求使用 root 权限，否则均选择“Install Anaconda as a user”。</p><p>1.安装过程中，看到提示“In order to continue the installation process,please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。</p><p>在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。</p><p>安装过程中，提示“Press Enter to accept the default install location,CTRL-C to cancel the installation or specify an alternate installation directory.”（“按回车键确认安装路径，按’CTRL-C’取消安装或者指定安装目录。”）如果接受默认安装路径，则会显示</p><p>“PREFIX=/home//anaconda&lt;2 or 3&gt;”并且继续安装。安装过程大约需要几分钟的时间。</p><p>建议：直接接受默认安装路径。</p><p>1.安装器若提示 “Do you wish the installer to prepend theAnaconda&lt;2 or 3&gt; install location to PATH in your /home//.bashrc ?”（“你希望安装器添加 Anaconda 安装路径在/home//.bashrc 文件中吗？”），建议输入“yes”。</p><p>注意：</p><p>路径/home//.bash_rc 中“”即进入到家目录后你的目录名。</p><p>如果输入“no”，则需要手动添加路径，否则 conda 将无法正常运行。</p><p>1.当看到“Thank you for installing Anaconda&lt;2 or 3&gt;!”则说明已经成功完成安装。</p><p>关闭终端，然后再打开终端以使安装后的 Anaconda 启动。或者直接在</p><p>终端中输入 source ~/.bashrc 也可完成启动。</p><p>验证安装结果。可选用以下任意一种方法：</p><p>在终端中输入命令 condal list，如果 Anaconda 被成功安装，则会显示</p><p>已经安装的包名和版本号。</p><p>在终端中输入 python。这条命令将会启动 Python 交互界面，如果Anaconda 被成功安装并且可以运行，则将会在 Python 版本号的右边显示“Anaconda custom (64-bit)”。退出 Python 交互界面则输入 exit()或 quit()即可。</p><p>在终端中输入 anaconda-navigator。如果 Anaconda 被成功安装，则</p><p>Anaconda Navigator 将会被启动。</p><h2 id="四、管理-conda"><a href="#四、管理-conda" class="headerlink" title="四、管理 conda"></a>四、管理 conda</h2><p>写在前面</p><p>接下来均是以命令行模式进行介绍，Windows 用户请打开“Anaconda</p><p>Prompt”；macOS 和 Linux 用户请打开“Terminal”（“终端”）进行操作。</p><ol><li><p>验证 conda 已被安装</p><p>conda –version终端上将会以 conda 版本号的形式显示当前安装 conda 的版本号。如：conda 3.11.0</p></li></ol><p>注意：如果出现错误信息，则需核实是否出现以下情况：</p><p>使用的用户是否是安装 Anaconda 时的账户。</p><p>是否在安装 Anaconda 之后重启了终端。</p><ol start="2"><li>更新 conda 至最新版本conda update conda执行命令后，conda 将会对版本进行比较并列出可以升级的版本。同时，也会告知用户其他相关包也会升级到相应版本。</li></ol><p>当较新的版本可以用于升级时，终端会显示 Proceed ([y]/n)?，此时输入 y 即可进行升级。</p><ol start="3"><li><p>查看 conda 帮助信息</p><p>conda –help 或 conda -h</p></li><li><p>卸载 conda</p><p>① Linux 或 macOS</p><p>rm -rf ~/anaconda2 或 rm -rf ~/anaconda3</p><p>即删除 Anaconda 的安装目录。根据安装的 Anaconda 版本选择相应的卸载命令。</p><p>② Windows</p><p>控制面板 → 添加或删除程序 → 选择“Python X.X (Anaconda)”→ 点击“删除程序”</p></li></ol><p>注意：</p><p>Python X.X：即 Python 的版本，如：Python 3.6。</p><p>Windows 10 的删除有所不同。</p><h2 id="五、管理环境"><a href="#五、管理环境" class="headerlink" title="五、管理环境"></a>五、管理环境</h2><ol start="0"><li>写在前面</li></ol><p>接下来均是以命令行模式进行介绍，Windows 用户请打开“Anaconda</p><p>Prompt”；macOS 和 Linux 用户请打开“Terminal”（“终端”）进行操作。</p><ol><li>创建新环境conda create –name</li></ol><p>注意：</p><p>即创建的环境名。建议以英文命名，且不加空格，名称两边不加尖括号“&lt;&gt;”。</p><p>即安装在环境中的包名。名称两边不加尖括号“&lt;&gt;”。</p><p>如果要安装指定的版本号，则只需要在包名后面以=和版本号的形式执行。如：conda create –name python2 python=2.7，即创建一个名为“python2”的环境，环境中安装版本为 2.7 的 python。</p><p>如果要在新创建的环境中创建多个包，则直接在后以空格隔开，添加多个包名即可。如：conda create -n python3 python=3.5 numpy pandas，即创建一个名为“python3”的环境，环境中安装版本为 3.5 的 python，同时也安装了 numpy 和 pandas。</p><p>–name 同样可以替换为-n。</p><p>提示：默认情况下，新创建的环境将会被保存在/Users//anaconda3/env目录下，其中，为当前用户的用户名。</p><ol start="2"><li><p>切换环境</p><p>① Linux 或 macOS</p><p>source activate</p><p>② Windows</p><p>activate</p><p>③ 提示</p></li></ol><p>如果创建环境后安装 Python 时没有指定 Python 的版本，那么将会安装与 Anaconda 版本相同的 Python 版本，即如果安装 Anaconda 第 2 版，则会自动安装 Python 2.x；如果安装 Anaconda 第 3 版，则会自动安装Python 3.x。</p><p>当成功切换环境之后，在该行行首将以“(env_name)”或“[env_name]”开头。其中，“env_name”为切换到的环境名。如：在 macOS 系统中执行source active python2，即切换至名为“python2”的环境，则行首将会以(python2)开头。</p><ol start="3"><li><p>退出环境至 root</p><p>① Linux 或 macOS</p><p>source deactivate</p><p>② Windows</p><p>deactivate</p><p>③ 提示</p></li></ol><p>当执行退出当前环境，回到 root 环境命令后，原本行首以“(env_name)”或“[env_name]”开头的字符将不再显示。</p><ol start="4"><li><p>显示已创建环境</p><p>conda info –envs 或 conda info -e 或 conda env list</p></li></ol><p>例如：</p><p>结果中星号“*”所在行即为当前所在环境。macOS 系统中默认创建的环境名为“base”。</p><ol start="5"><li><p>复制环境</p><p>conda create –name–clone</p></li></ol><p>注意：</p><p>即为被复制/克隆环境名。环境名两边不加尖括号“&lt;&gt;”。</p><p>即为复制之后新环境的名称。环境名两边不加尖括号“&lt;&gt;”。</p><p>如：conda create –name py2 –clone python2，即为克隆名为“python2”的环境，克隆后的新环境名为“py2”。此时，环境中将同时存在“python2”和“py2”环境，且两个环境的配置相同。</p><ol start="6"><li>删除环境conda remove –name–all</li></ol><p>注意：为被删除环境的名称。环境名两边不加尖括号“&lt;&gt;”。</p><h2 id="六、管理包"><a href="#六、管理包" class="headerlink" title="六、管理包"></a>六、管理包</h2><ol><li><p>查找可供安装的包版本</p><p>① 精确查找</p><p>conda search –full-name</p></li></ol><p>注意：</p><p>–full-name 为精确查找的参数。</p><p>是被查找包的全名。包名两边不加尖括号“&lt;&gt;”。</p><p>例如：conda search –full-name python 即查找全名为“python”的包有哪些版本可供安装。</p><p>​        ② 模糊查找</p><p>​            conda search</p><p>注意：是查找含有此字段的包名。此字段两边不加尖括号“&lt;&gt;”。</p><p>例如：conda search py 即查找含有“py”字段的包，有哪些版本可供安装。</p><ol start="2"><li><p>获取当前环境中已安装的包信息</p><p>conda list</p><p>执行上述命令后将在终端显示当前环境已安装包的包名及其版本号。</p></li><li><p>安装包</p><p>① 在指定环境中安装包</p><p>conda install –name</p></li></ol><p>注意：</p><p>即将包安装的指定环境名。环境名两边不加尖括号“&lt;&gt;”。</p><p>即要安装的包名。包名两边不加尖括号“&lt;&gt;”。</p><p>例如：conda install –name python2 pandas 即在名为“python2”的环境中安装 pandas 包。</p><p>​    ② 在当前环境中安装包</p><p>conda install</p><p>注意：</p><p>即要安装的包名。包名两边不加尖括号“&lt;&gt;”。</p><p>执行命令后在当前环境中安装包。</p><p>例如：conda install pandas 即在当前环境中安装 pandas 包。</p><p>③ 使用 pip 安装包→ 使用场景当使用 conda install 无法进行安装时，可以使用 pip 进行安装。例如：</p><p>see 包。</p><p>→ 命令</p><p>pip install</p><p>注意：为指定安装包的名称。包名两边不加尖括号“&lt;&gt;”。</p><p>如：pip install see 即安装 see 包。</p><p>→ 注意</p><p>1.pip 只是包管理器，无法对环境进行管理。因此如果想在指定环境中使用 pip 进行安装包，则需要先切换到指定环境中，再使用 pip 命令安装包。</p><p>pip 无法更新 python，因为 pip 并不将 python 视为包。</p><p>pip 可以安装一些 conda 无法安装的包；conda 也可以安装一些 pip 无法安装的包。因此当使用一种命令无法安装包时，可以尝试用另一种命令。</p><p>④ 从 Anaconda.org 安装包→ 使用场景</p><p>当使用 conda install 无法进行安装时，可以考虑从 Anaconda.org 中获取安装包的命令，并进行安装。</p><p>→ 注意</p><p>1.从 Anaconda.org 安装包时，无需注册。在当前环境中安装来自于 Anaconda.org 的包时，需要通过输入要安装的包在 Anaconda.org 中的路径作为获取途径（channel）。查询路径的方式如下：</p><p>在浏览器中输入：<a href="http://anaconda.org,或直接点击/">http://anaconda.org，或直接点击</a> Anaconda.org</p><p>在新页面“Anaconda Cloud”的上方搜索框中输入要安装的包名，然后点击右边“放大镜”标志。</p><p>搜索结果中有数以千计的包可供选择，此时点击“Downloads”可根据下载量进行排序，最上面的为下载最多的包。（图中以搜索 bottleneck 包为例）</p><p>选择满足需求的包或下载量最多的包，点击包名。</p><p>复制“To install this package with conda run:”下方的命令，并粘贴在终端中执行。</p><p>完成安装。</p><ol start="4"><li><p>卸载包</p><p>① 卸载指定环境中的包</p></li></ol><p>conda remove –name</p><p>注意：</p><p>即卸载包所在指定环境的名称。环境名两边不加尖括号“&lt;&gt;”。</p><p>即要卸载包的名称。包名两边不加尖括号“&lt;&gt;”。</p><p>例如：conda remove –name python2 pandas 即卸载名为“python2”中的 pandas 包。</p><p>② 卸载当前环境中的包</p><p>conda remove</p><p>注意：</p><p>即要卸载包的名称。包名两边不加尖括号“&lt;&gt;”。</p><p>执行命令后即在当前环境中卸载指定包。</p><p>例如：conda remove pandas 即在当前环境中卸载 pandas 包。</p><ol start="5"><li>更新包</li></ol><p>① 更新所有包</p><p>conda update –all 或 conda upgrade –all</p><p>建议：在安装 Anaconda 之后执行上述命令更新 Anaconda 中的所有包至最新版本，便于使用。</p><p>② 更新指定包</p><p>conda update 或 conda upgrade</p><p>注意：</p><p>为指定更新的包名。包名两边不加尖括号“&lt;&gt;”。</p><p>更新多个指定包，则包名以空格隔开，向后排列。如：conda update pandas numpy matplotlib 即更新 pandas、numpy、matplotlib 包。</p>]]></content>
      
      
      <categories>
          
          <category> python爬虫技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络操作系统2</title>
      <link href="2021/09/02/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F2/"/>
      <url>2021/09/02/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F2/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux网络操作系统2"><a href="#Linux网络操作系统2" class="headerlink" title="Linux网络操作系统2"></a>Linux网络操作系统2</h1><p>一.Linux简介<br>1.Linux的起源<br>2.Linux的版权问题<br>自由软件：自由使用、自由学习和修改、自由分发、自由创建衍生版。GUN的定义是一个递归缩写，就是GUN IS NOT UNIX。<br>二.Linux体系结构<br>Linux一般有3个主要部分：内核（Kernel）、命令解析层（Shel1或其他操作环境）、实用工具。</p><p>五.Linux系统的特点<br>1.源码公开<br>2.安全性及可靠性好<br>3.广泛的硬件支持<br>4.出色的速度性能<br>5.支持多重硬件平台<br>6.友好的用户界面<br>7.强大的网络功能<br>8.支持多任务、多用户</p><p>六.桌面环境<br>在Linux中，一个桌面环境（Desktop environment，有时称为桌面管理器）为计算机提供一个图形用户界面（GUI）。但严格来说窗口管理器和桌面环境是有区别的。桌面环境是为Linux/Unix操作系统提供一个更加完备的界面以及大量各类整合工具和使用程序，其基本易用性吸引着大量的新用户。<br>现今主流的桌面环境有KDE，gnome，Xfce，LXDE等，除此之外还有Ambient，EDE，IRIXInteractive Desktop，Mezzo，Sugar，CDE等。</p><h2 id="项目实施"><a href="#项目实施" class="headerlink" title="项目实施"></a>项目实施</h2><h1 id="安装RHEL7-6超详细教程"><a href="#安装RHEL7-6超详细教程" class="headerlink" title="安装RHEL7.6超详细教程"></a>安装RHEL7.6超详细教程</h1><h2 id="虚拟机的安装"><a href="#虚拟机的安装" class="headerlink" title="虚拟机的安装"></a>虚拟机的安装</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>RHEL7.5或其他的镜像</p><p>（此教程为RHEL7.6）</p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>打开虚拟机软件，如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrUJiT.png"></p><p>选择【创建新的虚拟机】，如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrUqSg.png"></p><p>选择【自定义（高级）】选项，点击”下一步【下一步】</p><p><img src="https://z3.ax1x.com/2021/09/02/hragA0.png"></p><p> 选择【稍后安装操作系统】，然后选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hraL4K.png"></p><p>客户机操作系统选择【Linux】，版本选择【Red Hat Enterprise Linux 7 64位】，然后选择【下一步】。</p><p><img src="https://z3.ax1x.com/2021/09/02/hrds2D.png"></p><p>虚拟机名称可以自定义，无所谓，位置选择一个相对合适的位置，比如磁盘剩余空间比较大的分区中的一个目录，如图中所示，然后选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrwtW8.png"></p><p>处理器数量和核心根据自己电脑的情况来选择，然后选择下一步：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrwfOJ.png"></p><p>虚拟机内存根据自己电脑的内存情况进行分配，可以通过滑块来选择，也可以直接输入值来定义内存大小，建议不要超过电脑物理内存的一半，</p><p>然后选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr0e7n.png"></p><p>网络类型根据自己的情况来选择，如果你暂时不理解该页面选项的含义，直接选择【使用仅主机模式网络】，</p><p>然后选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr0ah6.png"></p><p>根据默认，选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr0h38.png"></p><p>根据默认，选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr0qNq.png"></p><p>如果没有可以选择的虚拟磁盘，就根据默认选择【创建新虚拟磁盘】，</p><p>然后选择【下一步】：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrBrGV.png"></p><p>【最大磁盘大小】：根据硬盘情况来选择，这里选择50G，一般情况下，只要文件系统支持，请选择【将虚拟磁盘存储为单个文件】，</p><p>然后选择【下一步】:</p><p><img src="https://z3.ax1x.com/2021/09/02/hrBOZd.png"></p><p>按照默认的虚拟磁盘名称，选择【下一步】:</p><p><img src="https://z3.ax1x.com/2021/09/02/hrD3w9.png"></p><p>根据个人情况选择删除设备，选中点击移除即可 </p><p>选择【完成】按钮，完成虚拟机的硬件配置。</p><h2 id="2-虚拟机的安装操作系统"><a href="#2-虚拟机的安装操作系统" class="headerlink" title="2.虚拟机的安装操作系统"></a>2.虚拟机的安装操作系统</h2><h3 id="2-1选择安装光盘镜像"><a href="#2-1选择安装光盘镜像" class="headerlink" title="2.1选择安装光盘镜像"></a>2.1选择安装光盘镜像</h3><p>接下来，要完成的是虚拟机操作系统的安装，要完成虚拟机操作系统的安装，首先要在虚拟机中加载RHEL7.6的系统镜像，如图所示：点击编辑虚拟机设置</p><p><img src="https://z3.ax1x.com/2021/09/02/hrr3jS.png"></p><p>选中CD/DVD，在右边连接中选择【使用ISO映像文件】，然后根据你存放的RHEL7.6系统镜像的位置来选择该映像文件，然后点击【确定】按钮来完成系统镜像的装载。</p><p><img src="https://z3.ax1x.com/2021/09/02/hrsF5n.png"></p><h3 id="2-2启动虚拟机进行安装"><a href="#2-2启动虚拟机进行安装" class="headerlink" title="2.2启动虚拟机进行安装"></a>2.2启动虚拟机进行安装</h3><p>点击【开启此虚拟机】按钮，开启虚拟机，系统会自动通过光盘进行引导。光盘镜像默认提供三个选项：</p><p>第一个选项为正常安装系统选项；</p><p>第二个选项为测试介质并安装，我们使用的是光盘镜像，无需进行测试；</p><p>第三个选项为排错选项，使用该选项，我们可以使用各种系统工具进行系统修复。<br><img src="https://z3.ax1x.com/2021/09/02/hrsrGt.png"></p><p>通过在虚拟机范围内点击鼠标进入到虚拟机环境，然后通过键盘上下键来移动焦点，选中第一项，白色显示的为选中项，选中第一项后按回车键。系统会跳转到下面的页面：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr6NAH.png"></p><p>你可以直接按回车键继续，也可以等待超时后系统会自动进行下一步，过程如下图：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr6su8.png"></p><p>系统会停止到如下界面，该见面用来选择在安装过程中的语言，划到最下方选择中文，中文简体（英文较好的可以不用理会）</p><p>如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr65vV.png"></p><p>单击【继续】按钮会跳转到安装选项页面，在该页面，需要调整的有【语言支持】、【软件选择】、【安装位置】和【KDUMP】几个选项。</p><p>在【软件选择】选项中，需要选择安装图形界面，在左边选择【带GUI的服务器】，在右边选中【KDE】选项，然后单击【Done 完成】返回安装选项界面。返回后再安装选项页面会有正在检查依赖关系的提示。</p><p><img src="https://z3.ax1x.com/2021/09/02/hrcfde.png"></p><p>在【日期&amp;时间】选项，选择亚洲的上海地区 如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrgfXV.png"></p><p>【安装位置】选择自动分区 【完成】完成操作</p><p><img src="https://z3.ax1x.com/2021/09/02/hr2Khj.png"></p><p>返回到安装配置界面后，选择【KDUMP】选项，【启用Enable Kdump】的选项，然后单击【完成】按钮返回安装配置界面。如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr2Bg1.png"></p><p>最终完成的安装配置页面如下图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr2oKP.png"></p><p>完成上述操作后，点击 【开始安装】来进行操作系统的安装。</p><p><img src="https://z3.ax1x.com/2021/09/02/hrRmKx.png"></p><p>我们可以在该页面看到我们对硬盘进行的操作，安装软件的情况等，在该页面，需要配置root用户的密码和创建一个普通用户。</p><p>单击【ROOT密码】选项，输入密码“123456”，然后再确认栏再次输入密码“123456“,然后单击【完成】按钮两次返回安装进度页面，注意页面下方的提示（自己想自己能记住的密码）</p><p>如图所示：<br><img src="https://z3.ax1x.com/2021/09/02/hrRyzn.png"></p><p>单击【创建用户】，进入普通用户创建页面，<strong>创建654321用户，密码为“654321“</strong>，这里创建的密码都为学习测试使用，在实际工作和生产环境中，请勿使用这样的密码，切记！输入完成之后如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hrWPyt.png"></p><p>点击【完成】按钮两次退出该页面，完成普通用户创建。</p><p>等待系统安装完成后，系统会提示重新启动操作系统，单击【重新启动】按钮进行重启。如图所示：</p><p><img src="https://z3.ax1x.com/2021/09/02/hr4ETK.png"></p><p>系统重启后，啥都不用点 你要做的只是静静的等待即可</p><p><img src="https://z3.ax1x.com/2021/09/02/hr4mfe.png"></p><p>这里提示要同意证书 就是同意linux的一些条款</p><p><img src="https://z3.ax1x.com/2021/09/02/hr41mt.png"></p><p>点击下方的同意按钮，然后点【完成】</p><p><img src="https://z3.ax1x.com/2021/09/02/hr4Bmq.png"></p><p>点击右下角的【完成配置】</p><p><img src="https://z3.ax1x.com/2021/09/02/hr4fXR.png"></p><p>稍待片刻</p><p><img src="https://z3.ax1x.com/2021/09/05/hW1x4x.png"></p><p>至此，RHEL7.6虚拟主机系统已安装完成。</p><p>如果想root登录，点击【未列出？】</p><p>用户名是123456密码是123456（刚才设置的）</p><p><img src="https://z3.ax1x.com/2021/09/02/hr5F3Q.png"></p><p>点击右下角的光盘 挂载RHEL7.6的镜像文件</p><p><img src="https://z3.ax1x.com/2021/09/02/hr5qaV.png"></p><p><strong>安装完成后 一定一定 先拍摄快照 防止一些不可抗因素导致的系统出现故障后 可以恢复最开始的样子 关机后拍摄快照速度快（建立关机拍摄）</strong></p><p><img src="https://z3.ax1x.com/2021/09/02/hrIdZq.png"></p><p><img src="https://z3.ax1x.com/2021/09/02/hroa1e.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法教程</title>
      <link href="2021/09/01/MarkDown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/MarkDown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/"/>
      <url>2021/09/01/MarkDown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/MarkDown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h1><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>标题语法</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>最多只支持6级标题</p><p>一级标题<br>二级标题<br>三级标题<br>四级标题<br>五级标题<br>六级标题</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><p>最多只支持6级标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=============</span><br><span class="line">二级标题</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最多只支持6级标题</span><br><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><hr><h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><h4 id="字形状"><a href="#字形状" class="headerlink" title="字形状"></a>字形状</h4><p>粗体的两种写法<br><strong>粗体</strong><br><strong>粗体</strong><br><em>斜体</em><br><em>斜体</em><br><del>被删除的字体</del></p><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><h5 id="红"><a href="#红" class="headerlink" title="红"></a>红</h5><p>$\color{Red}{Red}$</p><h5 id="蓝"><a href="#蓝" class="headerlink" title="蓝"></a>蓝</h5><p>$\color{blue}{Blue}$</p><h5 id="橙色"><a href="#橙色" class="headerlink" title="橙色"></a>橙色</h5><p>$\color{orange}{Orange}$  </p><h5 id="绿色"><a href="#绿色" class="headerlink" title="绿色"></a>绿色</h5><p>$\color{Green}{Green}$</p><h5 id="灰色"><a href="#灰色" class="headerlink" title="灰色"></a>灰色</h5><p>$\color{gray}{Gray}$</p><h5 id="紫色"><a href="#紫色" class="headerlink" title="紫色"></a>紫色</h5><p>$\color{purple}{Purple}$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#### 字形状</span><br><span class="line">粗体的两种写法  </span><br><span class="line">__粗体__    </span><br><span class="line">**粗体**    </span><br><span class="line">_斜体_  </span><br><span class="line">*斜体*</span><br><span class="line">~~被删除的字体~~</span><br><span class="line">#### 颜色</span><br><span class="line">##### 红</span><br><span class="line">$\color&#123;Red&#125;&#123;Red&#125;$</span><br><span class="line">##### 蓝</span><br><span class="line">$\color&#123;blue&#125;&#123;Blue&#125;$</span><br><span class="line">##### 橙色</span><br><span class="line">$\color&#123;orange&#125;&#123;Orange&#125;$  </span><br><span class="line">##### 绿色</span><br><span class="line">$\color&#123;Green&#125;&#123;Green&#125;$</span><br><span class="line">##### 灰色</span><br><span class="line">$\color&#123;gray&#125;&#123;Gray&#125;$</span><br><span class="line">##### 紫色</span><br><span class="line">$\color&#123;purple&#125;&#123;Purple&#125;$</span><br></pre></td></tr></table></figure><hr><p><span style="border-bottom:2px dashed blue;">所添加的需要加下划线的行内文字</span></p><p>浅红色文字：<font color="#dd0000">浅红色文字：</font><br /><br>深红色文字：<font color="#660000">深红色文字</font><br /><br>浅绿色文字：<font color="#00dd00">浅绿色文字</font><br /><br>深绿色文字：<font color="#006600">深绿色文字</font><br /><br>浅蓝色文字：<font color="#0000dd">浅蓝色文字</font><br /><br>深蓝色文字：<font color="#000066">深蓝色文字</font><br /><br>浅黄色文字：<font color="#dddd00">浅黄色文字</font><br /><br>深黄色文字：<font color="#666600">深黄色文字</font><br /><br>浅青色文字：<font color="#00dddd">浅青色文字</font><br /><br>深青色文字：<font color="#006666">深青色文字</font><br /><br>浅紫色文字：<font color="#dd00dd">浅紫色文字</font><br /><br>深紫色文字：<font color="#660066">深紫色文字</font><br /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;span style=&quot;border-bottom:2px dashed blue;&quot;&gt;所添加的需要加下划线的行内文字&lt;/span&gt;</span><br><span class="line">浅红色文字：&lt;font color=&quot;#dd0000&quot;&gt;浅红色文字：&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深红色文字：&lt;font color=&quot;#660000&quot;&gt;深红色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">浅绿色文字：&lt;font color=&quot;#00dd00&quot;&gt;浅绿色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深绿色文字：&lt;font color=&quot;#006600&quot;&gt;深绿色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">浅蓝色文字：&lt;font color=&quot;#0000dd&quot;&gt;浅蓝色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深蓝色文字：&lt;font color=&quot;#000066&quot;&gt;深蓝色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">浅黄色文字：&lt;font color=&quot;#dddd00&quot;&gt;浅黄色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深黄色文字：&lt;font color=&quot;#666600&quot;&gt;深黄色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">浅青色文字：&lt;font color=&quot;#00dddd&quot;&gt;浅青色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深青色文字：&lt;font color=&quot;#006666&quot;&gt;深青色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">浅紫色文字：&lt;font color=&quot;#dd00dd&quot;&gt;浅紫色文字&lt;/font&gt;&lt;br /&gt; </span><br><span class="line">深紫色文字：&lt;font color=&quot;#660066&quot;&gt;深紫色文字&lt;/font&gt;&lt;br /&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h4><ol><li>行内公式：将公式插入到本行内，符号：<code>$公式内容$</code>，如：$xyz$</li><li>独行公式：将公式插入到新的一行内，并且居中，符号：<code>$$公式内容$$</code>，如：$$xyz$$</li></ol><hr><h4 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h4><ol><li>上标符号，符号：<code>^</code>，如：$x^4$</li><li>下标符号，符号：<code>_</code>，如：$x_1$</li><li>组合符号，符号：<code>&#123;&#125;</code>，如：${16}_{8}O{2+}_{2}$</li></ol><hr><h4 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h4><ol><li>汉字形式，符号：<code>\mbox&#123;&#125;</code>，如：$V_{\mbox{初始}}$</li><li>字体控制，符号：<code>\displaystyle</code>，如：$\displaystyle \frac{x+y}{y+z}$</li><li>下划线符号，符号：<code>\underline</code>，如：$\underline{x+y}$</li><li>标签，符号<code>\tag&#123;数字&#125;</code>，如：$\tag{11}$</li><li>上大括号，符号：<code>\overbrace&#123;算式&#125;</code>，如：$\overbrace{a+b+c+d}^{2.0}$</li><li>下大括号，符号：<code>\underbrace&#123;算式&#125;</code>，如：$a+\underbrace{b+c}_{1.0}+d$</li><li>上位符号，符号：<code>\stacrel&#123;上位符号&#125;&#123;基位符号&#125;</code>，如：$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</li></ol><hr><h4 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h4><ol><li>两个quad空格，符号：<code>\qquad</code>，如：$x \qquad y$</li><li>quad空格，符号：<code>\quad</code>，如：$x \quad y$</li><li>大空格，符号<code>\</code>，如：$x \  y$</li><li>中空格，符号<code>\:</code>，如：$x : y$</li><li>小空格，符号<code>\,</code>，如：$x , y$</li><li>没有空格，符号``，如：$xy$</li><li>紧贴，符号<code>\!</code>，如：$x ! y$</li></ol><hr><h4 id="界定符与组合"><a href="#界定符与组合" class="headerlink" title="界定符与组合"></a>界定符与组合</h4><ol><li>括号，符号：<code>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</code>，如：$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</li><li>中括号，符号：<code>[]</code>，如：$[x+y]$</li><li>大括号，符号：<code>\&#123; \&#125;</code>，如：${x+y}$</li><li>自适应括号，符号：<code>\left \right</code>，如：$\left(x\right)$，$\left(x{yz}\right)$</li><li>组合公式，符号：<code>&#123;上位公式 \choose 下位公式&#125;</code>，如：${n+1 \choose k}={n \choose k}+{n \choose k-1}$</li><li>组合公式，符号：<code>&#123;上位公式 \atop 下位公式&#125;</code>，如：$\sum_{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots$</li></ol><hr><h4 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h4><ol><li>加法运算，符号：<code>+</code>，如：$x+y=z$</li><li>减法运算，符号：<code>-</code>，如：$x-y=z$</li><li>加减运算，符号：<code>\pm</code>，如：$x \pm y=z$</li><li>减甲运算，符号：<code>\mp</code>，如：$x \mp y=z$</li><li>乘法运算，符号：<code>\times</code>，如：$x \times y=z$</li><li>点乘运算，符号：<code>\cdot</code>，如：$x \cdot y=z$</li><li>星乘运算，符号：<code>\ast</code>，如：$x \ast y=z$</li><li>除法运算，符号：<code>\div</code>，如：$x \div y=z$</li><li>斜法运算，符号：<code>/</code>，如：$x/y=z$</li><li>分式表示，符号：<code>\frac&#123;分子&#125;&#123;分母&#125;</code>，如：$\frac{x+y}{y+z}$</li><li>分式表示，符号：<code>&#123;分子&#125; \voer &#123;分母&#125;</code>，如：${x+y} \over {y+z}$</li><li>绝对值表示，符号：<code>||</code>，如：$|x+y|$</li></ol><hr><h3 id="格式控制"><a href="#格式控制" class="headerlink" title="格式控制"></a>格式控制</h3><p><strong>Tab或者2个以上空格代表换行</strong></p><p><strong>分割线是三个</strong>*</p><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>有序列表</p><ol><li> 列表项1</li><li> 列表项2</li><li> 列表项3</li></ol><p>无序列表  </p><ul><li> 列表项1</li><li> 列表项2</li></ul><ul><li>列表项3</li><li>列表项4</li></ul><ul><li> 列表项5</li><li> 列表项6</li></ul><p>嵌套无序列表  </p><ul><li> 列表项1</li><li>列表项2<ul><li>列表项3</li><li>列表项4<ul><li> 列表项5</li><li> 列表项6</li></ul></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">有序列表</span><br><span class="line">1.  列表项1</span><br><span class="line">2.  列表项2</span><br><span class="line">3.  列表项3</span><br><span class="line"></span><br><span class="line">无序列表  </span><br><span class="line">+  列表项1</span><br><span class="line">+  列表项2</span><br><span class="line">- 列表项3</span><br><span class="line">- 列表项4</span><br><span class="line">*  列表项5</span><br><span class="line">*  列表项6</span><br><span class="line"></span><br><span class="line">嵌套无序列表  </span><br><span class="line">+  列表项1</span><br><span class="line">+  列表项2</span><br><span class="line">   - 列表项3</span><br><span class="line">   - 列表项4</span><br><span class="line">     *  列表项5</span><br><span class="line">     *  列表项6</span><br></pre></td></tr></table></figure><hr><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="直接链接"><a href="#直接链接" class="headerlink" title="直接链接"></a>直接链接</h4><p> <a href="https://*//www.baidu.com/">谷歌</a>       </p><p>引用链接<a href="http://www.google.com/">百度</a> </p><h4 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h4><p>网络链接<a href="https://www.baidu.com/">https://www.baidu.com</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### 直接链接</span><br><span class="line">[谷歌](https://www.baidu.com/)      </span><br><span class="line">引用链接[百度][1]</span><br><span class="line">#### 引用链接</span><br><span class="line">[1]: http://www.google.com/  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">网络链接&lt;https://www.baidu.com&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="代码支持"><a href="#代码支持" class="headerlink" title="代码支持"></a>代码支持</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">template &lt;typename T&gt; struct Base &#123;</span><br><span class="line">    void f() &#123;</span><br><span class="line">        std::cerr &lt;&lt; &quot;Base&lt;T&gt;::f\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">template &lt;typename T&gt; struct Derived : Base&lt;T&gt; &#123;</span><br><span class="line">    void g() &#123;</span><br><span class="line">        std::cerr &lt;&lt; &quot;Derived&lt;T&gt;::g\n &quot;;</span><br><span class="line">        f();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">template &lt;typename T&gt; struct Base &#123;</span><br><span class="line">    void f() &#123;</span><br><span class="line">        std::cerr &lt;&lt; &quot;Base&lt;T&gt;::f\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">template &lt;typename T&gt; struct Derived : Base&lt;T&gt; &#123;</span><br><span class="line">    void g() &#123;</span><br><span class="line">        std::cerr &lt;&lt; &quot;Derived&lt;T&gt;::g\n &quot;;</span><br><span class="line">        f();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><hr><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>自动整理表格Alt+Shift+F<br>| 姓名 | 性别 | 对齐方式对齐方式 | 对齐方式对齐方式 | 对齐方式对齐方式 |<br>| —- | —- | —————- | —————: | :————–: |<br>| 小红 | 男   | 左对齐           |           右对齐 |       居中       |<br>| 小红 | 男   | 左对齐           |           右对齐 |       居中       |<br>| 小红 | 男   | 左对齐           |           右对齐 |       居中       |</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">自动整理表格Alt+Shift+F</span><br><span class="line">| 姓名 | 性别 | 对齐方式对齐方式 | 对齐方式对齐方式 | 对齐方式对齐方式 |</span><br><span class="line">| ---- | ---- | ---------------- | ---------------: | :--------------: |</span><br><span class="line">| 小红 | 男   | 左对齐           |           右对齐 |       居中       |</span><br><span class="line">| 小红 | 男   | 左对齐           |           右对齐 |       居中       |</span><br><span class="line">| 小红 | 男   | 左对齐           |           右对齐 |       居中       |</span><br></pre></td></tr></table></figure><hr><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><ul><li><input checked="" disabled="" type="checkbox"> 吃 </li><li><input disabled="" type="checkbox"> 喝</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">### 任务列表</span><br><span class="line">- [x] 吃</span><br><span class="line">- [ ] 喝</span><br></pre></td></tr></table></figure><hr><h3 id="目录示例"><a href="#目录示例" class="headerlink" title="目录示例"></a>目录示例</h3><p><a href="#%E5%88%97%E8%A1%A8">第一章</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###目录示例</span><br><span class="line">[第一章](#列表)</span><br></pre></td></tr></table></figure><hr><h4 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h4><h5 id="普通矩阵"><a href="#普通矩阵" class="headerlink" title="普通矩阵"></a>普通矩阵</h5><p>$$\begin{matrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{matrix}$$</p><h5 id="小括号矩阵"><a href="#小括号矩阵" class="headerlink" title="小括号矩阵"></a>小括号矩阵</h5><p>$$\begin{pmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{pmatrix}$$</p><h5 id="方括号矩阵"><a href="#方括号矩阵" class="headerlink" title="方括号矩阵"></a>方括号矩阵</h5><p>$$\begin{bmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{bmatrix}$$</p><h5 id="大括号矩阵"><a href="#大括号矩阵" class="headerlink" title="大括号矩阵"></a>大括号矩阵</h5><p>$$\begin{Bmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{Bmatrix}$$</p><h5 id="双竖线矩阵"><a href="#双竖线矩阵" class="headerlink" title="双竖线矩阵"></a>双竖线矩阵</h5><p>$$\begin{Vmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{Vmatrix}$$</p><h5 id="单竖线矩阵"><a href="#单竖线矩阵" class="headerlink" title="单竖线矩阵"></a>单竖线矩阵</h5><p>$$\begin{vmatrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{vmatrix}$$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#### 矩阵</span><br><span class="line">##### 普通矩阵</span><br><span class="line">$$\begin&#123;matrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;matrix&#125;$$</span><br><span class="line">##### 小括号矩阵</span><br><span class="line">$$\begin&#123;pmatrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;pmatrix&#125;$$</span><br><span class="line">##### 方括号矩阵</span><br><span class="line">$$\begin&#123;bmatrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;bmatrix&#125;$$</span><br><span class="line">##### 大括号矩阵</span><br><span class="line">$$\begin&#123;Bmatrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;Bmatrix&#125;$$</span><br><span class="line">##### 双竖线矩阵</span><br><span class="line">$$\begin&#123;Vmatrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;Vmatrix&#125;$$</span><br><span class="line">##### 单竖线矩阵</span><br><span class="line">$$\begin&#123;vmatrix&#125;</span><br><span class="line">1&amp;0&amp;0\\</span><br><span class="line">0&amp;1&amp;0\\</span><br><span class="line">0&amp;0&amp;1\\</span><br><span class="line">\end&#123;vmatrix&#125;$$</span><br></pre></td></tr></table></figure><hr><h5 id="常见数学符号工具"><a href="#常见数学符号工具" class="headerlink" title="常见数学符号工具"></a>常见数学符号工具</h5><p>大写字符(首字母大小写)<br>$$\Gamma$$<br>$$\gamma$$</p><p>斜体字符<br>$$\varGamma$$</p><p>标^与下表_<br>$$C^2_N$$<br>$$C^{2+1}$$</p><p>求和<br>$$\sum$$</p><p>矢量<br>$$\vec{ab}$$</p><p>积分<br>$$\int$$</p><p>极限<br>$$\lim{0\to1}$$</p><p>分式<br>$$\frac{a}{b}$$</p><p>根式<br>$$\sqrt[5s]{s}$$</p><p>sin<br>$$\sin{x}$$</p><p>ln<br>$$\ln{x}$$</p><p>空格<br>$$a\quad b$$</p><p>省略号<br>$$\cdots$$<br>$$\vdots$$<br>$$\ddots$$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">##### 常见数学符号工具</span><br><span class="line"></span><br><span class="line">大写字符(首字母大小写)</span><br><span class="line">$$\Gamma$$</span><br><span class="line">$$\gamma$$</span><br><span class="line"></span><br><span class="line">斜体字符</span><br><span class="line">$$\varGamma$$</span><br><span class="line"></span><br><span class="line">标^与下表_</span><br><span class="line">$$C^2_N$$</span><br><span class="line">$$C^&#123;2+1&#125;$$</span><br><span class="line"></span><br><span class="line">求和</span><br><span class="line">$$\sum$$</span><br><span class="line"></span><br><span class="line">矢量</span><br><span class="line">$$\vec&#123;ab&#125;$$</span><br><span class="line"></span><br><span class="line">积分</span><br><span class="line">$$\int$$</span><br><span class="line"></span><br><span class="line">极限</span><br><span class="line">$$\lim&#123;0\to1&#125;$$</span><br><span class="line"></span><br><span class="line">分式</span><br><span class="line">$$\frac&#123;a&#125;&#123;b&#125;$$</span><br><span class="line"></span><br><span class="line">根式</span><br><span class="line">$$\sqrt[5s]&#123;s&#125;$$</span><br><span class="line"></span><br><span class="line">sin</span><br><span class="line">$$\sin&#123;x&#125;$$</span><br><span class="line"></span><br><span class="line">ln</span><br><span class="line">$$\ln&#123;x&#125;$$</span><br><span class="line"></span><br><span class="line">空格</span><br><span class="line">$$a\quad b$$</span><br><span class="line"></span><br><span class="line">省略号</span><br><span class="line">$$\cdots$$</span><br><span class="line">$$\vdots$$</span><br><span class="line">$$\ddots$$</span><br></pre></td></tr></table></figure><h5 id="阵列"><a href="#阵列" class="headerlink" title="阵列"></a>阵列</h5><p>$$\begin{array}{c|l|l|l|} {↓}&amp;{a}&amp;{b}&amp;{c}\ \hline {R_1}&amp;{c}&amp;{b}&amp;{a}\ {R_2}&amp;{b}&amp;{c}&amp;{c}\ \end{array}$$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##### 阵列</span><br><span class="line">$$\begin&#123;array&#125;&#123;c|l|l|l|&#125;</span><br><span class="line">&#123;↓&#125;&amp;&#123;a&#125;&amp;&#123;b&#125;&amp;&#123;c&#125;\\</span><br><span class="line">\hline</span><br><span class="line">&#123;R_1&#125;&amp;&#123;c&#125;&amp;&#123;b&#125;&amp;&#123;a&#125;\\</span><br><span class="line">&#123;R_2&#125;&amp;&#123;b&#125;&amp;&#123;c&#125;&amp;&#123;c&#125;\\</span><br><span class="line">\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure><h5 id="方程组"><a href="#方程组" class="headerlink" title="方程组"></a>方程组</h5><p>$$<br>\begin{cases}</p><p>a_1x+b_1y+c_1z=d_1\</p><p>a_2x+b_2y+c_2z=d_2\</p><p>a_3x+b_3y+c_3z=d_3\</p><p>\end{cases}<br>$$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##### 方程组</span><br><span class="line">$$\begin&#123;cases&#125;</span><br><span class="line">a_1x+b_1y+c_1z=d_1\\</span><br><span class="line">a_2x+b_2y+c_2z=d_2\\</span><br><span class="line">a_3x+b_3y+c_3z=d_3\\</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure><h5 id="其他特殊公式示例"><a href="#其他特殊公式示例" class="headerlink" title="其他特殊公式示例"></a>其他特殊公式示例</h5><ol><li>$\displaystyle\sum\limits_{i=0}^n i^3$</li><li> $\sqrt[n]{ab}$</li><li> $\sqrt{ab}$</li><li> $\log_{a}{b}$</li><li> $\lg{ab}$</li><li> $a^{b}$</li><li> $a_{b}$</li><li> $x_a^b$</li><li> $\int$</li><li>$\int_{a}^{b}$</li><li>$\oint$</li><li>$\oint_a^b$</li><li>$\sum$</li><li>$\sum_a^b$</li><li>$\coprod$</li><li>$\coprod_a^b$</li><li>$\prod$</li><li>$\prod_a^b$</li><li>$\bigcap$</li><li>$\bigcap_a^b$</li><li>$\bigcup$</li><li>$\bigcup_a^b$</li><li>$\bigsqcup$</li><li>$\bigsqcup_a^b$</li><li>$\bigvee$</li><li>$\bigvee_a^b$</li><li>$\bigwedge$</li><li>$\bigwedge_a^b$</li><li>$\widetilde{ab}$</li><li>$\widehat{ab}$</li><li>$\overleftarrow{ab}$</li><li>$\overrightarrow{ab}$</li><li>$\overbrace{ab}$</li><li>$\underbrace{ab}$</li><li>$\underline{ab}$</li><li>$\overline{ab}$</li><li>$\frac{ab}{cd}$</li><li>$\frac{\partial a}{\partial b}$</li><li>$\frac{\text{d}x}{\text{d}y}$</li><li>$\lim_{a \rightarrow b}$</li><li>$\displaystyle\sum\limits_{i=0}^n i^3$</li><li> $\left(\begin{array}{c}a\ b\end{array}\right)$</li><li> $\left(\frac{a^2}{b^3}\right)$</li><li> $\left.\frac{a^3}{3}\right\lvert_0^1$</li><li> $\begin{bmatrix}a &amp; b \c &amp; d \end{bmatrix}$</li><li> $\begin{cases}a &amp; x = 0\b &amp; x &gt; 0\end{cases}$</li><li> $\sqrt{\frac{n}{n-1} S}$</li><li> $\begin{pmatrix} \alpha&amp; \beta^{<em>}\ \gamma^{</em>}&amp; \delta \end{pmatrix}$</li><li> $A:\xleftarrow{n+\mu-1}:B$</li><li> $B:\xrightarrow[T]{n\pm i-1}:C$</li><li> $\frac{1}{k}\log_2 c(f);$</li><li> $\iint\limits_A f(x,y);$</li><li>  $x^n + y^n = z^n$</li><li>  $E=mc^2$</li><li>  $e^{\pi i} - 1 = 0$</li><li>  $p(x) = 3x^6$</li><li>  $3x + y = 12$</li><li>  $\int_0^\infty \mathrm{e}^{-x},\mathrm{d}x$</li><li>  $\sqrt[n]{1+x+x^2+\ldots}$</li><li>  $\binom{x}{y} = \frac{x!}{y!(x-y)!}$</li><li>  $\frac{\frac{1}{x}+\frac{1}{y}}{y-z}$</li><li>  $f(x)=\frac{P(x)}{Q(x)}$</li><li>  $\frac{1+\frac{a}{b}}{1+\frac{1}{1+\frac{1}{a}}}$</li><li>  $\sum_{\substack{0\le i\le m\ 0\lt j\lt n}} P(i,j)$</li><li>  $\lim_{x \to \infty} \exp(-x) = 0$</li><li>  $\cos (2\theta) = \cos^2 \theta - \sin^2 \theta$</li><li>  $\sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t$</li><li>$$\sum_{i=0}N\int_{a}{b}g(t,i)\text{d}t$$</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">##### 其他特殊公式示例</span><br><span class="line">1. $\displaystyle\sum\limits_&#123;i=0&#125;^n i^3$</span><br><span class="line">2.  $\sqrt[n]&#123;ab&#125;$</span><br><span class="line">3.  $\sqrt&#123;ab&#125;$</span><br><span class="line">4.  $\log_&#123;a&#125;&#123;b&#125;$</span><br><span class="line">5.  $\lg&#123;ab&#125;$</span><br><span class="line">6.  $a^&#123;b&#125;$</span><br><span class="line">7.  $a_&#123;b&#125;$</span><br><span class="line">8.  $x_a^b$</span><br><span class="line">9.  $\int$</span><br><span class="line">10. $\int_&#123;a&#125;^&#123;b&#125;$</span><br><span class="line">11. $\oint$</span><br><span class="line">12. $\oint_a^b$</span><br><span class="line">13. $\sum$</span><br><span class="line">14. $\sum_a^b$</span><br><span class="line">15. $\coprod$</span><br><span class="line">16. $\coprod_a^b$</span><br><span class="line">17. $\prod$</span><br><span class="line">18. $\prod_a^b$</span><br><span class="line">19. $\bigcap$</span><br><span class="line">20. $\bigcap_a^b$</span><br><span class="line">21. $\bigcup$</span><br><span class="line">22. $\bigcup_a^b$</span><br><span class="line">23. $\bigsqcup$</span><br><span class="line">24. $\bigsqcup_a^b$</span><br><span class="line">25. $\bigvee$</span><br><span class="line">26. $\bigvee_a^b$</span><br><span class="line">27. $\bigwedge$</span><br><span class="line">28. $\bigwedge_a^b$</span><br><span class="line">29. $\widetilde&#123;ab&#125;$</span><br><span class="line">30. $\widehat&#123;ab&#125;$</span><br><span class="line">31. $\overleftarrow&#123;ab&#125;$</span><br><span class="line">32. $\overrightarrow&#123;ab&#125;$</span><br><span class="line">33. $\overbrace&#123;ab&#125;$</span><br><span class="line">34. $\underbrace&#123;ab&#125;$</span><br><span class="line">35. $\underline&#123;ab&#125;$</span><br><span class="line">36. $\overline&#123;ab&#125;$</span><br><span class="line">37. $\frac&#123;ab&#125;&#123;cd&#125;$</span><br><span class="line">38. $\frac&#123;\partial a&#125;&#123;\partial b&#125;$</span><br><span class="line">39. $\frac&#123;\text&#123;d&#125;x&#125;&#123;\text&#123;d&#125;y&#125;$</span><br><span class="line">40. $\lim_&#123;a \rightarrow b&#125;$</span><br><span class="line">41. $\displaystyle\sum\limits_&#123;i=0&#125;^n i^3$</span><br><span class="line">42.  $\left(\begin&#123;array&#125;&#123;c&#125;a\\ b\end&#123;array&#125;\right)$</span><br><span class="line">43.  $\left(\frac&#123;a^2&#125;&#123;b^3&#125;\right)$</span><br><span class="line">44.  $\left.\frac&#123;a^3&#125;&#123;3&#125;\right\lvert_0^1$</span><br><span class="line">45.  $\begin&#123;bmatrix&#125;a &amp; b \\c &amp; d \end&#123;bmatrix&#125;$</span><br><span class="line">46.  $\begin&#123;cases&#125;a &amp; x = 0\\b &amp; x &gt; 0\end&#123;cases&#125;$</span><br><span class="line">47.  $\sqrt&#123;\frac&#123;n&#125;&#123;n-1&#125; S&#125;$</span><br><span class="line">48.  $\begin&#123;pmatrix&#125; \alpha&amp; \beta^&#123;*&#125;\\ \gamma^&#123;*&#125;&amp; \delta \end&#123;pmatrix&#125;$</span><br><span class="line">49.  $A\:\xleftarrow&#123;n+\mu-1&#125;\:B$</span><br><span class="line">50.  $B\:\xrightarrow[T]&#123;n\pm i-1&#125;\:C$</span><br><span class="line">51.  $\frac&#123;1&#125;&#123;k&#125;\log_2 c(f)\;$</span><br><span class="line">52.  $\iint\limits_A f(x,y)\;$</span><br><span class="line">53.   $x^n + y^n = z^n$</span><br><span class="line">54.   $E=mc^2$</span><br><span class="line">55.   $e^&#123;\pi i&#125; - 1 = 0$</span><br><span class="line">56.   $p(x) = 3x^6$</span><br><span class="line">57.   $3x + y = 12$</span><br><span class="line">58.   $\int_0^\infty \mathrm&#123;e&#125;^&#123;-x&#125;\,\mathrm&#123;d&#125;x$</span><br><span class="line">59.   $\sqrt[n]&#123;1+x+x^2+\ldots&#125;$</span><br><span class="line">60.   $\binom&#123;x&#125;&#123;y&#125; = \frac&#123;x!&#125;&#123;y!(x-y)!&#125;$</span><br><span class="line">61.   $\frac&#123;\frac&#123;1&#125;&#123;x&#125;+\frac&#123;1&#125;&#123;y&#125;&#125;&#123;y-z&#125;$</span><br><span class="line">62.   $f(x)=\frac&#123;P(x)&#125;&#123;Q(x)&#125;$</span><br><span class="line">63.   $\frac&#123;1+\frac&#123;a&#125;&#123;b&#125;&#125;&#123;1+\frac&#123;1&#125;&#123;1+\frac&#123;1&#125;&#123;a&#125;&#125;&#125;$</span><br><span class="line">64.   $\sum_&#123;\substack&#123;0\le i\le m\\ 0\lt j\lt n&#125;&#125; P(i,j)$</span><br><span class="line">65.   $\lim_&#123;x \to \infty&#125; \exp(-x) = 0$</span><br><span class="line">66.   $\cos (2\theta) = \cos^2 \theta - \sin^2 \theta$</span><br><span class="line">67.   $\sum_&#123;i=0&#125;^N\int_&#123;a&#125;^&#123;b&#125;g(t,i)\text&#123;d&#125;t$</span><br><span class="line">68.   $$\sum_&#123;i=0&#125;N\int_&#123;a&#125;&#123;b&#125;g(t,i)\text&#123;d&#125;t$$</span><br></pre></td></tr></table></figure><hr><h4 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h4><table><thead><tr><th>特殊字符</th><th>写法</th><th>特殊字符</th><th>写法</th></tr></thead><tbody><tr><td>α</td><td>$$\alpha    $$</td><td>β</td><td>$$\beta$$</td></tr><tr><td>γ</td><td>$$\gamma    $$</td><td>δ</td><td>$$\delta$$</td></tr><tr><td>ε</td><td>$$\epsilon    $$</td><td>ζ</td><td>$$\zeta$$</td></tr><tr><td>η</td><td>$$\eta    $$</td><td>θ</td><td>$$\theta$$</td></tr><tr><td>ι</td><td>$$\iota    $$</td><td>κ</td><td>$$\kappa$$</td></tr><tr><td>λ</td><td>$$\lambda    $$</td><td>μ</td><td>$$\mu$$</td></tr><tr><td>ν</td><td>$$\nu    $$</td><td>ξ</td><td>$$\xi$$</td></tr><tr><td>π</td><td>$$\pi    $$</td><td>ρ</td><td>$$\rho$$</td></tr><tr><td>σ</td><td>$$\sigma    $$</td><td>τ</td><td>$$\tau$$</td></tr><tr><td>υ</td><td>$$\upsilon    $$</td><td>φ</td><td>$$\phi$$</td></tr><tr><td>χ</td><td>$$\chi    $$</td><td>ψ</td><td>$$\psi$$</td></tr><tr><td>ω</td><td>$$\omega  $$</td><td></td><td></td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#### 数学符号</span><br><span class="line">| 特殊字符 | 写法          | 特殊字符 | 写法       |</span><br><span class="line">| -------- | ------------- | -------- | ---------- |</span><br><span class="line">| α        | $$\alpha$$   | β        | $$\beta$$  |</span><br><span class="line">| γ        | $$\gamma$$   | δ        | $$\delta$$ |</span><br><span class="line">| ε        | $$\epsilon$$ | ζ        | $$\zeta$$  |</span><br><span class="line">| η        | $$\eta$$     | θ        | $$\theta$$ |</span><br><span class="line">| ι        | $$\iota$$    | κ        | $$\kappa$$ |</span><br><span class="line">| λ        | $$\lambda$$  | μ        | $$\mu$$    |</span><br><span class="line">| ν        | $$\nu$$      | ξ        | $$\xi$$    |</span><br><span class="line">| π        | $$\pi$$      | ρ        | $$\rho$$   |</span><br><span class="line">| σ        | $$\sigma$$   | τ        | $$\tau$$   |</span><br><span class="line">| υ        | $$\upsilon$$ | φ        | $$\phi$$   |</span><br><span class="line">| χ        | $$\chi$$     | ψ        | $$\psi$$   |</span><br><span class="line">| ω        | $$\omega  $$  |          |            |</span><br></pre></td></tr></table></figure><ol><li> $\infty$</li><li>$\alpha$</li><li> $\beta$</li><li> $\chi$</li><li> $\delta$</li><li> $\Delta$</li><li> $\epsilon$</li><li> $\eta$</li><li> $\Gamma$</li><li> $\iota$</li><li> $\kappa$</li><li> $\lambda$</li><li> $\Lambda$</li><li> $\mu$</li><li> $\nabla$</li><li> $\nu$</li><li> $\omega$</li><li> $\Omega$</li><li> $\phi$</li><li> $\Phi$</li><li> $\pi$</li><li> $\Pi$</li><li> $\psi$</li><li> $\Psi$</li><li> $\rho$</li><li> $\sigma$</li><li> $\Sigma$</li><li> $\tau$</li><li> $\theta$</li><li> $\Theta$</li><li> $\upsilon$</li><li> $\varepsilon$</li><li> $\varsigma$</li><li> $\vartheta$</li><li> $\xi$</li><li> $\zeta$</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1.  $\infty$</span><br><span class="line">2. $\alpha$</span><br><span class="line">3.  $\beta$</span><br><span class="line">4.  $\chi$</span><br><span class="line">5.  $\delta$</span><br><span class="line">6.  $\Delta$</span><br><span class="line">7.  $\epsilon$</span><br><span class="line">8.  $\eta$</span><br><span class="line">9.  $\Gamma$</span><br><span class="line">10.  $\iota$</span><br><span class="line">11.  $\kappa$</span><br><span class="line">12.  $\lambda$</span><br><span class="line">13.  $\Lambda$</span><br><span class="line">14.  $\mu$</span><br><span class="line">15.  $\nabla$</span><br><span class="line">16.  $\nu$</span><br><span class="line">17.  $\omega$</span><br><span class="line">18.  $\Omega$</span><br><span class="line">19.  $\phi$</span><br><span class="line">20.  $\Phi$</span><br><span class="line">21.  $\pi$</span><br><span class="line">22.  $\Pi$</span><br><span class="line">23.  $\psi$</span><br><span class="line">24.  $\Psi$</span><br><span class="line">25.  $\rho$</span><br><span class="line">26.  $\sigma$</span><br><span class="line">27.  $\Sigma$</span><br><span class="line">28.  $\tau$</span><br><span class="line">29.  $\theta$</span><br><span class="line">30.  $\Theta$</span><br><span class="line">31.  $\upsilon$</span><br><span class="line">32.  $\varepsilon$</span><br><span class="line">33.  $\varsigma$</span><br><span class="line">34.  $\vartheta$</span><br><span class="line">35.  $\xi$</span><br><span class="line">36.  $\zeta$</span><br></pre></td></tr></table></figure><h5 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h5><ol><li>  $\emptyset$</li><li>  $\in$</li><li>  $\notin$</li><li>  $\subset$</li><li>  $\supset$</li><li>  $\subseteq$</li><li>  $\nsubseteq$</li><li>  $\nsupseteq$</li><li>  $\nsubseteqq$</li><li>  $\nsupseteqq$</li><li>  $\subsetneq$</li><li>  $\supsetneq$</li><li>  $\subsetneqq$</li><li>  $\supsetneqq$</li><li>  $\varsubsetneq$</li><li>  $\varsupsetneq$</li><li>  $\varsubsetneqq$</li><li>  $\varsupsetneqq$</li><li>  $\bigcap$</li><li>  $\bigcup$</li><li>  $\bigvee$</li><li>  $\bigwedge$</li><li>  $\biguplus$</li><li>  $\bigsqcup$</li><li>  $\Subset$</li><li>  $\Supset$</li><li>  $\subseteqq$</li><li>  $\supseteqq$</li><li>  $\sqsubset$</li><li>  $\sqsupset$</li><li> $\cdot$ </li><li> $\vdots$</li><li>  $\grave{x}$</li><li>  $.$</li><li>  $\ddots$</li><li>  $\breve{x}$</li><li>  $*$</li><li>  $,$</li><li>  $\dot{x}$</li><li>  $+$</li><li>  $!$</li><li>  $\widehat{xxx}$</li><li>  $-$</li><li>  $;$</li><li>  $\ddot{x}$</li><li>  $\times$</li><li>  $?$</li><li>  $\check{x}$</li><li>  $\div$</li><li>  $\colon$</li><li>  $=$</li><li>  $\acute{x}$</li><li>  $\tilde{x}$</li><li>  $\neq$</li><li>  $\bar{x}$</li><li>  $\hat{x}$</li><li>  $\dotsm$</li><li>  $\vec{x}$</li><li>  $\dotso$</li><li>  $\widetilde{xxx}$</li><li>  $\backslash$</li><li>  $/$</li><li>  $\brace[2212321]{s}{a}$</li><li>  $]$</li><li>  $\smallsetminus$</li><li>  $\lVert$</li><li>  $\lbrace$</li><li>  $\rVert$</li><li>  $\rbrace$</li><li>  $\lgroup$</li><li>  $\langle$</li><li>  $\lvert$</li><li>  $\rgroup$</li><li>  $\rangle$</li><li>  $\rvert$</li><li>  $[$</li><li>  $\lmoustache$</li><li>  $\rmoustache$</li><li>  $\lceil$</li><li>  $\rceil$</li><li>  $\lfloor$</li><li>  $\rfloor$</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">##### 特殊字符</span><br><span class="line">1.   $\emptyset$</span><br><span class="line">2.   $\in$</span><br><span class="line">3.   $\notin$</span><br><span class="line">4.   $\subset$</span><br><span class="line">5.   $\supset$</span><br><span class="line">6.   $\subseteq$</span><br><span class="line">7.   $\nsubseteq$</span><br><span class="line">8.   $\nsupseteq$</span><br><span class="line">9.   $\nsubseteqq$</span><br><span class="line">10.   $\nsupseteqq$</span><br><span class="line">11.   $\subsetneq$</span><br><span class="line">12.   $\supsetneq$</span><br><span class="line">13.   $\subsetneqq$</span><br><span class="line">14.   $\supsetneqq$</span><br><span class="line">15.   $\varsubsetneq$</span><br><span class="line">16.   $\varsupsetneq$</span><br><span class="line">17.   $\varsubsetneqq$</span><br><span class="line">18.   $\varsupsetneqq$</span><br><span class="line">19.   $\bigcap$</span><br><span class="line">20.   $\bigcup$</span><br><span class="line">21.   $\bigvee$</span><br><span class="line">22.   $\bigwedge$</span><br><span class="line">23.   $\biguplus$</span><br><span class="line">24.   $\bigsqcup$</span><br><span class="line">25.   $\Subset$</span><br><span class="line">26.   $\Supset$</span><br><span class="line">27.   $\subseteqq$</span><br><span class="line">28.   $\supseteqq$</span><br><span class="line">29.   $\sqsubset$</span><br><span class="line">30.   $\sqsupset$</span><br><span class="line">31.  $\cdot$ </span><br><span class="line">32.  $\vdots$</span><br><span class="line">33.   $\grave&#123;x&#125;$</span><br><span class="line">34.   $.$</span><br><span class="line">35.   $\ddots$</span><br><span class="line">36.   $\breve&#123;x&#125;$</span><br><span class="line">37.   $*$</span><br><span class="line">38.   $,$</span><br><span class="line">39.   $\dot&#123;x&#125;$</span><br><span class="line">40.   $+$</span><br><span class="line">41.   $!$</span><br><span class="line">42.   $\widehat&#123;xxx&#125;$</span><br><span class="line">43.   $-$</span><br><span class="line">44.   $;$</span><br><span class="line">45.   $\ddot&#123;x&#125;$</span><br><span class="line">46.   $\times$</span><br><span class="line">47.   $?$</span><br><span class="line">48.   $\check&#123;x&#125;$</span><br><span class="line">49.   $\div$</span><br><span class="line">50.   $\colon$</span><br><span class="line">51.   $=$</span><br><span class="line">52.   $\acute&#123;x&#125;$</span><br><span class="line">53.   $\tilde&#123;x&#125;$</span><br><span class="line">54.   $\neq$</span><br><span class="line">55.   $\bar&#123;x&#125;$</span><br><span class="line">56.   $\hat&#123;x&#125;$</span><br><span class="line">57.   $\dotsm$</span><br><span class="line">58.   $\vec&#123;x&#125;$</span><br><span class="line">59.   $\dotso$</span><br><span class="line">60.   $\widetilde&#123;xxx&#125;$</span><br><span class="line">61.   $\backslash$</span><br><span class="line">62.   $/$</span><br><span class="line">63.   $\brace[2212321]&#123;s&#125;&#123;a&#125;$</span><br><span class="line">64.   $]$</span><br><span class="line">65.   $\smallsetminus$</span><br><span class="line">66.   $\lVert$</span><br><span class="line">67.   $\lbrace$</span><br><span class="line">68.   $\rVert$</span><br><span class="line">69.   $\rbrace$</span><br><span class="line">70.   $\lgroup$</span><br><span class="line">71.   $\langle$</span><br><span class="line">72.   $\lvert$</span><br><span class="line">73.   $\rgroup$</span><br><span class="line">74.   $\rangle$</span><br><span class="line">75.   $\rvert$</span><br><span class="line">76.   $[$</span><br><span class="line">77.   $\lmoustache$</span><br><span class="line">78.   $\rmoustache$</span><br><span class="line">79.   $\lceil$</span><br><span class="line">80.   $\rceil$</span><br><span class="line">81.   $\lfloor$</span><br><span class="line">82.   $\rfloor$</span><br></pre></td></tr></table></figure><h4 id="各种函数公式"><a href="#各种函数公式" class="headerlink" title="各种函数公式"></a>各种函数公式</h4><ol><li> $\sin$</li><li>  $\sin^{-1}$</li><li>  $\inf$</li><li>  $\cos$</li><li>  $\cos^{-1}$</li><li>  $\arg$</li><li>  $\tan$</li><li>  $\tan^{-1}$</li><li>  $\det$</li><li> $\sinh$</li><li> $\sinh^{-1}$</li><li> $\dim$</li><li> $\cosh$</li><li> $\cosh^{-1}$</li><li> $\gcd$</li><li> $\tanh$</li><li> $\tanh^{-1}$</li><li> $\hom$</li><li> $\csc$</li><li> $\exp$</li><li> $\ker$</li><li> $\sec$</li><li> $\lg$</li><li> $\Pr$</li><li> $\cot$</li><li> $\ln$</li><li> $\sup$</li><li> $\coth$</li><li> $\log$</li><li> $\deg$</li><li> $\hom$</li><li> $\log_{e}$</li><li> $\injlim$</li><li> $\arcsin$</li><li> $\log_{10}$</li><li> $\varinjlim$</li><li> $\arccos$</li><li> $\lim$</li><li> $\varprojlim$</li><li> $\det$ </li><li>$\liminf$</li><li> $\varliminf$</li><li> $\arctan$</li><li> $\limsup$</li><li> $\projlim$</li><li> $\textrm{arccsc}$</li><li> $\max$</li><li> $\varimsup$</li><li> $\textrm{arcsec}$</li><li> $\min$</li><li> $\textrm{arccot}$</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#### 各种函数公式</span><br><span class="line">1.  $\sin$</span><br><span class="line">2.   $\sin^&#123;-1&#125;$</span><br><span class="line">3.   $\inf$</span><br><span class="line">4.   $\cos$</span><br><span class="line">5.   $\cos^&#123;-1&#125;$</span><br><span class="line">6.   $\arg$</span><br><span class="line">7.   $\tan$</span><br><span class="line">8.   $\tan^&#123;-1&#125;$</span><br><span class="line">9.   $\det$</span><br><span class="line">10.  $\sinh$</span><br><span class="line">11.  $\sinh^&#123;-1&#125;$</span><br><span class="line">12.  $\dim$</span><br><span class="line">13.  $\cosh$</span><br><span class="line">14.  $\cosh^&#123;-1&#125;$</span><br><span class="line">15.  $\gcd$</span><br><span class="line">16.  $\tanh$</span><br><span class="line">17.  $\tanh^&#123;-1&#125;$</span><br><span class="line">18.  $\hom$</span><br><span class="line">19.  $\csc$</span><br><span class="line">20.  $\exp$</span><br><span class="line">21.  $\ker$</span><br><span class="line">22.  $\sec$</span><br><span class="line">23.  $\lg$</span><br><span class="line">24.  $\Pr$</span><br><span class="line">25.  $\cot$</span><br><span class="line">26.  $\ln$</span><br><span class="line">27.  $\sup$</span><br><span class="line">28.  $\coth$</span><br><span class="line">29.  $\log$</span><br><span class="line">30.  $\deg$</span><br><span class="line">31.  $\hom$</span><br><span class="line">32.  $\log_&#123;e&#125;$</span><br><span class="line">33.  $\injlim$</span><br><span class="line">34.  $\arcsin$</span><br><span class="line">35.  $\log_&#123;10&#125;$</span><br><span class="line">36.  $\varinjlim$</span><br><span class="line">37.  $\arccos$</span><br><span class="line">38.  $\lim$</span><br><span class="line">39.  $\varprojlim$</span><br><span class="line">40.  $\det$ </span><br><span class="line">41. $\liminf$</span><br><span class="line">42.  $\varliminf$</span><br><span class="line">43.  $\arctan$</span><br><span class="line">44.  $\limsup$</span><br><span class="line">45.  $\projlim$</span><br><span class="line">46.  $\textrm&#123;arccsc&#125;$</span><br><span class="line">47.  $\max$</span><br><span class="line">48.  $\varimsup$</span><br><span class="line">49.  $\textrm&#123;arcsec&#125;$</span><br><span class="line">50.  $\min$</span><br><span class="line">51.  $\textrm&#123;arccot&#125;$</span><br></pre></td></tr></table></figure><h4 id="各种箭头"><a href="#各种箭头" class="headerlink" title="各种箭头"></a>各种箭头</h4><ol><li> $\uparrow$</li><li>  $\longleftarrow$</li><li>  $\downdownarrows$</li><li>  $\downarrow$</li><li>  $\longrightarrow$</li><li>  $\upuparrows$</li><li>  $\updownarrow$</li><li>  $\rightarrow$</li><li>  $\rightharpoondown$</li><li> $\Uparrow$</li><li> $\leftarrow$</li><li> $\downharpoonleft$</li><li> $\Downarrow$</li><li> $\mapsto$</li><li> $\rightharpoonup$</li><li> $\Leftarrow$</li><li> $\nrightarrow$</li><li> $\downharpoonright$</li><li> $\Rightarrow$</li><li> $\nleftarrow$</li><li> $\upharpoonleft$</li><li> $\Leftrightarrow$</li><li> $\rightrightarrows$</li><li> $\upharpoonright$</li><li> $\nLeftrightarrow$</li><li> $\leftleftarrows$</li><li> $\leftharpoondown$</li><li> $\nLeftarrow$</li><li> $\rightleftarrows$</li><li> $\leftharpoonup$</li><li> $\nRightarrow$</li><li> $\leftrightarrows$</li><li> $\hookleftarrow$</li><li> $\Updownarrow$</li><li> $\curvearrowleft$</li><li> $\hookrightarrow$</li><li> $\circlearrowleft$</li><li> $\curvearrowright$</li><li> $\rightleftharpoons$</li><li> $\circlearrowright$</li><li> $\Longleftarrow$</li><li> $\leftrightharpoons$</li><li> $\Lleftarrow$</li><li> $\Longrightarrow$</li><li> $\looparrowleft$</li><li> $\Rrightarrow$</li><li> $\longleftrightarrow$</li><li> $\looparrowright$</li><li> $\nwarrow$</li><li> $\Longleftrightarrow$</li><li> $\rightsquigarrow$</li><li> $\swarrow$</li><li> $\longmapsto$</li><li> $\Lsh$</li><li> $\searrow$</li><li> $\rightarrowtail$</li><li> $\Rsh$</li><li> $\nearrow$</li><li> $\leftarrowtail$</li><li> $\multimap$</li><li> $\twoheadleftarrow$</li><li> $\twoheadrightarrow$</li><li> $\leftrightsquigarrow$</li><li> $\leftrightarrow$</li><li> $\nleftrightarrow$</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#### 各种箭头</span><br><span class="line">1.  $\uparrow$</span><br><span class="line">2.   $\longleftarrow$</span><br><span class="line">3.   $\downdownarrows$</span><br><span class="line">4.   $\downarrow$</span><br><span class="line">5.   $\longrightarrow$</span><br><span class="line">6.   $\upuparrows$</span><br><span class="line">7.   $\updownarrow$</span><br><span class="line">8.   $\rightarrow$</span><br><span class="line">9.   $\rightharpoondown$</span><br><span class="line">10.  $\Uparrow$</span><br><span class="line">11.  $\leftarrow$</span><br><span class="line">12.  $\downharpoonleft$</span><br><span class="line">13.  $\Downarrow$</span><br><span class="line">14.  $\mapsto$</span><br><span class="line">15.  $\rightharpoonup$</span><br><span class="line">16.  $\Leftarrow$</span><br><span class="line">17.  $\nrightarrow$</span><br><span class="line">18.  $\downharpoonright$</span><br><span class="line">19.  $\Rightarrow$</span><br><span class="line">20.  $\nleftarrow$</span><br><span class="line">21.  $\upharpoonleft$</span><br><span class="line">22.  $\Leftrightarrow$</span><br><span class="line">23.  $\rightrightarrows$</span><br><span class="line">24.  $\upharpoonright$</span><br><span class="line">25.  $\nLeftrightarrow$</span><br><span class="line">26.  $\leftleftarrows$</span><br><span class="line">27.  $\leftharpoondown$</span><br><span class="line">28.  $\nLeftarrow$</span><br><span class="line">29.  $\rightleftarrows$</span><br><span class="line">30.  $\leftharpoonup$</span><br><span class="line">31.  $\nRightarrow$</span><br><span class="line">32.  $\leftrightarrows$</span><br><span class="line">33.  $\hookleftarrow$</span><br><span class="line">34.  $\Updownarrow$</span><br><span class="line">35.  $\curvearrowleft$</span><br><span class="line">36.  $\hookrightarrow$</span><br><span class="line">37.  $\circlearrowleft$</span><br><span class="line">38.  $\curvearrowright$</span><br><span class="line">39.  $\rightleftharpoons$</span><br><span class="line">40.  $\circlearrowright$</span><br><span class="line">41.  $\Longleftarrow$</span><br><span class="line">42.  $\leftrightharpoons$</span><br><span class="line">43.  $\Lleftarrow$</span><br><span class="line">44.  $\Longrightarrow$</span><br><span class="line">45.  $\looparrowleft$</span><br><span class="line">46.  $\Rrightarrow$</span><br><span class="line">47.  $\longleftrightarrow$</span><br><span class="line">48.  $\looparrowright$</span><br><span class="line">49.  $\nwarrow$</span><br><span class="line">50.  $\Longleftrightarrow$</span><br><span class="line">51.  $\rightsquigarrow$</span><br><span class="line">52.  $\swarrow$</span><br><span class="line">53.  $\longmapsto$</span><br><span class="line">54.  $\Lsh$</span><br><span class="line">55.  $\searrow$</span><br><span class="line">56.  $\rightarrowtail$</span><br><span class="line">57.  $\Rsh$</span><br><span class="line">58.  $\nearrow$</span><br><span class="line">59.  $\leftarrowtail$</span><br><span class="line">60.  $\multimap$</span><br><span class="line">61.  $\twoheadleftarrow$</span><br><span class="line">62.  $\twoheadrightarrow$</span><br><span class="line">63.  $\leftrightsquigarrow$</span><br><span class="line">64.  $\leftrightarrow$</span><br><span class="line">65.  $\nleftrightarrow$</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络操作系统1</title>
      <link href="2021/09/01/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F1/"/>
      <url>2021/09/01/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F1/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux网络操作系统"><a href="#Linux网络操作系统" class="headerlink" title="Linux网络操作系统"></a>Linux网络操作系统</h1><h2 id="Linux是什么？"><a href="#Linux是什么？" class="headerlink" title="Linux是什么？"></a>Linux是什么？</h2><p>Linux——操作系统</p><h2 id="为什么学习Linux——性能卓越"><a href="#为什么学习Linux——性能卓越" class="headerlink" title="为什么学习Linux——性能卓越"></a>为什么学习Linux——性能卓越</h2><p>Linux是一个开源、免费的操作系统，其稳定性、安全性、处理多并发已经得到业界的认可，目前很多中型，大型甚至是巨型项目都在使用Linux</p><h2 id="为什么学习Linux——for工作"><a href="#为什么学习Linux——for工作" class="headerlink" title="为什么学习Linux——for工作"></a>为什么学习Linux——for工作</h2><p>从目前看，软件公司迫切需要能熟练掌握Linux的程序员。</p><p><img src="https://z3.ax1x.com/2021/09/01/h0QRL4.png"></p><h2 id="Linux的特点"><a href="#Linux的特点" class="headerlink" title="Linux的特点"></a>Linux的特点</h2><p>免费的、开源的<br>支持多线程、多用户<br>安全性好<br>对内存和文件管理优越（Linux最小只需4M——可以做嵌入式开发）</p><h2 id="Linux发展史"><a href="#Linux发展史" class="headerlink" title="Linux发展史"></a>Linux发展史</h2><p>Linux 操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：<br>UNIX操作系统——MINIX操作系统—GNU计划——POSIX标准一Internet网络。</p><h2 id="Linux与Unix"><a href="#Linux与Unix" class="headerlink" title="Linux与Unix"></a>Linux与Unix</h2><p>UNIX最早由KenThompson、Dennis Ritchie和Douglas Mcllroy于1969年在贝尔实验室开发</p><h2 id="Linux起源：站在巨人肩上的Linus"><a href="#Linux起源：站在巨人肩上的Linus" class="headerlink" title="Linux起源：站在巨人肩上的Linus"></a>Linux起源：站在巨人肩上的Linus</h2><p>UNIX————Minix————Linux</p><p>GNU计划：自由软件运动</p><h2 id="Linux与Minix"><a href="#Linux与Minix" class="headerlink" title="Linux与Minix"></a>Linux与Minix</h2><p>Linux的内核设计是宏内核原则</p><p>Minix的内核设计是微内核原则</p><h2 id="Linux优缺点"><a href="#Linux优缺点" class="headerlink" title="Linux优缺点"></a>Linux优缺点</h2><p><strong>优点</strong></p><p>免费的、开源的</p><p>支持多线程、多用户</p><p>安全性好</p><p>对内存和文件管理优越</p><p><strong>缺点</strong><br>操作相对困难</p><h2 id="Linux的版本"><a href="#Linux的版本" class="headerlink" title="Linux的版本"></a>Linux的版本</h2><p>内核（Kernel）版本<br>Linux的内核版本号<br>即：主版本号.次版本号.修订版本号<br>不稳定（实验）版本和稳定（商业）版本：第二位数字说0明版本类型。偶数则说明这种版本是商业版本，奇数说明。<br>是实验版本。如2.0.*是商业版本，2.1.*是实验版本。</p><p>内核版本发展史：1.0-2.0-2.2-2.4-2.6</p><p><strong>发行（Distribution）版本</strong></p><p>Linux加入GNU并遵循公共版权许可证（GPL），由于不排斥商家对自由软件作进一步开发，也不排斥在Linux上开发商业软件，出现了很多的Linux发行套件，如Slackware、Redhat、TurboLinux、OpenLinux等十多种。发行套件的版本是由各个商家自己决定的，相对于内核版本是独立的。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用密码技术2</title>
      <link href="2021/09/01/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF2/"/>
      <url>2021/09/01/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF2/</url>
      
        <content type="html"><![CDATA[<h1 id="密码学的基本概念"><a href="#密码学的基本概念" class="headerlink" title="密码学的基本概念"></a>密码学的基本概念</h1><h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><h3 id="密码学-1"><a href="#密码学-1" class="headerlink" title="密码学"></a>密码学</h3><p>它是研究在有敌手的情况下、如何隐密地传递信息的科学，常被认为是数学和计算机科学的分支。</p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p><font color="#0000dd">密码编码学：</font>指对消息进行变化和伪装，以保证消息在信道的传输过程中不被敌手窃取、篡改和利用。<br><font color="#0000dd">密码分析学：</font>破译和分析密码体制。</p><p>基本概念</p><p>明文m——要变换的消息.</p><p>密文c——变换后的消息</p><p>密钥k——秘密参数</p><p>加密：将明文经过一组规则变换成看似没有意义的随机消息（密文）。</p><p>解密：由密文恢复出明文的过程。</p><h2 id="密码体制"><a href="#密码体制" class="headerlink" title="密码体制"></a>密码体制</h2><p>密码体制分类</p><p>按密钥，分为<font color="#dd0000">对称密码体制</font>和<font color="#dd0000">非对称密码体制</font></p><p>对称密码体制：加密密钥和解密密钥相同或者从一个密钥很容易推导出另一个密钥。</p><p>非对称密码体制：加密密钥和解密密钥不同，且从一个密钥难以推导出另外一个密钥。</p><p>按加密方式，分为<font color="#dd0000">流密码</font>和<font color="#dd0000">分组密码</font></p><p>流密码：将明文按位（比特）加密。</p><p>分组密码：将明文分成定长的块进行加密。</p><h3 id="一个密码体制的组成"><a href="#一个密码体制的组成" class="headerlink" title="一个密码体制的组成"></a>一个密码体制的组成</h3><p>明文空间。W：全体明文的集合</p><p>密文空间C：全体密文的集合。密钥空间K：全体密钥的集合</p><p>加密算法8：由加密密钥控制的加密变换的集合。</p><p>解密算法D：由解密密钥控制的解密变换的集合</p><p><strong>注意</strong><br>在具体的一次加密过程中，明文m，密文c，加密密钥，解密密钥都应来自相对应的空间，加密算法、解密算法来自相应得算法集合。</p><p>一个加密算法应该满足一致性要求：</p><p><font color="#dd0000">浅红色文字：</font>c=Eke（m）→m=Dka（c）</p><p>只要密文是通过加密算法和加密密钥正确生成的，那么这个密文一定可以利用解密算法和解密密钥正确恢复出明文。</p><h1 id="保密系统通信模型"><a href="#保密系统通信模型" class="headerlink" title="保密系统通信模型"></a>保密系统通信模型</h1><h2 id="通信系统的基本模型"><a href="#通信系统的基本模型" class="headerlink" title="通信系统的基本模型"></a>通信系统的基本模型</h2><p>基本框架</p><p>基本概念</p><p>信源：消息的发生源，即消息的发送者。</p><p>信宿：消息的目的地，即消息的接收者。</p><p>信源编码：对信源发出的消息进行压缩，从而提高通信的有效性。</p><p>信道编码：增加信源的冗余度，从而提高通信的可靠性。</p><p>信道译码：信道编码的逆过程。</p><p>信源译码：信源编码的逆过程。</p><p><font color="#dd0000">浅红色文字：</font></p><p>通信系统中的密码学应用</p><p>密码学的最初目的是为了保密通信</p><p>信源编码和信道编码虽然对消息进行了变换，但这些变换的逆变换（信道译码和信源译码）不需要密钥。——<font color="#dd0000">这两种变换不能取得消息的保密性。</font></p><p>为实现通信安全，需要使用加密和解密操作。</p><p>不考虑信源编码和信道编码问题，并将<font color="#dd0000">信源编码后的信号序列</font>看成加密的输入——<font color="#dd0000">明文</font>，则可以得到下面的保密通信系统基本模型。</p><p>十点四二</p><h1 id="安全性要求和密码分析"><a href="#安全性要求和密码分析" class="headerlink" title="安全性要求和密码分析"></a>安全性要求和密码分析</h1><h2 id="安全性要求"><a href="#安全性要求" class="headerlink" title="安全性要求"></a>安全性要求</h2><p><font color="#dd0000">机密性（Confidentiality）</font></p><p>保证信息为授权者使用而不泄漏给未经授权者。</p><p><font color="#dd0000">完整性（integrity）</font></p><p>信息在传输或存储过程中，不能被偶然或蓄意地删除、修改、伪造、重放、插入等破坏和丢失。</p><p><font color="#dd0000">认证性（authentication）</font></p><p>保证消息来源和通信实体的真实性。</p><p><font color="#dd0000">不可否认性（non-repudiation）</font></p><p>防止通信方对以前的许诺或者行为的否认。</p><h2 id="密码分析"><a href="#密码分析" class="headerlink" title="密码分析"></a>密码分析</h2><p>密码分析：在信息的传输和处理过程中，非授权的敌手通过各种方法（如<font color="#dd0000">搭线窃听、电磁窃听、声音窃听</font>等）来截获密文，希望从中获取原来的明文。</p><h2 id="密码分析的前提"><a href="#密码分析的前提" class="headerlink" title="密码分析的前提"></a>密码分析的前提</h2><p><font color="#dd0000">Kerckhoffs假设：</font>假定密码分析者和敌手知道所使用的密码系统</p><p>即密码体制的安全性仅依赖于对<font color="#dd0000">密钥的保密</font>，而不应依赖于算法的保密</p><p>假设敌手知道：</p><p>（1）所使用的加密算法；</p><p>（2）知道明文的概率分布规律；</p><p>（3）知道密钥的概率分布规律；</p><p>（4）知道所有可能的破译方法；</p><p>（5）敌手能够拿到加密装置，可以进行能量消耗分析。</p><h2 id="密码分析的目标"><a href="#密码分析的目标" class="headerlink" title="密码分析的目标"></a>密码分析的目标</h2><h2 id="密码分析的分类"><a href="#密码分析的分类" class="headerlink" title="密码分析的分类"></a>密码分析的分类</h2><p><font color="#dd0000">被动攻击：</font></p><p>​    敌手只是采取窃听的方法。</p><p>​    可以用于获取消息的内容或者是进行业务流量分析，主要是破坏消息的<font color="#0000dd">保密性</font>。</p><p><font color="#dd0000">主动攻击：</font></p><p>​    敌手采取删除、修改、插入、重放等方法向系统注入消息。</p><p>​    可以破坏消息的<font color="#0000dd">完整性、认证性和不可否认性</font>。</p><h2 id="密码体制的攻击方法"><a href="#密码体制的攻击方法" class="headerlink" title="密码体制的攻击方法"></a>密码体制的攻击方法</h2><p>密码分析者（敌手）攻击密码体制的方法：</p><p><font color="#dd0000">（1）穷举攻击：</font>通过试遍所有的密钥来进行破译。</p><p><font color="#0000dd">对抗：</font>可增密钥的数量。</p><p><font color="#dd0000">（2）统计分析攻击：</font>通过分析密文和明文的统计规律来破译。</p><p><font color="#0000dd">对抗：</font>设法使明文和密文的统计规律不一样。</p><p><font color="#dd0000">（3）数学分析攻击：</font>针对加密变换的数学基础，通过数学求解设法找到解密变换。</p><p><font color="#0000dd">对抗：</font>选用具有坚实的数学基础和足够复杂的加密算法。</p><h2 id="根据敌手可以利用的数据资源，可将攻击分为以下六种："><a href="#根据敌手可以利用的数据资源，可将攻击分为以下六种：" class="headerlink" title="根据敌手可以利用的数据资源，可将攻击分为以下六种："></a>根据敌手可以利用的数据资源，可将攻击分为以下六种：</h2><p>唯密文攻击（Ciphertext Olny Attack）<br>已知明文攻击（Known Plaintext Attack）<br>选择明文攻击（Chosen Plaintext Attack）<br>适应性选择明文攻击（Adaptive Chosen Plaintext Attack）<br>选择密文攻击（Chosen Ciphertext Attack）<br>适应性选择密文攻击（Adaptive Chosen Ciphertext Attack）</p><p><strong>攻击力越来越强</strong></p><h3 id="唯密文攻击"><a href="#唯密文攻击" class="headerlink" title="唯密文攻击"></a>唯密文攻击</h3><p>密码分析者（敌手）<strong>仅知道一些密文</strong>。</p><p>最困难，一般是穷搜索，对截获密文用所有可能的密钥去尝试。</p><p>唯密文攻击敌手知道的信息量最少，最易抵抗。</p><p>只要有足够的计算时间和存储容量，原则上可成功，但在实际上一种能保证安全要求的实用密码算法，都会设计成这一攻击方法在实际上不可行。</p><p>一般的敌手需要对密文进行统计测试分析，为此需要知道被加密的明文类型，英文文本，图象等。</p><h3 id="已知明文攻击"><a href="#已知明文攻击" class="headerlink" title="已知明文攻击"></a>已知明文攻击</h3><p>密码分析者（敌手）<strong>知道一些明文和相应的密文</strong>。</p><p>在很多情况下，敌手可能有更多的信息，也许能够截获一个或多个明文及其对应的密文，或消息中将出现某种明文格式，这时的攻击称为已知明文攻击，敌手也许能从已知的明文被变换成密文的方式得到密钥。</p><h3 id="选择明文攻击"><a href="#选择明文攻击" class="headerlink" title="选择明文攻击"></a>选择明文攻击</h3><p>密码分析者（敌手）<strong>可以选择一些明文，并得到相应的密文</strong>。</p><p>如果攻击者能在加密系统中插入自己选择的明文消息，则通过该明文消息对应的密文有可能确定出密钥的结构。</p><p>明文可以是精心选择的。</p><h3 id="适应性选择明文攻击"><a href="#适应性选择明文攻击" class="headerlink" title="适应性选择明文攻击"></a>适应性选择明文攻击</h3><p>密码分析者（敌手）<strong>不仅可以选择明文，还可以根据这些明文的加密结果来修改自己的选择。</strong><br>选择的明文之间可能存在一定的关系。<br>适应性选择明文攻击比选择明文攻击的攻击强度更强。</p><h3 id="选择密文攻击"><a href="#选择密文攻击" class="headerlink" title="选择密文攻击"></a>选择密文攻击</h3><p>密码分析者（敌手）<strong>可以选择一些密文，并得到相应的明文</strong>。</p><p>攻击者利用解密算法，对自己所选的密文解密出相应的明文，有可能确定出密钥信息。</p><p>选择的密文可以与要破解的密文相关。</p><h3 id="适应性选择密文攻击"><a href="#适应性选择密文攻击" class="headerlink" title="适应性选择密文攻击"></a>适应性选择密文攻击</h3><p>密码分析者（敌手）<strong>不仅可以选择密文，还可以根据这些密文的解密结果来修改自己的选择</strong>。</p><p>选择的密文之间可能存在一定的关系。</p><p>适应性选择密文攻击的攻击强度最强。</p><h2 id="密码体制的评估模型"><a href="#密码体制的评估模型" class="headerlink" title="密码体制的评估模型"></a>密码体制的评估模型</h2><h3 id="无条件安全性"><a href="#无条件安全性" class="headerlink" title="无条件安全性"></a>无条件安全性</h3><p>如果一个具有无限计算资源的敌手都不能破译一个密码体制，则称该密码体制是无条件安全的。</p><p>一次一密方法在唯密文攻击下可以达到无条件安全性。</p><p>一次一密指每次加密一个消息的时候都会使用不同的密钥。</p><p>高昂的密钥分配成本使得一次一密方法在现代通信系统中是不实用的。</p><h3 id="计算安全性"><a href="#计算安全性" class="headerlink" title="计算安全性"></a>计算安全性</h3><p>如果使用最好的算法来破译一个密码体制所需要的计算代价远远超出敌手的计算资源，则称这个密码体制是计算安全的。</p><p>比方说，敌手希望通过穷举攻击来破译密钥为128位的AES算法，敌手需要试遍整个大小为2128的密钥空间，但目前敌手的计算能力根本无法完成试遍整个密钥空间，我们就说AES在穷举攻击的情况下是计算安全的。</p><h3 id="可证明安全性"><a href="#可证明安全性" class="headerlink" title="可证明安全性"></a>可证明安全性</h3><p>如果一个密码体制的安全性可以规约到某一个数学问题，且这个数学问题是难解的，则称这个密码体制是可证明安全的。</p><p>如果一个敌手可以攻破RSA加密算法，我们则可以构造一个新算法，这个新算法能够求解大整数分解问题。然而，目前大整数分解还没有有效的求解方法，则敌手不可能攻破RSA加密算法。这种证明方法实际上是数学上的反证法。</p><p><strong>无条件安全是一个理论上的概念</strong></p>]]></content>
      
      
      <categories>
          
          <category> 应用密码技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 应用密码技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA程序设计</title>
      <link href="2021/09/01/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
      <url>2021/09/01/JAVA/JAVA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA程序设计"><a href="#JAVA程序设计" class="headerlink" title="JAVA程序设计"></a>JAVA程序设计</h1><h2 id="一、JAVA概述"><a href="#一、JAVA概述" class="headerlink" title="一、JAVA概述"></a>一、JAVA概述</h2><h3 id="1-什么是Java"><a href="#1-什么是Java" class="headerlink" title="1.什么是Java"></a>1.什么是Java</h3><p> Java是一种可以撰写跨平台应用软件的面向对象的程序设计语言，是由Sun Microsystems公司于1995年5月推出的Java程序设计语言和Java平台的总称。</p><h3 id="2-Java的发展简史"><a href="#2-Java的发展简史" class="headerlink" title="2.Java的发展简史"></a>2.Java的发展简史</h3><p>Java语言是Sun公司于1990年开发的，Green项目小组的James Gosling编写了一种新的语言，起初该语言命名为Oak，后来更名JAVA。</p><p>1995年5月Java1.0正式对外发布。1998年Sun发布Java1.2正式对外发布，此后陆续发布新版本。2009年4月Sun公司被Oracle收购。</p><p>Oak就是Java语言的前身，这个名称源于Gosling办公室的窗外正好有一棵橡树（Oak）。后来，由于去注册Oak商标时，发现它已经被另一家公司注册，所以不得不改名。命名为Java语言，有两种说法：其一，印度尼西亚有一个重要的岛屿——爪哇岛，盛产咖啡，开发人员起名Java寓意为世人端上一杯热腾腾的咖啡；其二说法为美洲俚语——咖啡之意。</p><h3 id="3-Java的版本"><a href="#3-Java的版本" class="headerlink" title="3.Java的版本"></a>3.Java的版本</h3><p>SUN公司将Java划分为三个技术平台，目前Java平台主要分为下列3个版本：</p><p>（1）Java SE（曾称为J2SE）称为Java标准版或Java标准平台。是为开发普通桌面是为开发企业级应是为开发电子消费</p><p>（2）JavaEE（曾称为J2EE）称为Java企业版或Java企业平台。和商务应用程序提用程序提供的解决产品和嵌入式设备</p><p>（3）Java ME（曾称为J2ME）称为Java微型版或Java小型平台。</p><h3 id="4-Java语言特点"><a href="#4-Java语言特点" class="headerlink" title="4.Java语言特点"></a>4.Java语言特点</h3><p>1）.面向对象<br>2）.跨平台<br>3）.安全性<br>4）.简洁性<br>5）.分布性<br>6）.多线程<br>7）.图形功能强</p><h2 id="二、JDK的使用"><a href="#二、JDK的使用" class="headerlink" title="二、JDK的使用"></a>二、JDK的使用</h2><h3 id="1-什么是JDK"><a href="#1-什么是JDK" class="headerlink" title="1.什么是JDK"></a>1.什么是JDK</h3><p>SUN公司提供了一套Java开发环境，简称JDK（Java Development Kit），它是整个Java的核心，其中包括Java编译器、Java运行工具、Java文档生成工具、Java打包工具等。</p><p>JRE是Java Runtime Environment的缩写，它是Java运行环境。为了方便使用，SUN公司在其JDK工具中自带了一个JRE工具，也就是说开发环境中包含运行环境。</p><h3 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2.安装JDK"></a>2.安装JDK</h3><p>Oracle公司提供了多种操作系统的JDK，每种操作系统的JDK在使用上基本类似，初学者可以根据自己使用的操作系统，从Oracle官方网站下载相应的JDK安装文件。</p><h3 id="3-JDK目录介绍"><a href="#3-JDK目录介绍" class="headerlink" title="3.JDK目录介绍"></a>3.JDK目录介绍</h3><p>1.bin目录：该目录用于存放一些可执行程序，如javac.exe（Java编译器）、java.exe（Java运行工具）、jar.exe（打包工具）和javadoc.exe（文档生成工具）等。</p><p>2.db目录：是一个纯Java实现、开源的数据库管理系统。</p><p>3.include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</p><p>4.jre目录：此目录是Java运行时环境JRE的根目录，包含Java虚拟机，运行时的类包、Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。</p><p>5.src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。</p><h2 id="三、JAVA的基本语法"><a href="#三、JAVA的基本语法" class="headerlink" title="三、JAVA的基本语法"></a>三、JAVA的基本语法</h2><h3 id="1-Java代码的基本格式"><a href="#1-Java代码的基本格式" class="headerlink" title="1.Java代码的基本格式"></a>1.Java代码的基本格式</h3><p>1.Java中的程序代码都必须放在一个类中。类需要使用class关键字定义，在class前面可以有一些修饰符，格式如下</p><p>修饰符class类名{<br>程序代码·<br>}</p><p>2.在编写Java代码时，需要特别注意下列几个关键点：</p><p>（1）Java中的程序代码可分为结构定义语句和功能执行语句</p><p>（2）Java语言严格区分大小写。</p><p>（3）程序代码整齐美观、层次清晰</p><p>（4）Java程序中一句连续的字符串不能分开在两行中书写</p><h2 id="四、JAVA的运行机制"><a href="#四、JAVA的运行机制" class="headerlink" title="四、JAVA的运行机制"></a>四、JAVA的运行机制</h2><h2 id="五、Java中的注释"><a href="#五、Java中的注释" class="headerlink" title="五、Java中的注释"></a>五、Java中的注释</h2><p>Java中的注释有三种类型，具体如下：</p><p>（1）单行注释：通常用于对程序中的某一行代码进行解释，用符号“//“表示，“//”后面为被注释的内容</p><p>（2）多行注释：顾名思义就是在注释中的内容可以为多行，它以符号“/*”开头，以符号“*/”结尾</p><p>（3）文档注释：以“/**”开头，并在注释内容末尾以“*/”结束。</p><p>在Java中，有的注释可以嵌套使用，有的则不可以。</p><p>①多行注释“/*..*/”中可以嵌套单行注释“//”<br>②多行注释“/*…*/”中不能嵌套多行注释“/*…*/”</p>]]></content>
      
      
      <categories>
          
          <category> JAVA程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> JAVA程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专升本数学1</title>
      <link href="2021/08/31/%E4%B8%93%E5%8D%87%E6%9C%AC/%E4%B8%93%E5%8D%87%E6%9C%AC%E6%95%B0%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC%E6%95%B0%E5%AD%A61/"/>
      <url>2021/08/31/%E4%B8%93%E5%8D%87%E6%9C%AC/%E4%B8%93%E5%8D%87%E6%9C%AC%E6%95%B0%E5%AD%A6/%E4%B8%93%E5%8D%87%E6%9C%AC%E6%95%B0%E5%AD%A61/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-函数、极限和连续"><a href="#第一章-函数、极限和连续" class="headerlink" title="第一章 函数、极限和连续"></a>第一章 函数、极限和连续</h1><p>定义域，及对应法则是函数两要素</p><h2 id="定义域考点"><a href="#定义域考点" class="headerlink" title="定义域考点"></a>定义域考点</h2><p>1、具体函数求定义域</p><p>2、抽象函数求定义域</p><h2 id="求解具体函数定义域"><a href="#求解具体函数定义域" class="headerlink" title="求解具体函数定义域"></a>求解具体函数定义域</h2><p>具体函数：知道函数的具体表达式，如$ y=x+1$，$y=x^2+2$，$y=\ln{x}$</p><p>掌握具体函数定义域</p><h3 id="常见函数定义域"><a href="#常见函数定义域" class="headerlink" title="常见函数定义域"></a>常见函数定义域</h3><p><font color="#dd0000">①$y=\frac{1}{x}$    ，$x\neq0$</font></p><p><font color="#dd0000">②$y=\sqrt[2n]{x}$    ，$x\geq0$</font></p><p><font color="#dd0000">③$y=\sqrt[2n+1]{x}$    ,    $x\in (-\infty,+\infty)$</font></p><p><font color="#dd0000">④$y=\log_{a}{x}$    ,    $x&gt;0$    ,其中$x$为真数，常考$ln{x}$    ,    $x&gt;0$</font></p><p>⑤$y=tanx=\frac{sinx}{cosx}$    ,    $x\neq k\pi+\frac{\pi}{2}$。</p><p>⑥$y=cotx$    ，$x\neq k\pi$</p><p>⑦$y=arctanx$    ，$y=arccotx$    ，$x\in R$    ，$x\in (-\infty,+\infty)$</p><p><font color="#dd0000">⑧$y=arcsinx$    ，$y=arccosx$    ，$x\in [-1,1]$</font></p><p><strong>注意：整体思想</strong></p><h3 id="eg：求-y-sqrt-2x-1-的定义域"><a href="#eg：求-y-sqrt-2x-1-的定义域" class="headerlink" title="eg：求$y=\sqrt{2x+1}$    的定义域"></a>eg：求$y=\sqrt{2x+1}$    的定义域</h3><p>$$<br>解：2x+1\geq0    ，2x\geq-1    ，x\geq-\frac{1}{2}\<br>所以  y=\sqrt{2x+1}    的定义域，x\in [-\frac{1}{2},+\infty)<br>$$</p><h3 id="eg：求-y-frac-1-2x-2-x-1"><a href="#eg：求-y-frac-1-2x-2-x-1" class="headerlink" title="eg：求$y=\frac{1}{2x^2-x-1}$"></a>eg：求$y=\frac{1}{2x^2-x-1}$</h3><p>$$<br>解：\ 2x^2-x-1\neq0\(重点：二次函数：1.求根公式    2.十字相乘    3.完全平方差)\y=ax^2+bx+c=0\2x^2-x-1\neq0\(2x-1)(x+1)\neq0\<br>\begin{cases}2x-1\neq0\x+1\neq0\end{cases}\<br>\begin{cases}x\neq\frac{1}{2}\x\neq-1\end{cases}<br>$$</p><p>$$<br>重点：二次函数：1.求根公式    2.十字相乘    3.完全平方差\求根公式：x_1=\frac{-b+\sqrt{b^2-4ac}}{2a},x_2=\frac{-b-\sqrt{b^2-4ac}}{2a}\十字相乘：x^2+(a+b)x+ab=0\(x+b)(x+a)=0\完全平方差：(a+b)^2=a^2+2ab+b^2<br>$$</p><h3 id="eg：十字相乘：-x-2-5x-6-0"><a href="#eg：十字相乘：-x-2-5x-6-0" class="headerlink" title="eg：十字相乘：$x^2+5x=6=0$"></a>eg：十字相乘：$x^2+5x=6=0$</h3><p>$$<br>解：(x+2)(x+3)=0\x_1=-2\x_2=-3<br>$$</p><h3 id="eg：求-y-frac-sqrt-2x-1-sqrt-2x-2-x-1-的定义域"><a href="#eg：求-y-frac-sqrt-2x-1-sqrt-2x-2-x-1-的定义域" class="headerlink" title="eg：求$y=\frac{\sqrt{2x+1}}{\sqrt{2x^2-x+1}}$的定义域"></a>eg：求$y=\frac{\sqrt{2x+1}}{\sqrt{2x^2-x+1}}$的定义域</h3><p>$$<br>解：1、2x+1\geq0，x\geq-\frac{1}{2}\<br>2、2x^2-x-1\neq0，x\neq\frac{1}{2}且x\neq1\<br>所以x\in (-\frac{1}{2},1)\bigcup(1,+\infty)<br>$$</p><h3 id="eg：-y-frac-1-sinx-sqrt-1-x-2-的定义域是？"><a href="#eg：-y-frac-1-sinx-sqrt-1-x-2-的定义域是？" class="headerlink" title="eg：$y=\frac{1}{sinx},+\sqrt{1+x^2}$的定义域是？"></a>eg：$y=\frac{1}{sinx},+\sqrt{1+x^2}$的定义域是？</h3><p>$$<br>A.(-1,1]  B.(-1,1)C.[-1,0)\bigcup(0,1]D.(-1,0)\bigcup(0,1)\<br>解：1、sinx\neq0,x\neq0\2、1-x^2\geq0,x^2\leq1,<br>\所以是-1\leq x\leq1，选C<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 专升本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 专升本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思科CCNA网络基础入门-OSI-TCP分层</title>
      <link href="2021/08/31/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-OSI-TCP%E5%88%86%E5%B1%82/"/>
      <url>2021/08/31/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-OSI-TCP%E5%88%86%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="思科CCNA网络基础入门-OSI-TCP分层"><a href="#思科CCNA网络基础入门-OSI-TCP分层" class="headerlink" title="思科CCNA网络基础入门-OSI-TCP分层"></a>思科CCNA网络基础入门-OSI-TCP分层</h1><h2 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h2><p>20世纪70年代后期，ISO创建OSI参考模型，希望不同供应商的网络能够相互协同工作。</p><p>0SI：开放系统互联（open system interconnection）</p><p>ISO：国际标准化组织（International Organization for Standardization）</p><h2 id="为什么要分层"><a href="#为什么要分层" class="headerlink" title="为什么要分层"></a>为什么要分层</h2><p>分层的优点：</p><p>1.促进标准化工作，允许各个供应商进行开发。</p><p>2.各层间相互独立，把网络操作分成低复杂性单元，</p><p>3.灵活性好，某一层变化不会影响到别层，设计者可专心设计和开发模块功能</p><h2 id="OSI-amp-TCP-IP"><a href="#OSI-amp-TCP-IP" class="headerlink" title="OSI&amp;TCP/IP"></a>OSI&amp;TCP/IP</h2><p><img src="https://z3.ax1x.com/2021/08/31/hd9n0J.png" alt="OSI&amp;TCP/IP"></p><p><img src="https://z3.ax1x.com/2021/08/31/hdRTAA.gif" alt="TCP/IP"></p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdPv6K.png" alt="物理层"></p><p>在OSI参考模型中，<a href="https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E5%B1%82/4329158?fr=aladdin">物理层（Physical Layer）</a>是参考模型的最低层，也是OSI模型的第一层。</p><p>物理层的主要功能是：利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。</p><p>物理层的作用是实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。使其上面的数据链路层不必考虑网络的具体传输介质是什么。“透明传送比特流”表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。</p><h3 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h3><p><img src="https://z3.ax1x.com/2021/08/31/hdFmgx.png" alt="物理层设备"></p><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdk7Tg.png" alt="数据链路层"></p><p><a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/4329290?fr=aladdin">数据链路层（Data Link Layer）</a>是OSI模型的第二层，负责建立和管理节点间的链路。该层的主要功能是：通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。</p><p>在计算机网络中由于各种干扰的存在，物理链路是不可靠的。因此，这一层的主要功能是在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。</p><p>该层通常又被分为<font color="#0000dd">介质访问控制（MAC）和逻辑链路控制（LLC）</font>两个子层。</p><p>MAC子层的主要任务是解决共享型网络中多用户对信道竞争的问题，完成网络介质的访问控制；</p><p>LLC子层的主要任务是建立和维护网络连接，执行差错校验、流量控制和链路控制。</p><p>数据链路层的具体工作是接收来自物理层的位流形式的数据，并封装成帧，传送到上一层；同样，也将来自上层的数据帧，拆装为位流形式的数据转发到物理层；并且，还负责处理接收端发回的确认帧的信息，以便提供可靠的数据传输。</p><h3 id="数据链路层设备"><a href="#数据链路层设备" class="headerlink" title="数据链路层设备"></a>数据链路层设备</h3><p><img src="https://z3.ax1x.com/2021/08/31/hdA5C9.png" alt="数据链路层设备"></p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdnz8g.png" alt="网络层"></p><p><a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%B1%82/4329439?fr=aladdin">网络层（Network Layer）</a>是OSI模型的第三层，它是OSI参考模型中最复杂的一层，也是通信子网的最高一层。它在下两层的基础上向资源子网提供服务。其主要任务是：通过路由选择算法，为报文或分组通过通信子网选择最适当的路径。该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。</p><p>一般地，数据链路层是解决同一网络内节点之间的通信，而网络层主要解决不同子网间的通信。例如在广域网之间通信时，必然会遇到路由（即两节点间可能有多条路径）选择问题。 </p><p>在实现网络层功能时，需要解决的主要问题如下：</p><p><strong>寻址：</strong>数据链路层中使用的物理地址（如MAC地址）仅解决网络内部的寻址问题。在不同子网之间通信时，为了识别和找到网络中的设备，每一子网中的设备都会被分配一个唯一的地址。由于各子网使用的物理技术可能不同，因此这个地址应当是逻辑地址（如IP地址）。</p><p> <strong>交换：</strong>规定不同的信息交换方式。常见的交换技术有：线路交换技术和存储转发技术，后者又包括报文交换技术和分组交换技术。</p><p> <strong>路由算法：</strong>当源节点和目的节点之间存在多条路径时，本层可以根据路由算法，通过网络为数据分组选择最佳路径，并将信息从最合适的路径由发送端传送到接收端。</p><p><strong>连接服务：</strong>与数据链路层流量控制不同的是，前者控制的是网络相邻节点间的流量，后者控制的是从源节点到目的节点间的流量。其目的在于防止阻塞，并进行差错检测。</p><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdMnBR.png" alt="传输层"></p><p>OSI下3层的主要任务是数据通信，上3层的任务是数据处理。而<a href="https://baike.baidu.com/item/%E4%BC%A0%E8%BE%93%E5%B1%82/4329536?fr=aladdin">传输层（Transport Layer）</a>是OSI模型的第4层。因此该层是通信子网和资源子网的接口和桥梁，起到承上启下的作用。</p><p>该层的主要任务是：向用户提供可靠的端到端的差错和流量控制，保证报文的正确传输。传输层的作用是向高层屏蔽下层数据通信的细节，即向用户透明地传送报文。该层常见的协议：TCP/IP中的TCP协议、Novell网络中的SPX协议和微软的NetBIOS/NetBEUI协议。</p><p>传输层提供会话层和网络层之间的传输服务，这种服务从会话层获得数据，并在必要时，对数据进行分割。然后，传输层将数据传递到网络层，并确保数据能正确无误地传送到网络层。因此，传输层负责提供两节点之间数据的可靠传送，当两节点的联系确定之后，传输层则负责监督工作。综上，传输层的主要功能如下：</p><p>传输连接管理：提供建立、维护和拆除传输连接的功能。传输层在网络层的基础上为高层提供“面向连接”和“面向无接连”的两种服务。</p><p>处理传输差错：提供可靠的“面向连接”和不太可靠的“面向无连接”的数据传输服务、差错控制和流量控制。在提供“面向连接”服务时，通过这一层传输的数据将由目标设备确认，如果在指定的时间内未收到确认信息，数据将被重发。</p><p>监控服务质量。</p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdKonA.png" alt="应用层"></p><p><a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E5%B1%82/4329788?fr=aladdin">应用层（Application Layer）</a>是OSI参考模型的最高层，它是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，完成用户希望在网络上完成的各种工作。它在其他6层工作的基础上，负责完成网络中应用程序与网络操作系统之间的联系，建立与结束使用者之间的联系，并完成网络用户提出的各种网络服务及应用所需的监督、管理和服务等各种协议。此外，该层还负责协调各个应用程序间的工作。</p><p>应用层为用户提供的服务和协议有：文件服务、目录服务、文件传输服务（FTP）、远程登录服务（Telnet）、电子邮件服务（E-mail）、打印服务、安全服务、网络管理服务、数据库服务等。上述的各种网络服务由该层的不同应用协议和程序完成，不同的网络操作系统之间在功能、界面、实现技术、对硬件的支持、安全可靠性以及具有的各种应用程序接口等各个方面的差</p><p>异是很大的。应用层的主要功能如下：<br>用户接口：应用层是用户与网络，以及应用程序与网络间的直接接口，使得用户能够与网络进行交互式联系。</p><p>实现各种服务：该层具有的各种应用程序可以完成和实现用户请求的各种服务。</p><h2 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h2><p>Mac地址的结构</p><p><font color="#dd0000">由48位二进制数组成，通常表示为12个16进制数</font></p><p>前24位是标准组织（IEEE）制定的，后24位是厂家自己制定的节点标识符例如：（00-1C-25-91-6548）</p><table><thead><tr><th align="center">47</th><th align="center">46</th><th align="center">24-45（22bit)</th><th align="center">0-23(24bit)</th></tr></thead><tbody><tr><td align="center">I/G</td><td align="center">G/L</td><td align="center">组织唯一标识符（OUI）（由IEEE分配）</td><td align="center">由厂家分配</td></tr></tbody></table><h2 id="TCP与UDP的区别"><a href="#TCP与UDP的区别" class="headerlink" title="TCP与UDP的区别"></a>TCP与UDP的区别</h2><p>TCP和UDP区别</p><table><thead><tr><th></th><th>TCP</th><th>UDP</th></tr></thead><tbody><tr><td>是否连接</td><td>面向连接</td><td>面向非连接</td></tr><tr><td>传输可靠性</td><td>可靠的</td><td>不可靠的</td></tr><tr><td>应用场合</td><td>传输大量的数据</td><td>少量数据</td></tr><tr><td>速度</td><td>慢</td><td>快</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TCP协议和UDP协议特性区别总结：</span><br><span class="line">1. TCP协议在传送数据段的时候要给段标号；UDP协议不</span><br><span class="line">2. TCP协议可靠；UDP协议不可靠</span><br><span class="line">3. TCP协议是面向连接；UDP协议采用无连接</span><br><span class="line">4. TCP协议负载较高，采用虚电路；UDP采用无连接</span><br><span class="line">5. TCP协议的发送方要确认接收方是否收到数据段（3次握手协议）</span><br><span class="line">6. TCP协议采用窗口技术和流控制</span><br></pre></td></tr></table></figure><p>应用方向：</p><p>TCP：Web浏览器；电子邮件；文件传输程序</p><p>UDP：域名系统（DNS）；视频流；IP语音（VoIP）</p><h2 id="常见端口号"><a href="#常见端口号" class="headerlink" title="常见端口号"></a>常见端口号</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">一些常见的端口号及其用途如下：</span><br><span class="line">21端口：FTP 文件传输服务</span><br><span class="line">22端口：SSH 端口</span><br><span class="line">23端口：TELNET 终端仿真服务</span><br><span class="line">25端口：SMTP 简单邮件传输服务</span><br><span class="line">53端口：DNS 域名解析服务</span><br><span class="line">80端口：HTTP 超文本传输服务</span><br><span class="line">110端口：POP3 “邮局协议版本3”使用的端口</span><br><span class="line">443端口：HTTPS 加密的超文本传输服务</span><br><span class="line">1433端口：MS SQL*SERVER数据库 默认端口号</span><br><span class="line">1521端口：Oracle数据库服务</span><br><span class="line">1863端口：MSN Messenger的文件传输功能所使用的端口</span><br><span class="line">3306端口：MYSQL 默认端口号</span><br><span class="line">3389端口：Microsoft RDP 微软远程桌面使用的端口</span><br><span class="line">5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口</span><br><span class="line">5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口</span><br><span class="line">5000端口：MS SQL Server使用的端口</span><br><span class="line">8000端口：腾讯QQ</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">HTTP</th><th>FTP</th><th>Telnet</th><th>SMTP</th><th align="left">DNS</th><th>TFTP</th><th>SNMP</th><th>RIP</th></tr></thead><tbody><tr><td align="left">80</td><td>21</td><td>23</td><td>25</td><td align="left">53</td><td>69</td><td>161</td><td>520</td></tr><tr><td align="left">TCP</td><td>TCP</td><td>TCP</td><td>TCP</td><td align="left">TCP&amp;UDP</td><td>UDP</td><td>UDP</td><td>UDP</td></tr></tbody></table><h2 id="通过OSI模型理解数据传输过程"><a href="#通过OSI模型理解数据传输过程" class="headerlink" title="通过OSI模型理解数据传输过程"></a>通过OSI模型理解数据传输过程</h2><p><img src="https://z3.ax1x.com/2021/08/31/hdGHKO.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 思科 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思科CCNA网络基础入门-计算机网络基础</title>
      <link href="2021/08/31/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
      <url>2021/08/31/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%80%9D%E7%A7%91CCNA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="思科CCNA网络基础入门-计算机网络基础"><a href="#思科CCNA网络基础入门-计算机网络基础" class="headerlink" title="思科CCNA网络基础入门-计算机网络基础"></a>思科CCNA网络基础入门-计算机网络基础</h1><h2 id="网络的概念"><a href="#网络的概念" class="headerlink" title="网络的概念"></a>网络的概念</h2><p><strong>网络是什么：将地理位置不同的多台计算机，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</strong></p><h2 id="网络的类型"><a href="#网络的类型" class="headerlink" title="网络的类型"></a>网络的类型</h2><p><strong>局域网（LAN）：</strong>一组终端设备和由共同的组织管理的用户。</p><p><strong>广域网（WAN）：</strong>连接分布于不同地理位置的LAN。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 思科 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网组建与维护</title>
      <link href="2021/08/31/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/"/>
      <url>2021/08/31/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/%E5%B1%80%E5%9F%9F%E7%BD%91%E7%BB%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="局域网组建与维护"><a href="#局域网组建与维护" class="headerlink" title="局域网组建与维护"></a>局域网组建与维护</h1><h2 id="局域网交换技术"><a href="#局域网交换技术" class="headerlink" title="局域网交换技术"></a>局域网交换技术</h2><p>项目说明<br>本项目重点学习交换机的配置，熟练进行交换机的配置操作。<br>主要分成以下四个任务进行学习。</p><p>技能目标</p><p>入门篇    交换机的基本配置</p><p>基础篇    交换机的Vlan管理</p><p>提高篇    三层交换机的配置</p><p>进阶篇    交换机的优化技术</p><h3 id="入门篇交换机的基本配置"><a href="#入门篇交换机的基本配置" class="headerlink" title="入门篇交换机的基本配置"></a>入门篇交换机的基本配置</h3><p>交换机的基本配置主要有：给设备命名、登录信息、设置特权密码、VTY密码及Telnet管理、端口配置等。</p><p>本任务分成以下三个任务进行学习。</p><h4 id="任务1交换机的各种配置模式"><a href="#任务1交换机的各种配置模式" class="headerlink" title="任务1交换机的各种配置模式"></a>任务1交换机的各种配置模式</h4><p><strong>任务描述</strong></p><blockquote><p>交换机的配置模式有许多，主要包括用户配置模式、特权模式、全局配置模式、端口配置模式和VLAN配置模式等。熟练进行各种配置模式的进入与切换，了解各种模式下的配置命令，将为以后的学习打下良好的基础。</p></blockquote><p><strong>任务要求</strong></p><blockquote><p>在工作区添加一台交换机，使用交换机管理的“命令行”界面进行操作。</p><p>了解交换机的各种配置模式。</p><p>掌握各种配置模式之间的切换方法。  </p><p>掌握交换机IOS的基本操作命令。</p></blockquote><p><strong>任务步骤→查看用户配置模式下的基本命令。</strong></p><blockquote><p>当进入交换机的“命令行”界面时，按一下键盘上的回车键就进入了交换机的用户配置模式。在该模式下的提示符为<br>“&gt;”，在该模式下可用的命令比较少，可以使用“？”命令显示出该模式下的所有命令：</p></blockquote><p><img src="https://z3.ax1x.com/2021/09/02/hD3NLT.png" alt="用户模式命令"></p><p><strong>任务步骤→查看特权模式下基本命令</strong></p><blockquote><p>特权模式下可对交换机的配置文件进行管理，查看交换机的配置信息，进行网络的测试和调试等。在用户配置模式下键入“enable”命令进入特权模式。特权模式的提示符为“#”，所以也称为“#”模式。</p></blockquote><p><img src="https://z3.ax1x.com/2021/09/02/hD3cy6.png" alt="特权模式命令"></p><p><strong>任务步骤→查看全局配置模式下基本命令</strong></p><blockquote><p>全局配置模式下可以配置交换机的全局性参数。在特权模式下输入“config terminal”或者“configt”或者“conf t”<br>就可以进入全局配置模式。全局配置模式也称为“config”<br>模式。</p></blockquote><p><strong>任务步骤→查看端囗配置模式下的命令</strong></p><blockquote><p>端口配置模式下可以对交换机的端口进行参数配置。一般交换机都拥有许多的端口，还可以添加不同的模块。默认情况下，交换机的所有端口都为以太网接口类型。进入端口配置模式，可以使用“interface ethernet 0/1”命令。</p></blockquote><p><strong>任务步骤→进行模式之间的切换</strong></p><blockquote><p>交换机各模式之间的切换可通过“exit”和“end”命令完成，操作代码如下：</p></blockquote><h3 id="任务2交换机的基本配置"><a href="#任务2交换机的基本配置" class="headerlink" title="任务2交换机的基本配置"></a>任务2交换机的基本配置</h3><p><strong>任务描述</strong></p><blockquote><p>交换机的基本配置是指，对新买回来的交换机（一般要）进行的基本设置，主要包括交换机的设备命名、时间设置、密码设置、IP地址配置及默认网关、远程管理配置等。本任务的网络拓扑图如图所示。</p></blockquote><p><strong>任务要求</strong></p><blockquote><p>设置交换机的名称为SA。</p><p>设置交换机的系统时间为2010年10月25日上午8时整。</p><p>设置交换机的特权密码为123456，并设置成密文存储。</p><p>配置交换机Vlan1的接口IP为192.168.0.1/24。</p><p>设置交换机的Telnet远程管理，管理密码为abc。</p></blockquote><p><strong>任务步骤→交换机命名及系统时间设置</strong><br>》使用鼠标单击交换机图标，进入交换机“命令行”配置界面。交换机的命名在全局配置模式下，使用hostname命令进行设置。</p><p>2.1.2</p><p><strong>任务步骤→配置交换机密码</strong></p><blockquote><p>密码设置在全局配置模式下完成，配置命令为enable password。交换机、路由器都可以设置密码，设置密码可以有效地提高设备的安全性。</p></blockquote><blockquote><p>这些密码都是以明文的形式存储，所以很容易查看到。为了避免这种情况，可以对密码进行加密，即以密文的形式存储各种密码。</p></blockquote><p><strong>任务步骤→配置交换机接口IP地址及默认网关</strong></p><blockquote><p>交换机接口IP的设置在全局配置模式下进行。不管是三层交换机还是二层交换机，在默认情况下都有一个Vlan1的接口，要配置交换机的接口IP，可以直接对Vlan1进行IP设置。</p></blockquote><p>任务3交换机的配置文件管理</p><p>任务4交换机系统文件的备份与升级</p><h4 id="任务5交换机的TELNET配置"><a href="#任务5交换机的TELNET配置" class="headerlink" title="任务5交换机的TELNET配置"></a>任务5交换机的TELNET配置</h4><p><strong>任务步骤→设置交换机的Telnet管理</strong></p><blockquote><p>默认情况下，交换机已经开启了Telnet管理方式，但不允许远程登录，因此还要做一些配置，为Telnet访问设置访问密码。</p></blockquote><h3 id="基础篇交换机的Vlan管理"><a href="#基础篇交换机的Vlan管理" class="headerlink" title="基础篇交换机的Vlan管理"></a>基础篇交换机的Vlan管理</h3><h3 id="提高篇三层交换机的配置"><a href="#提高篇三层交换机的配置" class="headerlink" title="提高篇三层交换机的配置"></a>提高篇三层交换机的配置</h3><h3 id="进阶篇交换机的优化技术"><a href="#进阶篇交换机的优化技术" class="headerlink" title="进阶篇交换机的优化技术"></a>进阶篇交换机的优化技术</h3>]]></content>
      
      
      <categories>
          
          <category> 局域网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 局域网组建与维护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用密码技术（基础）</title>
      <link href="2021/08/30/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/"/>
      <url>2021/08/30/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="应用密码技术"><a href="#应用密码技术" class="headerlink" title="应用密码技术"></a>应用密码技术</h1><h2 id="密码技术历史"><a href="#密码技术历史" class="headerlink" title="密码技术历史"></a>密码技术历史</h2><p><span style="border-bottom:2px dashed red;">标志性事件：</span></p><p>（一）古典密码（从古代到1949年）</p><p>层出不穷，更像是一种艺术</p><p>（二）近代密码学（从1949年到1976年）</p><p><span style="border-bottom:2px dashed red;">Shannon”保密系统的通信理论“（1949）</span></p><p>David Kahn《破译者》的出版（1967）</p><p>（三）现代密码学（从1976年至今）</p><p><span style="border-bottom:2px dashed red;">美国国家标准局公布DES</span></p><p><span style="border-bottom:2px dashed red;">公钥思想”密码学的新方向“的诞生（1976）</span></p><p>隐写术Staganography</p><p>由希腊词Steganos（覆盖）和Graphein（写）派生而来。</p><p>密码术Cryptography</p><p>由希腊词Kryptos（隐藏）派生而来。</p><p><font color="#dd0000">密码学（Cryptology）：</font> 研究信息系统安全保密的科学，主要包括密码编码学、密码分析学和密钥管理学。<br><font color="#dd0000">1.密码编码学（Cryptography）：</font>主要研究对信息进行编码，即密码算法的编制技术。<br><font color="#dd0000">2.密码分析学（Cryptanalytics）：</font> 主要研究加密消息的破译或消息的伪造，即密码破译的理论与技术</p><p><u>密码编码学和密码分析学</u>是密码学的两个基本分支。</p><p><font color="#dd0000">3.密钥管理学</font>是随着密码学研究和应用领域的不断拓展而独立出来的一个分支。</p><p><font color="#dd0000">主要研究内容有：</font> </p><p>随机数生成理论与技术；</p><p>密钥分配理论与方法；</p><p>密钥分散和分层管理技术；</p><p>秘密共享技术；</p><p>密钥托管技术；</p><p>密钥协议设计与分析技术等。</p><p><strong>密钥管理技术总是与密码的具体应用环境和实际的密码系统密切相关。不能脱离实际。</strong></p><p><strong><font color="#dd0000">密码学能够解决的问题：</font></strong></p><p>信息系统的安全与保密问题；</p><p>电子商务、电子政务、电子军务中的安全和保密问题；</p><p>商品、票据、信用卡等的防伪问题。</p><h2 id="（一）密码编码学中的基本概念："><a href="#（一）密码编码学中的基本概念：" class="headerlink" title="（一）密码编码学中的基本概念："></a>（一）密码编码学中的基本概念：</h2><h3 id="（1）明文"><a href="#（1）明文" class="headerlink" title="（1）明文"></a>（1）明文</h3><p>被隐蔽的消息称作明文，通常用m或M表示</p><p>其英文为Message或Plaintext。</p><h3 id="（2）密文"><a href="#（2）密文" class="headerlink" title="（2）密文"></a>（2）密文</h3><p>将明文隐蔽后的结果称作密文，通常用c或C表示</p><p>其英文为Ciphertext。</p><h3 id="（3）加密（Encryption）"><a href="#（3）加密（Encryption）" class="headerlink" title="（3）加密（Encryption）"></a>（3）加密（Encryption）</h3><p>将明文变换成密文的过程称作加密，该过程表示为：</p><p>c=Ee（m）。</p><h3 id="（4）解密（Decryption）"><a href="#（4）解密（Decryption）" class="headerlink" title="（4）解密（Decryption）"></a>（4）解密（Decryption）</h3><p>合法用户由密文恢复出明文的过程称作解密，该过程表示为：m=Dkd（c）。</p><h3 id="（5）密钥（Key）"><a href="#（5）密钥（Key）" class="headerlink" title="（5）密钥（Key）"></a>（5）密钥（Key）</h3><p>控制或参与密码变换的可变的秘密参数称为密钥。</p><p>密钥有分为加密密钥和解密密钥。</p><p><font color="#dd0000">明文Plaintext</font>——需要被传送和加密的消息.</p><p><font color="#dd0000">密文Ciphertext</font>——被加密后的消息.</p><p><font color="#dd0000">加密Encryption</font>——将明文变换为密文的过程.</p><p><font color="#dd0000">解密Decryption</font>——从密文恢复出明文的过程.</p><p><font color="#dd0000">密钥Key</font>——用于加密和解密过程的起“钥匙“作用的秘密信息.</p><h3 id="（6）密码体制（Cryptosystem）：是一个五元组（P，C，K，E，D），满足条件："><a href="#（6）密码体制（Cryptosystem）：是一个五元组（P，C，K，E，D），满足条件：" class="headerlink" title="（6）密码体制（Cryptosystem）：是一个五元组（P，C，K，E，D），满足条件："></a>（6）密码体制（Cryptosystem）：是一个五元组（P，C，K，E，D），满足条件：</h3><p>（1）P是<font color="#dd0000">所有</font>可能明文构成的有限集（明文空间）</p><p>（2）C是<font color="#dd0000">所有</font>可能密文的有限集（密文空间）</p><p>（3）K是<font color="#dd0000">所有可用的</font>密钥构成的有限集（密钥空间）</p><p>（4）密码算法：<font color="#0000dd">包括加密算法和解密算法</font></p><p><strong>任意$k \in K$，有一个加密算法$e_k \in E$和相应的解密算法$d_k \in D$，使得$e_k$:P→C和$d_k$：C→P分别为加密解密函数，满足$d_k（e_k（x））=x$，这里$x \in P$。</strong></p><h3 id="（7）认证算法的基本概念："><a href="#（7）认证算法的基本概念：" class="headerlink" title="（7）认证算法的基本概念："></a>（7）认证算法的基本概念：</h3><p>信息认证算法就是对信息数据执行一个数学变换，变换的结果称为<font color="#dd0000">认证码</font>。</p><p>信息认证算法通过信息数据与认证码之间的制约关系，达到对信息数据的真实性进行认证的目的。</p><p><strong>信息认证算法就是高效地为信息数据人为地产生冗余，并利用这种冗余检测信息的真实性。</strong></p><h2 id="（二）密码通信系统的基本结构："><a href="#（二）密码通信系统的基本结构：" class="headerlink" title="（二）密码通信系统的基本结构："></a>（二）密码通信系统的基本结构：</h2><p><img src="https://z3.ax1x.com/2021/08/30/htv3eP.png"></p>]]></content>
      
      
      <categories>
          
          <category> 应用密码技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 应用密码技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL数据库设计（基础）</title>
      <link href="2021/08/30/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/"/>
      <url>2021/08/30/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-Server数据库设计"><a href="#SQL-Server数据库设计" class="headerlink" title="SQL Server数据库设计"></a>SQL Server数据库设计</h1><h2 id="数据库介绍"><a href="#数据库介绍" class="headerlink" title="数据库介绍"></a>数据库介绍</h2><p><a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728?fr=aladdin">数据库（电子化的文件柜）</a></p><h2 id="数据库的应用"><a href="#数据库的应用" class="headerlink" title="数据库的应用"></a>数据库的应用</h2><p><a href="https://www.zhihu.com/question/432781043/answer/1604375728">数据酷种类，和各自对应的应用场景</a></p><h2 id="数据库的优点"><a href="#数据库的优点" class="headerlink" title="数据库的优点"></a>数据库的优点</h2><p><strong>存储大量的数据信息，便于检索</strong></p><p>数据库可以对数据进行分类保存，并且能够提供快速的查询。例如，我们平时使用百度搜索内容时，百度也是基于数据库和数据分类技术来达到快速搜索的目的。</p><p><strong>数据共享和安全</strong></p><p>数据共享包含所有用户可同时存取数据库中的数据，也包括用户可以用各种方式通过接口使用数据库，并提供数据共享。</p><p>数据一致性和可维护性，以确保数据的安全性和可靠性。</p><p>主要包括：</p><p>①安全性控制：以防止数据丢失、错误更新和越权使用；</p><p>②完整性控制：保证数据的正确性、有效性和相容性；</p><p>③并发控制：使在同一时间周期内，允许对数据实现多路存取，又能防止用户之间的不正常交互作用；</p><p>④故障的发现和恢复：由数据库管理系统提供一套方法，可及时发现故障和修复故障，从而防止数据被破坏</p><p><strong>数据的一致性、完整性、降低数据冗余</strong></p><p>同文件系统相比，由于数据库实现了数据共享，从而避免了用户各自建立应用文件。减少了大量重复数据，减少了数据冗余，维护了数据的一致性。</p><p>可以很好地保证数据有效、不被破坏，而且数据库自身有避免重复数据的功能，以此来降低数据的冗余。</p><p><strong>智能化的分析，产生新的有用信息</strong></p><p>例如，超市中把物品销售信息保存在数据库中，每个月销售情况的排名决定了下半月的进货数量。数据库查询的结果实际上产生了新的数据信息。</p><p><strong>数据的独立性</strong><br>数据的独立性包括数据库中数据库的逻辑结构和应用程序相互独立，也包括数据物理结构的变化不影响数据的逻辑结构。</p><p><strong>数据实现集中控制</strong><br>文件管理方式中，数据处于一种分散的状态，不同的用户或同一用户在不同处理中其文件之间毫无关系。利用数据库可对数据进行集中控制和管理，并通过数据模型表示各种数据的组织以及数据间的联系。</p><p><strong>故障恢复</strong><br>由数据库管理系统提供一套方法，可及时发现故障和修复故障，从而防止数据被破坏。数据库系统能尽快恢复数据库系统运行时出现的故障，可能是物理上或是逻辑上的错误。比如对系统的误操作造成的数据错误等。</p><p><strong>1.整体数据结构化：</strong>在数据库系统中，记录的结构和记录之间的联系有数据库管理系统进行维护，从而减轻了程序员的工作量，提高了工作效率。</p><p><strong>2.数据的共享性高、冗余度低且易扩充：</strong>数据共享包括多个用户、多个应用可以同时存取数据库中的数据，也包括用户可以用各种方式通过接口使用数据库中的数据。同时，数据库实现数据共享大大减少了数据冗余，还能够避免数据之间的不相容性和不一致性。（数据的不一致性：指同一数据不同副本的值不一样）</p><p><strong>3.数据独立性高：</strong>数据独立性包括数据的物理独立性和逻辑独立性，即用户的应用程序与数据库中数据的物理存储和数据的逻辑结构均相互独立。</p><p><strong>4.数据由数据库管理系统统一管理和控制：</strong>利用数据库可对数据进行集中控制和管理，并通过数据模型表示各种数据的组织以及数据间的联系，同时数据库管理系统提供了以下几个方面的数据控制功能，以解决数据共享带来的安全隐患。</p><p>​    数据的安全性保护：保护数据以防止不合法使用造成的数据泄密和破坏；<br>​    数据的完整性检查：保证数据的正确性、有效性和相容性（数据中的相容性是指表示同一事实的两个数据应相同，或者满足某一约束关系的一组数据不应发生互斥）；<br>​    并发控制：使在同一周期内，允许对数据实现多路存取，又能防止用户之间的不正常交互作用（例如，当多个用户的并发进程同时存取、修改数据库时，可能会发生相互干扰而得到错误的结果或使得数据库的完整性遭到破坏）；<br>​    数据库恢复：数据库管理系统能及时发现故障，并将数据库从错误状态恢复到某一已知的正确状态（亦称为完整状态或一致状态）。</p><h2 id="数据库基础知识"><a href="#数据库基础知识" class="headerlink" title="数据库基础知识"></a>数据库基础知识</h2><h3 id="1、数据库概述"><a href="#1、数据库概述" class="headerlink" title="1、数据库概述"></a>1、数据库概述</h3><p><span style="border-bottom:2px dashed blue;">数据库技术</span>：是计算机领域重要的技术之一。</p><p><span style="border-bottom:2px dashed blue;">应用场景</span>：在互联网、银行、通讯、政府部门、企事业单位、科研机构等领域，都存在着大量的数据。</p><p><span style="border-bottom:2px dashed blue;">数据库技术研究的意义</span>：</p><p>如何对数据进行有效的管理，包括如何组织和存储数据。</p><p>如何在数据库系统中减少数据存储冗余、实现数据共享、保障数据安全，以及高效地检索和处理数据。</p><p><img src="https://z3.ax1x.com/2021/08/30/hJ5oZR.png" alt="数据库系统图示"></p><p><img src="https://z3.ax1x.com/2021/08/30/hJItm9.png" alt="数据库系统"></p><p><span style="border-bottom:2px dashed blue;">数据（Data）</span>：不仅包括普通意义上的数字，还包括文字、图像、声音等。也就是说，凡是在计算机中用来描述事物的信息都可称作数据。</p><p><span style="border-bottom:2px dashed blue;">数据库（Database，DB）</span>：是按照数据结构来组织、存储和管理数据的仓库。</p><p><span style="border-bottom:2px dashed blue;">数据库管理系统（Database Management System，DBMS）</span>：专门用于创建和管理数据库的一套软件，介于应用程序和操作系统之间，如MySQL、Oracle等。</p><p><span style="border-bottom:2px dashed blue;">数据库应用程序</span>：在很多情况下， DBMS无法满足用户对数据库的管理。此时，就需要使用数据库应用程序与DBMS进行通信、访问和管理DBMS中存储的数据。</p><p><span style="border-bottom:2px dashed blue;">数据库系统（DataBase System，DBS）</span>：是指在计算机系统中引入数据库后的系统，除了数据库，还包括数据库管理系统、数据库应用程序等。</p><h3 id="2、数据库技术的发展"><a href="#2、数据库技术的发展" class="headerlink" title="2、数据库技术的发展"></a>2、数据库技术的发展</h3><p>任何一种技术都不是凭空产生，而是经历了长期的发展过程。通过了解数据库技术的发展历史，可以理解现在的数据库技术是基于什么样的需求而诞生的。</p><p>数据库技术的发展主要分为<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E9%98%B6%E6%AE%B5/22837304?fr=aladdin"><strong>3个阶段</strong></a>（此部分也收录于百度词条<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AE%A1%E7%90%86">数据处理管理</a>中)</p><p><a href="https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E7%AE%A1%E7%90%86%E9%98%B6%E6%AE%B5/22837302?fr=aladdin"><strong>人工管理阶段</strong></a></p><p><a href="https://www.douban.com/note/512976863/"><strong>文件系统阶段</strong></a></p><p><a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E9%98%B6%E6%AE%B5/22837304?fr=aladdin"><strong>数据库系统阶段</strong></a></p><h3 id="3、三级模式和二级映像"><a href="#3、三级模式和二级映像" class="headerlink" title="3、三级模式和二级映像"></a>3、三级模式和二级映像</h3><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> SQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于网鼎杯对于计算机的学习</title>
      <link href="2021/08/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/08/29/%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%AD%A6%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="基于网鼎杯对于计算机的学习"><a href="#基于网鼎杯对于计算机的学习" class="headerlink" title="基于网鼎杯对于计算机的学习"></a>基于网鼎杯对于计算机的学习</h1><h2 id="WINDOWS网络基础"><a href="#WINDOWS网络基础" class="headerlink" title="WINDOWS网络基础"></a>WINDOWS网络基础</h2><h3 id="DOS基本命令与批处理"><a href="#DOS基本命令与批处理" class="headerlink" title="DOS基本命令与批处理"></a>DOS基本命令与批处理</h3><h4 id="一、DOS命令"><a href="#一、DOS命令" class="headerlink" title="一、DOS命令"></a>一、DOS命令</h4><h5 id="1-1、如何操作DOS-命令"><a href="#1-1、如何操作DOS-命令" class="headerlink" title="1.1、如何操作DOS 命令"></a>1.1、如何操作DOS 命令</h5><p>开始——运行——输入cmd——回车，将调出C：\windows\system32\cmd.exe         或者win+R——运行——输入cmd——回车</p><h5 id="1-2、目录相关命令"><a href="#1-2、目录相关命令" class="headerlink" title="1.2、目录相关命令"></a>1.2、目录相关命令</h5><h6 id="1-命令：dir"><a href="#1-命令：dir" class="headerlink" title="1.命令：dir"></a>1.命令：dir</h6><p>作用：浏览当前文件夹的内容（带<dir>标识的为文件夹，否则为文件）其他用法：</p><p>dir     指定路径</p><p>dir   d:\dir   d:\pic</p><p>dir     /a        # 浏览所有内容包括隐藏内容</p><p>dir     /ah     # 只显示隐藏的文件夹</p><h6 id="2-命令：盘符："><a href="#2-命令：盘符：" class="headerlink" title="2.命令：盘符："></a>2.命令：盘符：</h6><p>作用：切换分区，如：  c：     d：     e：  </p><h6 id="3-命令：cd"><a href="#3-命令：cd" class="headerlink" title="3.命令：cd.."></a>3.命令：cd..</h6><p>作用：退出一级目录</p><h6 id="4-命令：cd文件夹名作用：进入文件夹"><a href="#4-命令：cd文件夹名作用：进入文件夹" class="headerlink" title="4.命令：cd文件夹名作用：进入文件夹"></a>4.命令：cd文件夹名作用：进入文件夹</h6><h6 id="5-Tab键：补全路径功能"><a href="#5-Tab键：补全路径功能" class="headerlink" title="5.Tab键：补全路径功能"></a>5.Tab键：补全路径功能</h6><h6 id="6-命令：cd"><a href="#6-命令：cd" class="headerlink" title="6.命令：cd\"></a>6.命令：cd\</h6><p>作用：直接退到根目录</p><h6 id="7-命令：md-文件夹-文件夹-文件夹"><a href="#7-命令：md-文件夹-文件夹-文件夹" class="headerlink" title="7.命令：md  文件夹     [文件夹     文件夹         ]"></a>7.命令：md  文件夹     [文件夹     文件夹         ]</h6><p>作用：创建文件夹</p><p>例：md   a   b(创建a文件夹和b文件夹)</p><h6 id="8-命令：rd-文件夹-文件夹-文件夹"><a href="#8-命令：rd-文件夹-文件夹-文件夹" class="headerlink" title="8.命令：rd    文件夹     [文件夹     文件夹         ]"></a>8.命令：rd    文件夹     [文件夹     文件夹         ]</h6><p>作用：删除空文件夹</p><p>命令：rd    文件夹  /s(删除)  /q(无提示直接删除)</p><p>作用：无提示删除非空文件夹</p><h5 id="1-3、文件相关命令"><a href="#1-3、文件相关命令" class="headerlink" title="1.3、文件相关命令"></a>1.3、文件相关命令</h5><h6 id="1-创建文件方法："><a href="#1-创建文件方法：" class="headerlink" title="1.创建文件方法："></a>1.创建文件方法：</h6><p>echo   字符串&gt;&gt;[路径]文件名.扩展名</p><p>注释：&gt;&gt;和&gt;都可以将命令的输出内容输入到某文件夹中，若文件夹不存在，则同时创建该文件</p><p>&gt;&gt;为追加</p><p>&gt;为覆盖</p><p>案例：修改hosts文件</p><p>echo     1.1.1.1    <a href="http://www.baidu.com/">www.baidu.com</a>&gt;&gt;c:\windows\system32\drivers\ect\hosts</p><h6 id="2-命令：type-文件名-扩展名"><a href="#2-命令：type-文件名-扩展名" class="headerlink" title="2.命令：type   文件名.扩展名"></a>2.命令：type   文件名.扩展名</h6><p>作用：浏览一个文件的内容</p><h6 id="3-命令：del-文件名-扩展名"><a href="#3-命令：del-文件名-扩展名" class="headerlink" title="3.命令：del     文件名.扩展名"></a>3.命令：del     文件名.扩展名</h6><p>作用：删除文件</p><p>del *.txt</p><p>del * . *</p><p>del * . * /s  /q</p><p>D:&gt;copy   con    b.txt   (复制当前文件到)</p><p>命令：D:&gt;attrib   +h   a(添加隐藏属性)</p><p>命令：D:&gt;attrib    -h   a(取消隐藏属性)</p><p>命令：D:&gt;attrib   +h   +s(把此文件夹提升为受系统保护的文件夹)</p><p>命令：D:&gt;attrib   +h   +a(将此文件夹添加只读属性)</p><p>命令：shutdown   -s   -t   200(-t是加时间，单位是秒)(200秒后自动关机)</p><p>命令：shutdown   -a(取消关机)</p><p>shutdown   -r   -f(-r重启   -f强制)(无提示强制执行)</p><p>shutdown   -s   -c    “it  is  time   to  sleep”   -t   100(-c会在弹出窗口提示引号内内容)</p><p>cl(清屏)</p><p>例：D盘有a、b两文件夹，a文件夹下有haha.txt文件</p><p>可使用D:\a&gt;copy    haha.txt    ..\b\       (..是返回上一级目录)(相对路径)</p><p>可使用D:\a&gt;copy   \a\haha.txt   .\         (.是指当前目录下) (绝对路径)</p><p>D:\a&gt;move   haha.txt   C:\     (将D盘a文件夹下haha.txt移动到C盘)</p><p>D:&gt;ren haha.txt    heihei.txt     (将haha.txt修改为heihei.txt) (ren可以修改名字)</p><p>C:&gt;copy   muma.exe    \10.1.1.1\     (将C盘下muma.exe文件复制到IP为10.1.1.1的电脑下)</p><h5 id="1-4、其他命令"><a href="#1-4、其他命令" class="headerlink" title="1.4、其他命令"></a>1.4、其他命令</h5><h6 id="1-修改文件或文件夹隐藏属性命令："><a href="#1-修改文件或文件夹隐藏属性命令：" class="headerlink" title="1.修改文件或文件夹隐藏属性命令："></a>1.修改文件或文件夹隐藏属性命令：</h6><p>attrib   +h   文件全名/文件夹名   # 隐藏文件或文件夹</p><p>attrib   -s   +h   文件全名/文件夹名   # 提升为被系统保护的文件</p><p>注释：+改为-为取消修改文件属性</p><h6 id="2-复制和移动命令："><a href="#2-复制和移动命令：" class="headerlink" title="2.复制和移动命令："></a>2.复制和移动命令：</h6><p>复制文件：copy   [路径]源文件全名   目标路径[\新we年全名]</p><p>移动文件：move   [路径]源文件全名   目标路径[\新we年全名]</p><h6 id="3-定时关机命令："><a href="#3-定时关机命令：" class="headerlink" title="3.定时关机命令："></a>3.定时关机命令：</h6><p>shutdown   -s   -f   -t   秒   # 定时强制关机</p><p>shutdown   -r   -t   秒         # 定时重启，同时加上-f，为强制重启</p><p>shutdown   -a                      # 取消定时</p><h6 id="4-ping-命令"><a href="#4-ping-命令" class="headerlink" title="4.ping  命令:"></a>4.ping  命令:</h6><p>Ping命令是专用于TCP/IP协议的探测工具，它对测试网络连接状况以及信息包 发送和接收状况非常有用，这是TCP/IP协议中最有用的命令之一。它给另一个系统发送一系列的数据包该系统本身又发回一个响应，这条实用程序对查找远程主机很有用，它返回的结果表示是否能到达主机，宿主机发送一个返回数据包需要多长时间。</p><p>-t   表示将不间断向目标IP发送数据包，直到我们强迫其停止。</p><p>-l   定义发送数据包的大小，默认为32字节，我们利用它可以最大定义到65500字节。</p><p>-n   定义向目标IP发送数据包的次数，默认为3次。如果网络速度比较慢，3次对我们来说也浪费了不少时间，因为我们的目的仅仅是判断目标IP是否存在，那么就定义为一次吧。</p><p>说明一下，如果  -t  参数和  -n  参数一起使用，ping命令就以放在后面的参数为标准，比如“ping  IP  -t  -n  3”，虽然使用了  -t  参数，但并不是一直ping下去，而是只  ping   3次。另外， ping命令不一定非得   ping   IP，也可以直接  ping  主机域名，这样就可以得到主机的  IP  。</p><h6 id="5-netstat-命令"><a href="#5-netstat-命令" class="headerlink" title="5.netstat  命令:"></a>5.netstat  命令:</h6><p>这是一个用来查看网络状态的命令，操作简便功能强大。</p><p>-a   查看本地机器的所有开放端口，可以有效发现和预防木马，可以知道机器所开的服务等信息。</p><p>-r   列出当前的路由信息，告诉我们本地机器的网关、子网掩码等信息。 </p><p>-n   以数字形式显示地址和端口号。</p><h6 id="6-ipconfig-命令"><a href="#6-ipconfig-命令" class="headerlink" title="6.ipconfig  命令:"></a>6.ipconfig  命令:</h6><p>ipconfig  可用于显示当前的  TCP/IP  配置的设置值；</p><p>ipconfig  /all：显示本机  TCP/IP  配置的详细信息；</p><p> ipconfig  /release:  DHCP  客户端手工释放  IP地址；</p><p>ipconfig  /renew:  DHCP  客户端手工向服务器刷新请求；</p><p>ipconfig  /flushdns:  清除本地  DNS  缓存内容；</p><p>ipconfig  /displaydns:  显示本地  DNS  内容；</p><h4 id="二、批处理"><a href="#二、批处理" class="headerlink" title="二、批处理"></a>二、批处理</h4><h5 id="1-1、批处理作用"><a href="#1-1、批处理作用" class="headerlink" title="1.1、批处理作用"></a>1.1、批处理作用</h5><p>自上而下成批的处理每一条命令，直到执行最后一条!</p><h5 id="1-2、如何创建批处理扩展名-bat"><a href="#1-2、如何创建批处理扩展名-bat" class="headerlink" title="1.2、如何创建批处理扩展名:    .bat"></a>1.2、如何创建批处理扩展名:    .bat</h5><p>创建方法:   新建一个记事本文件，然后将扩展名改为   .bat</p><p>注：修改扩展名时，需要将文件的扩展名显示出来后再进行修改!</p><p>案例，新建一个记事本文件，然后将扩展名改为   .bat  ，内容如下:</p><p>d:</p><p>cd  \</p><p>cd tmp</p><p>del  .  /s   /q</p><h5 id="1-3、批处理基本语法"><a href="#1-3、批处理基本语法" class="headerlink" title="1.3、批处理基本语法"></a>1.3、批处理基本语法</h5><p>1.3.1、@echo off</p><p>作用:关闭回显功能，也就是屏蔽过程，建议放置在批处理的首行</p><p>1.3.2、pause</p><p>作用:暂停批处理运行</p><p>1.3.3、title</p><p>作用:为批处理脚本设置标题</p><p>1.3.4、echo.</p><p>作用:在执行批处理脚本时，可以空一行。</p><p>1.3.5、set</p><p>作用:设置变量，常用与在脚本中的互动赋值。</p><p>1.3.6、：和   goto</p><p>当程序运行到  goto  时，将自动跳转到  :  定义的标签部分去执行命令块了，所有  :  和  goto  联合起来可以实现在批处理执行时进行跳转功能。</p><h3 id="POWERSHELL-基础"><a href="#POWERSHELL-基础" class="headerlink" title="POWERSHELL  基础"></a>POWERSHELL  基础</h3><h4 id="PowerShell-概念"><a href="#PowerShell-概念" class="headerlink" title="PowerShell  概念"></a>PowerShell  概念</h4><p>Windows  PowerShell  是一种命令行外壳程序和脚本环境，使命令行用户和脚本编写者可以利用   .NET Framework的强大功能</p><p>它引入了许多非常有用的新概念，从而进一步扩展了您在  Windows  命令提示符和  Windows  Script Host  环境中获得的知识和创建的脚本。</p><p>Windows  PowerShell  v3  将伴随着  Microsoft Hyper-V 3.0  和  Windows Server 2012  发布。 PowerShellv3  是一个  Windows  任务自动化的框架，它由一个命令行  shell  和内置在这个  .NET  框架上的编程语言组成。</p><p>PowerShellv3  采用新的  cmdlet  让管理员能够更深入到系统进程中，这些进程可以制作成可执行的文件或脚本  (script)  。一条  cmdlet  是一条轻量命令，Windows PowerShell   运行时间在自动化脚本的环境里调用它。</p><p>Cmdlet   包括显示当前目录的  Get-Location  ，访问文件内容的  Get-Content  和结束运行进程的  Stop-Process。 </p><h4 id="PowerShell-中内置的命令"><a href="#PowerShell-中内置的命令" class="headerlink" title="PowerShell  中内置的命令"></a>PowerShell  中内置的命令</h4><h5 id="PowerShell-中内置的命令称为-cmdletscmdlet-实现具有以下特点"><a href="#PowerShell-中内置的命令称为-cmdletscmdlet-实现具有以下特点" class="headerlink" title="PowerShell  中内置的命令称为  cmdletscmdlet  实现具有以下特点:"></a>PowerShell  中内置的命令称为  cmdletscmdlet  实现具有以下特点:</h5><ul><li><p>1)统一的命令形式</p></li><li><p>2)支持管道功能</p></li><li><p>3)输出易于管理的对象,支持面向对象的概念</p></li></ul><h5 id="在-PowerShell-中有一个内置的变量-profile-这个变量指示了-PowerShell-用户自定义配置文件。"><a href="#在-PowerShell-中有一个内置的变量-profile-这个变量指示了-PowerShell-用户自定义配置文件。" class="headerlink" title="在  PowerShell  中有一个内置的变量  :  $profile  ;  这个变量指示了  PowerShell  用户自定义配置文件。"></a>在  PowerShell  中有一个内置的变量  :  $profile  ;  这个变量指示了  PowerShell  用户自定义配置文件。</h5><h5 id="可以在-PowerShell-中输入-profile"><a href="#可以在-PowerShell-中输入-profile" class="headerlink" title="可以在  PowerShell  中输入 $profile"></a>可以在  PowerShell  中输入 $profile</h5><h6 id="cd-命令现在用-set-location-命令替代"><a href="#cd-命令现在用-set-location-命令替代" class="headerlink" title="cd  命令现在用  set-location  命令替代"></a>cd  命令现在用  set-location  命令替代</h6><p>dir  命令用  get-childitem  命令替代</p><p>通过:  set-alias  命令来设置命令别名。</p><h6 id="set-alias-new-new-objector"><a href="#set-alias-new-new-objector" class="headerlink" title="set-alias   new   new-objector"></a>set-alias   new   new-objector</h6><p>set-alias   iexplorer   ‘c:program filesinternet explorer iexplorer.exe’</p><p>获取指定命令的帮助信息</p><p>eg  :   get-command get-process</p><h6 id="利用通配符进行搜索"><a href="#利用通配符进行搜索" class="headerlink" title="利用通配符进行搜索"></a>利用通配符进行搜索</h6><p>PowerShell  支持通配符搜索,这一功能的完美支持,完全可以媲美  linux  下的正则表达式</p><h6 id="get-command-char"><a href="#get-command-char" class="headerlink" title="get-command   * char *"></a>get-command   * char *</h6><p>例如搜索带动词  get  的命令:</p><p>get-command   -verb   get</p><h6 id="搜索带名词service的命令"><a href="#搜索带名词service的命令" class="headerlink" title="搜索带名词service的命令"></a>搜索带名词service的命令</h6><p>get-command   -noun   seryice</p><p>cmdlets一致的命令接口模式</p><h6 id="PowerShell-采用一种称为-cmdlets-的命令接口模式"><a href="#PowerShell-采用一种称为-cmdlets-的命令接口模式" class="headerlink" title="PowerShell  采用一种称为  cmdlets  的命令接口模式:"></a>PowerShell  采用一种称为  cmdlets  的命令接口模式:</h6><p>所有的命令都遵循这样的命令模式  :  动词-名词,如:  get-command  命令，get  就是动词,而  command  就是名词</p><p>get-process   /   get-eventlog</p><h4 id="管道和对象成员管道"><a href="#管道和对象成员管道" class="headerlink" title="管道和对象成员管道"></a>管道和对象成员管道</h4><h5 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h5><p>管道的最大特点就是:前一个命令的输出作为后一个命令的输入。cmd、bash  均支持管道</p><h5 id="管道的概念"><a href="#管道的概念" class="headerlink" title="管道的概念"></a>管道的概念</h5><p>在  PS  中,继承了  cmd  管道符号的表示方法  :  |  表管道；</p><p>但是  PS  与  cmd  的管道有本质的区别，cmd  中的管道传递的是文本信息而  PS  中传递的是对象,因此  PS  中的管道更加易于使用和管理。</p><h3 id="用户与组管理"><a href="#用户与组管理" class="headerlink" title="用户与组管理"></a>用户与组管理</h3><h4 id="一、服务器系统版本介绍"><a href="#一、服务器系统版本介绍" class="headerlink" title="一、服务器系统版本介绍"></a>一、服务器系统版本介绍</h4><p>windons  服务器系统:  win2000   win2003   win2008   win2012   </p><p>linux  服务器系统:  Redhat   Centos</p><h4 id="二、用户管理"><a href="#二、用户管理" class="headerlink" title="二、用户管理"></a>二、用户管理</h4><h5 id="1-1用户概述"><a href="#1-1用户概述" class="headerlink" title="1.1用户概述"></a>1.1用户概述</h5><p>每一个用户登录系统后，拥有不同的操作权限，每个账户有自己唯一的  SID  (安全标识符)  </p><p>用户   SID  :  51-5-21-426206823-2579496042-14852678-500   UID </p><p>系统   SID   :  51-5-21-426206823-2579496042-14852678</p><p>* windows  系统管理员  administrator  的  UID  是500   ·普通用户的UID是1000开始</p><p>不同的账户拥有不同的权限，为不同的账户赋权限，也就是为不用账户的SID赋权限!查看   sid   值:   whoami    /   user</p><p>账户密码存储位置:   C:\windows\system32\config\SAM </p><p>windows系统上，默认密码最长有效期42天</p><h5 id="1-2内置账户"><a href="#1-2内置账户" class="headerlink" title="1.2内置账户"></a>1.2内置账户</h5><h6 id="给人使用的账户"><a href="#给人使用的账户" class="headerlink" title="给人使用的账户:"></a>给人使用的账户:</h6><p>administrator        # 管理员账户</p><p>guest                         # 来宾账户 </p><h6 id="计算机服务组件相关的系统账号"><a href="#计算机服务组件相关的系统账号" class="headerlink" title="计算机服务组件相关的系统账号"></a>计算机服务组件相关的系统账号</h6><p>system               #  系统账户  ==  权限至高无上 </p><p>local services  # 本地服务账户 == 权限等于普通用户 </p><p>nretwork services  # 网络服务账户  ==  权限等于普通用户</p><h5 id="1-3配置文件"><a href="#1-3配置文件" class="headerlink" title="1.3配置文件"></a>1.3配置文件</h5><p>每个用户都有自己的配置文件(家目录)，</p><p>在用户第一次登录时自动产生，路经是：</p><p>win7/win2008       C:\用户\ </p><p>xp/win2003            C:\Documents and Settings\</p><h5 id="1-4用户管理命令"><a href="#1-4用户管理命令" class="headerlink" title="1.4用户管理命令"></a>1.4用户管理命令</h5><p>net user                                     # 查看用户列表</p><p>net user 用户名 密码          # 改密码</p><p>net user 用户名 密码          # 创建一个新用户</p><p>/add net user 用户名  /del        # 删除一个用户</p><p>net user  用户名  /active : yes/no    # 激活或禁用账户</p><h4 id="三、组管理"><a href="#三、组管理" class="headerlink" title="三、组管理"></a>三、组管理</h4><h5 id="3-1组概述"><a href="#3-1组概述" class="headerlink" title="3.1组概述"></a>3.1组概述</h5><p>组的作用:简化权限的赋子，赋权限方式:</p><p>1)用户—组—赋权限·</p><p>2)用户—赋权限</p><h5 id="3-2内置组"><a href="#3-2内置组" class="headerlink" title="3.2内置组"></a>3.2内置组</h5><p>内置组的权限默认已经被系统赋予</p><p>1)administrators       # 管理员组</p><p>2)guests                        # 来宾组</p><p>3)users                          # 普通用户组，默认新用户都现于该组</p><p>4)network                       # 网络配置组</p><p>5)print                            # 打印机组</p><p>6)Remote Desktop    # 远程桌面组</p><h5 id="3-3组管理命令"><a href="#3-3组管理命令" class="headerlink" title="3.3组管理命令"></a>3.3组管理命令</h5><p>net   localgroup     # 查看组列表</p><p>net   localgroup   组名   # 查看该组成员</p><p>net   localgroup   组名   /add   # 创建一个新组</p><p>net   localgroup   组名   用户名  /add   # 添加用户到组</p><p>net   localgroup   组名 用户名  /del   # 从组中删除用户</p><p>net localgroup   组名   /del   # 删除组</p><h3 id="NTFS-安全权限"><a href="#NTFS-安全权限" class="headerlink" title="NTFS  安全权限"></a>NTFS  安全权限</h3><h4 id="一、NTFS-权限概述"><a href="#一、NTFS-权限概述" class="headerlink" title="一、NTFS 权限概述"></a>一、NTFS 权限概述</h4><p>1、通过设置   NTFS   权限，实现不同的用户访问不同对象的权限</p><p>2、分配了正确的访问权限后，用户才能访问其资源</p><p>3、设置权限防止资源被篡改、删除</p><h4 id="二、文件系统概述"><a href="#二、文件系统概述" class="headerlink" title="二、文件系统概述"></a>二、文件系统概述</h4><p>文件系统即在外部存储设备上组织文件的方法</p><p>常见的的文件系统:</p><p>FAT                     windows</p><p>NTFS                  windows</p><p>EXT                      linux常见</p><h4 id="三、NTFS-文件系统特点"><a href="#三、NTFS-文件系统特点" class="headerlink" title="三、NTFS  文件系统特点"></a>三、NTFS  文件系统特点</h4><h5 id="1-提高磁盘读写性能"><a href="#1-提高磁盘读写性能" class="headerlink" title="1.提高磁盘读写性能"></a>1.提高磁盘读写性能</h5><h5 id="2-可靠性"><a href="#2-可靠性" class="headerlink" title="2.可靠性"></a>2.可靠性</h5><p>加密文件系统</p><p>访问控制列表(设置权限)</p><h5 id="3-磁盘利用率压缩"><a href="#3-磁盘利用率压缩" class="headerlink" title="3.磁盘利用率压缩"></a>3.磁盘利用率压缩</h5><p>磁盘配额</p><h5 id="4-支持单个文件大于4个G"><a href="#4-支持单个文件大于4个G" class="headerlink" title="4.支持单个文件大于4个G"></a>4.支持单个文件大于4个G</h5><h4 id="四、修改NTFS权限"><a href="#四、修改NTFS权限" class="headerlink" title="四、修改NTFS权限"></a>四、修改NTFS权限</h4><h5 id="4-1、取消权限继承"><a href="#4-1、取消权限继承" class="headerlink" title="4.1、取消权限继承"></a>4.1、取消权限继承</h5><p>作用:取消后，可以任意修改权限列表了</p><p>方法:文件夹右键属性—安全—高级—去掉第一个对号–选择复制即可</p><h5 id="4-2、文件及文件夹权限"><a href="#4-2、文件及文件夹权限" class="headerlink" title="4.2、文件及文件夹权限"></a>4.2、文件及文件夹权限</h5><h6 id="文件权限-权限内容"><a href="#文件权限-权限内容" class="headerlink" title="文件权限                              权限内容"></a>文件权限                              权限内容</h6><p>完全控制                              拥有读取、写入、修改文件、及特殊的权限</p><p>修改                                         拥有读取、写入、修改。 删除文件的权限</p><p>读取和执行                           拥有读取、及执行文件的权限</p><p> 读取                                         拥有读取文件的权限</p><p> 写入                                         拥有修改文件内容的权限</p><p>特殊的权限                           控制文件权限列表的权限</p><h6 id="文件夹权限-权限内容"><a href="#文件夹权限-权限内容" class="headerlink" title="文件夹权限                           权限内容"></a>文件夹权限                           权限内容</h6><p>完全控制                                 拥有对文件及文件夹读取、写入、修改、删除文件、及特殊的权限</p><p>修改                                           拥有对文件及文件夹读取、写入、修改、删除文件的权限</p><p>读取和执行                             拥有对文件及文件夹下载、读取、及执行的权限</p><p>列出文件夹内容                    可以列出文件夹的内容</p><p>读取                                              拥有对文件及文件夹下载、读取的权限</p><p>写入                                               拥有在文件夹中创建新的文件的权限</p><p>特殊权限                                      控制文件夹权限列表的权限</p><h5 id="4-3、权限累加"><a href="#4-3、权限累加" class="headerlink" title="4.3、权限累加"></a>4.3、权限累加</h5><p>当用户同时属于多个组时，权限是累加的!</p><p>用户  a  同时属于  IT  组与  HR  组，IT  组对文件夹  jimi   可以读取，HR  组可以对  jimi  文件夹写入，则  a  用户最终的权限为读取和写入。</p><h5 id="4-4、拒绝最大"><a href="#4-4、拒绝最大" class="headerlink" title="4.4、拒绝最大"></a>4.4、拒绝最大</h5><p>当用户权限累加时，如遇到拒绝权限，拒绝最大!</p><p>用户  a  属于财务部组，财务部组成员为10个用户，财务部组拥有对文件夹  xxx  访问权限，现要求  a  用户不能脱离财务部组， 同时要求  a  没有访问文件夹  xxx  的权限。</p><h5 id="4-5、取得所有权"><a href="#4-5、取得所有权" class="headerlink" title="4.5、取得所有权"></a>4.5、取得所有权</h5><p>默认只有  administrator  有这个权限!</p><p>作用:可以将任何文件夹的所有者改为  administrator</p><p>用户  a  已离职，但  xxx  文件夹的属主是a，由于  a   用户对  xxx  文件夹做过权限修改，导致其他用户对  xxx  文件夹没有任何权限，现需要管理员  administrator  用户将  xxx  文件夹重新修改权限。</p><h5 id="4-6、强制继承"><a href="#4-6、强制继承" class="headerlink" title="4.6、强制继承"></a>4.6、强制继承</h5><p>作用:对下强制继承父子关系!</p><p>方法:文件夹右键属性–安全-高级–勾上第二个对号，即可!</p><p>案例:xx文件夹下有多个子文件夹及文件，由于长时间的权限管理，多个子文件夹的权限都做过不同的权限修改，现需要xxx下的所有子文件及文件夹的权限全部统一。</p><h5 id="4-7、文件复制对权限的影响"><a href="#4-7、文件复制对权限的影响" class="headerlink" title="4.7、文件复制对权限的影响"></a>4.7、文件复制对权限的影响</h5><p>文件复制后，文件的权限会被目标文件夹的权限覆盖。唯一不被覆盖的是同分区下移动文件</p><h2 id="LINUX系统基础"><a href="#LINUX系统基础" class="headerlink" title="LINUX系统基础"></a>LINUX系统基础</h2><h3 id="LINUX系统介绍"><a href="#LINUX系统介绍" class="headerlink" title="LINUX系统介绍"></a>LINUX系统介绍</h3><h4 id="一、KALI-LINUX"><a href="#一、KALI-LINUX" class="headerlink" title="一、KALI LINUX"></a>一、KALI LINUX</h4><p>Kali Linux  是一个高级渗透测试和安全审计  Linux  发行版</p><p>这是黑客必备工具之一</p><p>Kali 并不是为普通用户准备的。它并不是一个运行在你的笔记本电脑上的普通  Linux   发行版</p><p>而是一个很酷的“黑客操作系统“</p><p>Kali Linux  是许多优秀的安全工具的集合。对于专业用户来说，它有难以置信的好处，但是对于一些不怀好意的人来说，也可以产生很多大麻烦。小心地使用  Kali  ，充分利用它的巨大优势。</p><p>KaliLinux  将所带的工具集划分为十四个大类，这些大类中，很多工具是重复出现的，因为这些工具同时具有多种功能，比如  nmap  既能作为信息搜集工具也能作为漏洞探测工具。</p><h4 id="二、目录"><a href="#二、目录" class="headerlink" title="二、目录"></a>二、目录</h4><p>/      根目录      系统的起始目录</p><p>/bin          保存了管理员和普通用户的命令</p><p>/sbin               只有管理员可以执行的命令</p><p>/boot       引导目录       独立的分区        /dev/sda1           具有内核     启动菜单还有驱动盘</p><p>/dev      device设备          文件存放目录/dev/sda</p><p>/etc          配置文件存放目录</p><p>/home                  普通用户的家目录</p><p>/root                      超级管理员的家</p><p>/media                  媒体光驱默认挂载目录</p><p>/mnt    mount     临时设备挂载目录(U盘等外接设备)</p><p>/proc                      进程状态存放目录(内存空间不占硬盘)</p><p>/tmp                       临时文件存放目录</p><p>/usr                         GNU社区软件的默认安装目录</p><p>/var                         常变文件存放目录    日志文件   邮件。</p><h4 id="三、颜色"><a href="#三、颜色" class="headerlink" title="三、颜色"></a>三、颜色</h4><p>蓝色字体                          目录 </p><p>黑色                                    普通文件</p><p>红色                                    压缩文件</p><p>浅蓝色                               符号链接 (快捷方式)</p><p>黑底黄字                          设备文件</p><p>紫色                                    图片文件和模块文件</p><h3 id="LINUX基本命令"><a href="#LINUX基本命令" class="headerlink" title="LINUX基本命令"></a>LINUX基本命令</h3><h4 id="1-is–List"><a href="#1-is–List" class="headerlink" title="1.is–List"></a>1.is–List</h4><p>ls会列举出当前工作目录的内容(文件或文件夹) Lee:~ tusm$ ls</p><p>Applications                   Library                    Pictures</p><p>Desktop                            Movies                    Public</p><p>Documents                      Music                      database.php</p><p>Downloads            PhpstormProjects        tmp  </p><p>|Lee:~ tusm$ cd desktop</p><p>Lee:desktop tusm$|</p><h4 id="2-cd-–-Change-Directory"><a href="#2-cd-–-Change-Directory" class="headerlink" title="2.cd – Change Directory"></a>2.cd – Change Directory</h4><p>切换文件路径，cd将给定的文件夹(或目录)设置成当前工作目录。</p><h4 id="3-pwd-Print-lorking-Directory"><a href="#3-pwd-Print-lorking-Directory" class="headerlink" title="3.pwd -Print lorking Directory"></a>3.pwd -Print lorking Directory</h4><p>显示当前工作目录</p><p>Lee:desktop tusm$ pwd/Users/tusm/desktop</p><h6 id="4-mkdir-Make-Directory"><a href="#4-mkdir-Make-Directory" class="headerlink" title="4.mkdir - Make Directory"></a>4.mkdir - Make Directory</h6><p>mkdir 用于新建一个新目录</p><h4 id="5-rmdir-Remove-Directory"><a href="#5-rmdir-Remove-Directory" class="headerlink" title="5.rmdir- Remove Directory"></a>5.rmdir- Remove Directory</h4><p>删除给定的目录。</p><p>Lee:desktop  tusm$  mkdir  leeming</p><p>Lee:desktop  tusm$  rmdir  leeming</p><p>Lee:desktop  tusm$  |</p><h4 id="6-rm一-Remove"><a href="#6-rm一-Remove" class="headerlink" title="6.rm一 Remove"></a>6.rm一 Remove</h4><p>rm会删除给定文件</p><p>|  Lee:leeming tusm$  ls  1.html   2.html</p><p>|  Lee:leeming tusm$  rm 1.html</p><p>|  Lee: leeming tusm$  ls  2. html</p><p>Lee:leeming tusm$  |</p><h4 id="7-cp–Copy"><a href="#7-cp–Copy" class="headerlink" title="7.cp–Copy"></a>7.cp–Copy</h4><h5 id="cp命令对文件进行复制"><a href="#cp命令对文件进行复制" class="headerlink" title="cp命令对文件进行复制"></a>cp命令对文件进行复制</h5><p>Lee:desktop tusm$ cd leeming</p><p>Lee:leeming tusm$ ls</p><p>2.html</p><p>Lee:leeming tusn$  cd   ../james</p><p>Lee:iames tusn$ ls</p><p>Lee:james tusn$ cd   ../leening</p><p>Lee:leeming tusn$ cp 2.htmt   ../jamet</p><p>Lee:leeming tusn$ cd ../james</p><p>Lee:james tusn$ ls</p><p>2.html</p><p>Lee:james tusn$   |</p><h4 id="8-mv-Move"><a href="#8-mv-Move" class="headerlink" title="8.mv- Move"></a>8.mv- Move</h4><h5 id="mv命令对文件或文件夹进行移动，如果文件或文件夹存在于当前工作目录，还可以对文件或文件夹进行重命名"><a href="#mv命令对文件或文件夹进行移动，如果文件或文件夹存在于当前工作目录，还可以对文件或文件夹进行重命名" class="headerlink" title="mv命令对文件或文件夹进行移动，如果文件或文件夹存在于当前工作目录，还可以对文件或文件夹进行重命名"></a>mv命令对文件或文件夹进行移动，如果文件或文件夹存在于当前工作目录，还可以对文件或文件夹进行重命名</h5><p> Lee:james tusm$ cd ../leeming</p><p>Lee: leeming tusm$ ls</p><p>3.html</p><p>Lee:leeming tusm$ m 3.htmt ../james </p><p>Lee:leeming tusm$ cd  ../james</p><p>2.html 3.htal Lee:james tusm$  ls</p><p>Lee:james tusm$</p><h4 id="9-cet-concatenate-and-print-files"><a href="#9-cet-concatenate-and-print-files" class="headerlink" title="9.cet- concatenate and print files"></a>9.cet- concatenate and print files</h4><h5 id="cat于在标准输出-监控器或屏幕-上查看文件内容"><a href="#cat于在标准输出-监控器或屏幕-上查看文件内容" class="headerlink" title="cat于在标准输出(监控器或屏幕)上查看文件内容"></a>cat于在标准输出(监控器或屏幕)上查看文件内容</h5><p>Lee:james tusm$  cat 3.html</p><!DOCTYPE htmL><html><head><h4 id="10-tail-print-TAIL-from-last"><a href="#10-tail-print-TAIL-from-last" class="headerlink" title="10.tail - print TAIL(from last)"></a>10.tail - print TAIL(from last)</h4><h5 id="ail默认在标准输出上显示给定文件的最后10行内容，可以使用tail-N指定在标准输出上显示文件的最后N行内容。"><a href="#ail默认在标准输出上显示给定文件的最后10行内容，可以使用tail-N指定在标准输出上显示文件的最后N行内容。" class="headerlink" title="ail默认在标准输出上显示给定文件的最后10行内容，可以使用tail-N指定在标准输出上显示文件的最后N行内容。"></a>ail默认在标准输出上显示给定文件的最后10行内容，可以使用tail-N指定在标准输出上显示文件的最后N行内容。</h5><p>Lee-3:leeming tusm$ tail demo.rtf</p><p>{\rtf1\ansi\ansicpg936\cocoartf1504</p><p>{\fonttbl\f0\fswiss\fcharset0 Helvetica:}</p><p>{\colortbl;\red255\green255\blue255;}</p><h4 id="11-grep"><a href="#11-grep" class="headerlink" title="11.grep"></a>11.grep</h4><p>grep 在给定的文件中搜寻指定的字符串。grep– 在搜寻时会忽略字符串的大小写，而grep-r </p><p>Lee-3: leeming tusm$ grep content demo.rtf</p><p>\f0\fs24 \cf0 this is content}</p><p>Lee-3: leeming tusm$   |</p><h4 id="12-find"><a href="#12-find" class="headerlink" title="12.find"></a>12.find</h4><h5 id="这个命令会在给定位素搜寻与条件匹配的文件。你可以使用-find-name-的-name-选项来进行区分大小写的搜寻。find-i-name-莱进行不区分大小写的搜寻。"><a href="#这个命令会在给定位素搜寻与条件匹配的文件。你可以使用-find-name-的-name-选项来进行区分大小写的搜寻。find-i-name-莱进行不区分大小写的搜寻。" class="headerlink" title="这个命令会在给定位素搜寻与条件匹配的文件。你可以使用  find-name  的  -name  选项来进行区分大小写的搜寻。find-i name  莱进行不区分大小写的搜寻。"></a>这个命令会在给定位素搜寻与条件匹配的文件。你可以使用  find-name  的  -name  选项来进行区分大小写的搜寻。find-i name  莱进行不区分大小写的搜寻。</h5><p>Lee-3:leeming tusm$ find demo.rtf</p><p>deno.rtf</p><p>Lee-3:leeming tusm$  find . -iname DEMO.rtf</p><p>./demo.rtf</p><p>Lee-3:leening tusm$  find . name demo.rtf</p><p>./demo.rtf</p><h4 id="13-tar"><a href="#13-tar" class="headerlink" title="13.tar"></a>13.tar</h4><h5 id="tar命令能创建、查看和提取tar压缩文件。tar-cvf-是创建对应压缩文件，tar-tvf-来查看对应压缩文件，tar-xvf-来提取对应压缩文件。"><a href="#tar命令能创建、查看和提取tar压缩文件。tar-cvf-是创建对应压缩文件，tar-tvf-来查看对应压缩文件，tar-xvf-来提取对应压缩文件。" class="headerlink" title="tar命令能创建、查看和提取tar压缩文件。tar  -cvf  是创建对应压缩文件，tar  -tvf  来查看对应压缩文件，tar  -xvf  来提取对应压缩文件。"></a>tar命令能创建、查看和提取tar压缩文件。tar  -cvf  是创建对应压缩文件，tar  -tvf  来查看对应压缩文件，tar  -xvf  来提取对应压缩文件。</h5><p>Lee-3:leeming tusm$  tar -cvf tarOne.tar demo.rtf </p><p>a  demo.rtf</p><p>Lee-3:leeming tusm$  ls</p><p>demo.rtf    tarOne.tar</p><p>Lee-3:leeming   tusm$  </p><p>Lee-3:leeming   tusm$ tar-tvf tar0ne.tar</p><p>-rw-r–r– 0 tusm   staff 357 10 24 08:55 ./. demo.rtf</p><p>-rw-r–r– 0 tusm   staff 383 10 24 08:55 demo.rtf</p><p>Lee-3:leeming   tusm$   |</p><h4 id="14-gzip"><a href="#14-gzip" class="headerlink" title="14.gzip"></a>14.gzip</h4><h5 id="gzip-命令创建和提取-gzip-压缩文件，还可以用-gzip-d-来提取压缩文件。"><a href="#gzip-命令创建和提取-gzip-压缩文件，还可以用-gzip-d-来提取压缩文件。" class="headerlink" title="gzip  命令创建和提取  gzip  压缩文件，还可以用  gzip-d 来提取压缩文件。"></a>gzip  命令创建和提取  gzip  压缩文件，还可以用  gzip-d 来提取压缩文件。</h5><p>Lee-3:leeming tusm$ gzip demo.rtf </p><p>Lee-3:leeming tusms ls</p><p>demo.rtf.gz       tarOne.tar</p><p>Lee-3:leeming tusm$ </p><h4 id="15-unzip"><a href="#15-unzip" class="headerlink" title="15.unzip"></a>15.unzip</h4><h5 id="对gzip文档进行解压。在解压之前，可以使用-unzip-I-命令查看文件内容"><a href="#对gzip文档进行解压。在解压之前，可以使用-unzip-I-命令查看文件内容" class="headerlink" title="对gzip文档进行解压。在解压之前，可以使用  unzip-I  命令查看文件内容"></a>对gzip文档进行解压。在解压之前，可以使用  unzip-I  命令查看文件内容</h5><p>Lee-3:leeming tusm$ ls</p><p>demo.rtt    deno.rtf.gz    demo.rtizip    tarOne.tar</p><p>Lee-3: leeming tusm$ unzip deno.rtf.zip </p><p>Archive:    demo.rtf.zip</p><p>replace demo.rtf? [y]es，[n]o，[A]ll，[N]one, [r]ename: y </p><p>​      inflating: demo.rtf </p><p>Lee-3:leeming tusm$</p><h4 id="16-help"><a href="#16-help" class="headerlink" title="16.help"></a>16.help</h4><p>help会在终端列出所有可用的命令可以使用任何命令的h或help选项来查看该命令的具体用法。图就省略啦，会有详细列表显示出来的。</p><h4 id="17-ping"><a href="#17-ping" class="headerlink" title="17.ping"></a>17.ping</h4><h5 id="ping通过发送数据包ping远程主机-服务器-，常用与检测网络连接和服务器状态"><a href="#ping通过发送数据包ping远程主机-服务器-，常用与检测网络连接和服务器状态" class="headerlink" title="ping通过发送数据包ping远程主机(服务器)，常用与检测网络连接和服务器状态"></a>ping通过发送数据包ping远程主机(服务器)，常用与检测网络连接和服务器状态</h5><p> Lee-3:~   tusm$   ping     www . baidu .com</p><p>PING   www . a . shifen . com  (220 181111.188):56 data bytes</p><p>64 bytes from 220.181.111.188: icmp_seq=0 ttl=54 time=21.355 ms</p><h4 id="18-su–Switch-User"><a href="#18-su–Switch-User" class="headerlink" title="18.su–Switch User"></a>18.su–Switch User</h4><h5 id="su用于切换不同的用户。即使没有使用密码，超级用户也能切换到其它用户"><a href="#su用于切换不同的用户。即使没有使用密码，超级用户也能切换到其它用户" class="headerlink" title="su用于切换不同的用户。即使没有使用密码，超级用户也能切换到其它用户"></a>su用于切换不同的用户。即使没有使用密码，超级用户也能切换到其它用户</h5><p>Lee-3:~ tusms su lee  </p><p>Password: </p><p>bash-3.2$</p><h5 id="tar打包压缩"><a href="#tar打包压缩" class="headerlink" title="tar打包压缩"></a>tar打包压缩</h5><p>tar-jcf /root/Desktop/1901class.tar.bz2 1901class/</p><p>-j  使用bzip2压缩工具压缩</p><p>-z  使用gzip压缩工具压缩</p><p>-c  create创建</p><p>-f  后面跟新建的文件名</p><p>ter  -tf   /root/Desktop/19class. tar.gz</p><p>-t  不解压维查看文件内容</p><p>tar  -xf   1901class.tar.gz -C /opt</p><p>-x  解压缩并解包</p><p>-C  指定压路径</p><h5 id="VIM命令练习"><a href="#VIM命令练习" class="headerlink" title="VIM命令练习"></a>VIM命令练习</h5><p>1.在/tmp目录中建立一个名为man.config的文件</p><p>2.在/tmp/man.config文件中调用/etc/man.config的内容，并删除第一行空白行   gg跳转第一行，dd删除行</p><p>3.设定显示行号   set nu (命令行模式)</p><p>4.移动到第58行并且向右移动40个字符会看到/dir/bin/foo   命令行模式 58G 40-&gt;</p><p>5.移动到第一行并向下搜索bzip2字符串出现在137行  /bzip2向下搜索关键字</p><p>6.将50-100行小写的man替换成大写的MAN  命令行模式:50.100s/man/MAN/g</p><p>7.替换完成后恢复  u</p><p>8.复制65-73行内容并且粘贴到最后一行下面 :65G 9yy G p</p><p>9.删除21-42行内容 :21,42 d</p><p>10.将文件另存为man.test:   w  man.test</p><p>11.到27行删除15个字符如成功应该光标停留在you want位置 27G 15x</p><p>12.在第一行上面新增一行内容为1 am a simple student gg  i</p><p>13.储存并退出   wq</p><h3 id="LINUX系统用户及用户组"><a href="#LINUX系统用户及用户组" class="headerlink" title="LINUX系统用户及用户组"></a>LINUX系统用户及用户组</h3><p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这介账号的身份进入系统。</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问:另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p><p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p><p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录</p><h4 id="实现用户账号的管理，要完成的工作主要有如下几个方面"><a href="#实现用户账号的管理，要完成的工作主要有如下几个方面" class="headerlink" title="实现用户账号的管理，要完成的工作主要有如下几个方面:"></a>实现用户账号的管理，要完成的工作主要有如下几个方面:</h4><ul><li><p><input disabled="" type="checkbox">  用户账号的添加、删除与修改</p></li><li><p><input disabled="" type="checkbox">  用户口令的管理。</p></li><li><p><input disabled="" type="checkbox">  用户组的管理</p></li></ul><p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除</p><p>添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录ShelI等资源。</p><p>刚添加的账号是被锁定的，无法使用。</p><p>1、添加新的用户账号</p><ul><li><p>使用  useradd  命令，其语法如下: useradd   选项   用户名</p></li><li><p>实例# useradd   -d  /home/sam -m sam</p></li><li><p>此命令创建了一个用户  sam，其中  -d  和  -m  选项用来为登录名  sam  产生一个主目录/home/sam(/home为默认的用户主目录所在的父目录)</p></li><li><p>增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow./etc/group等。</p></li><li><p>Linux提供了集成的系统管理工具  userconf，它可以用来对用户账号进行统一管理。</p></li></ul><p>2、删除帐号</p><ul><li><p>如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。</p></li><li><p>删除一个已有的用户账号使用userdel命令，其格式如下:</p></li><li><p>userdel 选项 用户名</p></li><li><p>常用的选项是  -r  ，它的作用是把用户的主目录一起删除。例如:</p></li><li><p># userdel -r sam</p></li><li><p>此命令删除用户sam在系统文件中(主要是/etc/passwd，/etc/shadow，/etc/group等)的记录，同时删除用户的主目录。</p></li></ul><p>3、修改帐号</p><ul><li><p>修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等</p></li><li><p>修改已有用户的信息使用usermod命令，其格式如下:</p></li><li><p>usermod 选项 用户名</p></li><li><p>常用的选项包括  -c，-d， -m， -g，-G，-s， -u以及-o等，这些选项的意义与  useradd  命令中的选项一样，可以为用户指定新的资源值</p></li><li><p>另外，有些系统可以使用选项:  -I  新用户名</p></li><li><p>这个选项指定一个新的账号，即将原来的用户名改为新的用户名。</p></li><li><p>例如:</p></li><li><p># usermod -g /bin/kch -d /home/z-g developer sam</p></li><li><p>此命令将用户  sam  的登录  Shell  修改为  ksh，主目录改为  /home/z，用户组改为  developer。</p></li></ul><p>4、用户口令的管理</p><p>用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用。必须为其指定口令后才可以使用，即使是指定空口令。</p><p>指定和修改用户口令的Shel1命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为:</p><p>passwd 选项 用户名</p><ul><li><p>可使用的选项:</p><ul><li><p>-I   锁定口令，即禁用账号。</p></li><li><p>-u  口令解锁。</p></li><li><p>-d  使账号无口令。</p></li><li><p>-f   强迫用户下次登录时修改口令。</p></li></ul></li></ul><p>如果默认用户，则修改当前用户的口令。</p><ul><li><p>例如，假设当前用户是sam，则下面的命令修改自己的口令：</p><ul><li><p>$   password</p></li><li><p>Old   password:********</p></li><li><p>New  password:********</p></li><li><p>Re-enter   new   password:********</p></li></ul></li><li><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><ul><li><p>#   password   sam</p></li><li><p>New  password:********</p></li><li><p>Re-enter   new   password:********</p></li></ul></li><li><p>普通用户修改自己的口令时，password命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p></li><li><p>为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同</p></li><li><p>为用户指定空口令时，执行下列形式的命令:</p></li><li><p>#passwd -d sam</p></li><li><p>此命令将用户sam的口令删除，这样用户sam下一次登录时，系统就不再允许该用户登录了。</p></li><li><p>passwd命令还可以用-I(lock)选项锁定某一用户，使其不能登录，例如:</p></li><li><p>#  passwd  -I   sam</p></li></ul><h4 id="二、用户组"><a href="#二、用户组" class="headerlink" title="二、用户组"></a>二、用户组</h4><p>每个用户都有一个用户组，系统可以对一个用户组电的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建</p><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。</p><h5 id="1、增加一个新的用户组使用groupadd命令。其格式如下"><a href="#1、增加一个新的用户组使用groupadd命令。其格式如下" class="headerlink" title="1、增加一个新的用户组使用groupadd命令。其格式如下:"></a>1、增加一个新的用户组使用groupadd命令。其格式如下:</h5><p> groupadd 选项 用户组</p><p>可以使用的选项有:</p><ul><li><p>-g   GID   指定新用户组的组标识号(GID)</p></li><li><p>-o 一般与  -g  选项同时使用，表示新用户组的  GID  可以与系统已有用户组的  G1D  相同。</p></li></ul><h5 id="2、如果要删除一个已有的用户组，使用aroupdel命令，其格式如下"><a href="#2、如果要删除一个已有的用户组，使用aroupdel命令，其格式如下" class="headerlink" title="2、如果要删除一个已有的用户组，使用aroupdel命令，其格式如下:"></a>2、如果要删除一个已有的用户组，使用aroupdel命令，其格式如下:</h5><p>Rroupde!用户组</p><p>例如:</p><p>#  groupdel groupl</p><p>此命令从系统中删除组  groupl</p><h5 id="3、修改用户组的属性使用groupmod命令。其语法如下"><a href="#3、修改用户组的属性使用groupmod命令。其语法如下" class="headerlink" title="3、修改用户组的属性使用groupmod命令。其语法如下:"></a>3、修改用户组的属性使用groupmod命令。其语法如下:</h5><p>groupmod  选项   用户组</p><p>常用的选项有:</p><p>-g   GID  为用户组指定物的组标识号</p><p>-o  与  -g  同时使用，用户组的新  G1D  可以与系统已有用户组的GID相同。</p><p>-n   新用户组  将用户组的名字改为新名字</p><h5 id="实例1"><a href="#实例1" class="headerlink" title="实例1:"></a>实例1:</h5><p># groupadd   group1</p><p>此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。</p><h5 id="实例2"><a href="#实例2" class="headerlink" title="实例2:"></a>实例2:</h5><p># groupadd  -g 101 group2</p><p>此命令向系统中增加了一个新组group2,同时指定新组的组标识号是101。</p><h5 id="2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下"><a href="#2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下" class="headerlink" title="2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下:"></a>2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下:</h5><p>groupdel    用户组</p><p>例如:</p><p># groupdel group1</p><p>此命令从系统中删除组group1.</p><h5 id="3、修改用户组的属性使用groupmod命令。其语法如下-1"><a href="#3、修改用户组的属性使用groupmod命令。其语法如下-1" class="headerlink" title="3、修改用户组的属性使用groupmod命令。其语法如下:"></a>3、修改用户组的属性使用groupmod命令。其语法如下:</h5><p>groupmod 选项 用户组</p><p>常用的选项有:</p><p>-g GID 为用户组指定新的组标识号</p><p>-o  与  -g  选项同时使用，用户组的新  GID  可以与系统已有用户组的  GID  相同</p><p>-n  新用户组将用户组的名字改为新名字</p><p>实例1:</p><ul><li><p># groupmod -g 102 group2</p></li><li><p>此命令将组group2的组标识号修改为102.</p></li></ul><p>实例2:</p><ul><li><p> groupmod  -g  10000  -n  group3   group2</p></li><li><p> 此命令将组group2的标识号改为10000，组名修改为group3。</p></li></ul><h5 id="4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如"><a href="#4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如" class="headerlink" title="4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如:"></a>4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如:</h5><p>$ newgrp root</p><p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。</p><h3 id="LINUX权限管理"><a href="#LINUX权限管理" class="headerlink" title="LINUX权限管理"></a>LINUX权限管理</h3><h4 id="如何查看权限"><a href="#如何查看权限" class="headerlink" title="如何查看权限"></a>如何查看权限</h4><p>d  rwx r-x r-x . root(文件的所属者)root(文件的所属组) 目录</p><p>-   rw-   r–  r– . root(文件的所属者)root(文件的所属组) 文件</p><p>字段1:表示文件的类型  d  目录 - 文件  I  符号链接  c  字符型设备    b block块设备</p><p>字段2:文件所属者的权限</p><p>​           r                                       w                                         x                          </p><p>目录     列出目录内容     添加删除目录中的文件     进入该目录</p><p>文件                           读                    写                       执行</p><p>字段3:文件所属组的权限</p><p>字段4:其他用户的权限(既不是文件的所属者，也不在文件的所属组中)</p><p>chmod  a=——目录</p><p>chmod  g=rwx 目录</p><p>chmod  o=rx 目录</p><p>修改文件属性</p><p>chmod  对象  运算符号  权限  文件或者目录</p><p>对象:  u(user所属者)   g(goup所属组)  o (other其他) a(all所有)</p><p>运算符号:          +赋权           -撤权               = 指定权限</p><h4 id="三个特殊权限"><a href="#三个特殊权限" class="headerlink" title="三个特殊权限"></a>三个特殊权限</h4><h5 id="t-粘滞位-只对目录有效"><a href="#t-粘滞位-只对目录有效" class="headerlink" title="t 粘滞位       (只对目录有效)"></a>t 粘滞位       (只对目录有效)</h5><h6 id="在目录中建立的文件只有文件的所属者可以删除。"><a href="#在目录中建立的文件只有文件的所属者可以删除。" class="headerlink" title="在目录中建立的文件只有文件的所属者可以删除。"></a>在目录中建立的文件只有文件的所属者可以删除。</h6><p>chmod         777       /tmp/test</p><p>chmod      o+t    /tmp/test</p><p>方法2</p><p>chmod          1777     /tmp/test</p><h5 id="sgid-只对目录有效"><a href="#sgid-只对目录有效" class="headerlink" title="sgid(只对目录有效)"></a>sgid(只对目录有效)</h5><h6 id="在目录中建立的文件或者目录属组会继承父目录的属组"><a href="#在目录中建立的文件或者目录属组会继承父目录的属组" class="headerlink" title="在目录中建立的文件或者目录属组会继承父目录的属组"></a>在目录中建立的文件或者目录属组会继承父目录的属组</h6><p>chmod 777 /tmp/test</p><p>chmod g+s /tmp/test</p><h6 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h6><p>chwod 2777 /tmp/test</p><h5 id="suid-只对可执行文件有效"><a href="#suid-只对可执行文件有效" class="headerlink" title="suid(只对可执行文件有效)"></a>suid(只对可执行文件有效)</h5><p>当一个可执行文件具有suid权限，无论谁运行该文件，谁就具有该文件所属者的权限。</p>]]></content>
      
      
      <categories>
          
          <category> 网鼎杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 计算机基础 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android体系结构</title>
      <link href="2021/08/28/Android%E9%80%86%E5%90%91/1.Android%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
      <url>2021/08/28/Android%E9%80%86%E5%90%91/1.Android%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="Android历史版本"><a href="#Android历史版本" class="headerlink" title="Android历史版本"></a>Android历史版本</h1><table><thead><tr><th>名称</th><th>版本名</th><th>API等级</th></tr></thead><tbody><tr><td>Android 11</td><td>11.0</td><td>30</td></tr><tr><td>Android 10 [^1]</td><td>10.0</td><td>29</td></tr><tr><td>Android Pie</td><td>9.0</td><td>28</td></tr><tr><td>Android Oreo</td><td>8.0-8.1</td><td>26-27</td></tr><tr><td>Android Nougat</td><td>7.0-7.1.2</td><td>24-25</td></tr><tr><td>Android Marshmallow</td><td>6.0-6.0.1</td><td>23</td></tr><tr><td>Android Lollipop</td><td>5.0-5.1.1</td><td>21-22</td></tr><tr><td>Android KitKat</td><td>4.4-4.4.4</td><td>19-20</td></tr><tr><td>Android Jelly Bean</td><td>4.1-4.3</td><td>16-18</td></tr><tr><td>Android Ice Cream Sandwich</td><td>4.0.1-4.0.4</td><td>14-15</td></tr><tr><td>Android Honeycomb</td><td>3.0-3.2</td><td>11-13</td></tr><tr><td>Android Gingerbread</td><td>2.3-2.3.7</td><td>9-10</td></tr><tr><td>Android Froyo</td><td>2.2</td><td>8</td></tr><tr><td>Android Eclair</td><td>2.0-2.1</td><td>5-7</td></tr><tr><td>Android Donut</td><td>1.6</td><td>4</td></tr><tr><td>Android Cupcake</td><td>1.5</td><td>3</td></tr><tr><td>-</td><td>1.1</td><td>2</td></tr><tr><td>-</td><td>1.0</td><td>1</td></tr></tbody></table><p>从Android 5.0（Android L）开始，Android 系统开始使用ART虚拟机，Android 系统也开始分 32 位版本和 64 位版本</p><h1 id="Android体系结构"><a href="#Android体系结构" class="headerlink" title="Android体系结构"></a>Android体系结构</h1><p><img src="https://z3.ax1x.com/2021/08/28/h3whqA.jpg" alt="原版"></p><p><img src="https://z3.ax1x.com/2021/08/29/hGjSzt.jpg" alt="中文对照版"></p><p>这张图分为四个部分，Linux Kernel，Libraries，Application Framework，Application。</p><p>最下方的 Linux 是一个系统，安卓底层所使用的就是Linux内核。Linux在设备中提供了一些驱动，比如摄像头（Camera Driver），USB（USB Driver），蓝牙（Bluetooth Driver），WiFi（WIFI Driver），电池管理（Power Management），键盘（Keypad Driver）等</p><p>Libraries是一个函数库，提供了很多标准的函数库，类似于C代码库libc，本地数据库SQLlite，SSL<a href="%5BSSL%EF%BC%88%E5%AE%89%E5%85%A8%E5%A5%97%E6%8E%A5%E5%AD%97%E5%8D%8F%E8%AE%AE%EF%BC%89%5D(https://baike.baidu.com/item/ssl/320778?fr=aladdin)">^2</a>，处于Libraries右边的 Android Runtime[^3]，Dalvik[^4]虚拟机，在 Android5.0 之前他的程序（apk）都是运行在 DVM 里面的，也就是这个 Dalvik[^4]虚拟机，在5.0之后运行在 ART[^3] 虚拟机，除了 ART 虚拟机之外它还要配合一个安卓的 Runtime 去执行它的程序。</p><p>在往上便是 Application Framework 可以理解成 Android 系统开发人员提供的 API ，方便做代码上的一些操作。比方通知管理，包管理，界面管理等等。</p><p>在往上的 Application 就是应用层了</p><hr><p>[^1]: <a href="https://baike.baidu.com/reference/1578450/31a4pqYtHYs03_m6Rr1RLhAkFom3VPp4rwFh3Wg6xykWWfdQtgfdUtpezXoquMx-RC1YS_C5WmvNOimvPzJ8rfOzSIA6g_TULlePwGDiJojlo2CrcGIxtA">Android Q 不叫 Q ，正式命名为Android 10</a></p><p>[^3]: [Android Runtime](<a href="https://baike.baidu.com/item/Android">https://baike.baidu.com/item/Android</a> runtime/5697032?fr=aladdin)<br>[^4]: <a href="https://baike.baidu.com/item/Dalvik/1996430?fr=aladdin">Dalvik</a></p>]]></content>
      
      
      <categories>
          
          <category> Android逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 基础教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬件工程师基础-基础元器件和电阻</title>
      <link href="2021/08/26/%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%9F%BA%E7%A1%80/%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%9F%BA%E7%A1%80-%E5%9F%BA%E7%A1%80%E5%85%83%E5%99%A8%E4%BB%B6%E5%92%8C%E7%94%B5%E9%98%BB/"/>
      <url>2021/08/26/%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%9F%BA%E7%A1%80/%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%9F%BA%E7%A1%80-%E5%9F%BA%E7%A1%80%E5%85%83%E5%99%A8%E4%BB%B6%E5%92%8C%E7%94%B5%E9%98%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件工程师入门之基础元器件"><a href="#硬件工程师入门之基础元器件" class="headerlink" title="硬件工程师入门之基础元器件"></a>硬件工程师入门之基础元器件</h1><h2 id="电阻器"><a href="#电阻器" class="headerlink" title="电阻器"></a>电阻器</h2><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.best-digi.com%2Fwebsites%2F716%2Fupload%2Fimage%2F20161018%2Fe20161018112338_269597.png&refer=http%3A%2F%2Fwww.best-digi.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1632582498&t=860c836bb86c23d49287627dbdbd297c" alt="图片来源于网络"></p><p>包含碳膜电阻，金属膜电阻，贴片电阻，柱形贴片电阻，电阻排，光敏电阻，压敏电阻，水泥电阻，功率电阻，线绕陶磁电阻等等</p><h3 id="定义、特性及参数："><a href="#定义、特性及参数：" class="headerlink" title="定义、特性及参数："></a>定义、特性及参数：</h3><h4 id="什么是电阻："><a href="#什么是电阻：" class="headerlink" title="什么是电阻："></a>什么是电阻：</h4><ul><li><p>1、电压比电流是电阻：R=U/I   单位：Ω</p></li><li><p>2、电阻的表示方法和测量方法：</p><ul><li>表示方法：直标法和色标法</li><li>测量方法：万用表和数字电桥</li></ul></li></ul><h3 id="电阻的功能"><a href="#电阻的功能" class="headerlink" title="电阻的功能"></a>电阻的功能</h3><h3 id="如何选择电阻"><a href="#如何选择电阻" class="headerlink" title="如何选择电阻"></a>如何选择电阻</h3><h2 id="电容器"><a href="#电容器" class="headerlink" title="电容器"></a>电容器</h2><h2 id="电感器"><a href="#电感器" class="headerlink" title="电感器"></a>电感器</h2>]]></content>
      
      
      <categories>
          
          <category> 硬件工程师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 硬件工程师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7、fsinfo扇区数据结构</title>
      <link href="2021/08/24/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/7%E3%80%81fsinfo%E6%89%87%E5%8C%BA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>2021/08/24/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/7%E3%80%81fsinfo%E6%89%87%E5%8C%BA%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="FSINFO扇区的数据结构"><a href="#FSINFO扇区的数据结构" class="headerlink" title="FSINFO扇区的数据结构"></a>FSINFO扇区的数据结构</h1><h2 id="FSINFO扇区数据结构"><a href="#FSINFO扇区数据结构" class="headerlink" title="FSINFO扇区数据结构"></a>FSINFO扇区数据结构</h2><ul><li>在FAT32的保留区中除了DBR还有个FSINFO信息区，用来记录文件系统中空闲簇数和下一个可用簇号</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
            <tag> FAT32文件系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、FAT32文件系统结构</title>
      <link href="2021/08/22/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/6%E3%80%81FAT32%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
      <url>2021/08/22/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/6%E3%80%81FAT32%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="6、FAT32文件系统结构"><a href="#6、FAT32文件系统结构" class="headerlink" title="6、FAT32文件系统结构"></a>6、FAT32文件系统结构</h1><p>目前fat32文件系统一般在U盘或者内存卡中比较常见，本机硬盘或者移动硬盘现在一般都是比较大的，所以都是采用ntfs文件系统，也有个别属于fat32文件系统。</p><h2 id="初识文件系统"><a href="#初识文件系统" class="headerlink" title="初识文件系统"></a>初识文件系统</h2><ul><li>文件系统就是对数据存储进行管理的一种机制</li><li>格式化的目的就是建立文件系统从而管理文件</li><li>我们平时看到的NTFS，FAT32，ExFat的分区格式都是文件系统，每种文件系统都有不同的管理方式。</li><li>NTFS，FAT32，ExFat文件系统的第一扇区叫DBR系统引导扇区</li></ul><h2 id="FAT32文件系统结构"><a href="#FAT32文件系统结构" class="headerlink" title="FAT32文件系统结构"></a>FAT32文件系统结构</h2><p><img src="https://z3.ax1x.com/2021/08/23/hCGOUA.png"><br>fat32文件系统<br>第一部分：DBR<br>第二部分：保留区（保留区有备份的DBR，在六号扇区）<br>第三部分：FAT表1<br>第四部分：FAT表2<br>第五部分：数据区（数据区的第一个簇是根目录）<br><strong>这些区域都是连续不间断的</strong></p><h2 id="FAT32DBR的数据结构"><a href="#FAT32DBR的数据结构" class="headerlink" title="FAT32DBR的数据结构"></a>FAT32DBR的数据结构</h2><p><img src="https://z3.ax1x.com/2021/08/23/hPZGrt.png"></p><p>0号扇区的最后一个字节一定是55 AA，不然文件有可能损坏打不开。</p><h2 id="重要概念"><a href="#重要概念" class="headerlink" title="重要概念"></a>重要概念</h2><ul><li>扇区：扇区是硬盘读写的基本单位，一般情况下每扇区的大小是512字节。在硬盘中每个扇区都有自己的编号，从零开始编号。</li><li>簇：文件系统中用簇来做数据存储的单位。</li><li>簇大小是2的整数次幂，最大是128扇区每簇</li><li>FAT表：文件分配表（File Allocation Table）用来描述文件系统内存储单元的分配状态及文件内容的前后链接关系的表格</li><li>根目录的起始簇号：也是数据区的开始位置（一般为2号簇）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
            <tag> FAT32文件系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5、数据的存储形态</title>
      <link href="2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/5%E3%80%81%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E5%BD%A2%E6%80%81/"/>
      <url>2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/5%E3%80%81%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E5%BD%A2%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="5、数据的存储形态"><a href="#5、数据的存储形态" class="headerlink" title="5、数据的存储形态"></a>5、数据的存储形态</h1><hr><h2 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h2><p>在电路中可以有两种不同的电平(高电平、低电平)，这两种电平可以用0和1表示。但如果要制造出10种不同的电平来表示10进制的符号是很难的。计算机只能识别’0’和’1’，也就是二进制，逢二进一。每一个二进制位表示一个位’bit’，每和’1’两个数，一个字节有8位’bit’也就是说一个字节有8位二进制数。一个字节最大表示11111111b=255</p><h2 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a>十进制</h2><p>是我们最常用的进制，也就是逢十进一，10进制使用0、1、2、3、4、5、6、7、8、9十个数表示。十进制的后缀为 d，不写后缀默认为十进制。</p><h2 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h2><p>十六进制就是逢16进1。用0、1、2、3、4、5、6、7、8、9、A、B、C、D、E、F表示，后缀用H表示也可以用前缀0X表示</p><p>·AH=0xA=10<br>·0x10=10000b=16</p><h2 id="数据的存储格式"><a href="#数据的存储格式" class="headerlink" title="数据的存储格式"></a>数据的存储格式</h2><p>由于一个字节最大只能表示255个数。这是远远不够的，所以计算机会用2个，3个，4个甚至8个字节来表示数值的大小。对于使用多个字节表示数值的情况，就存在顺序的问题。计算机中有两种顺序存储数值。<br>Big-endian：也叫“大头位序”。高位在左，低位在右。<br>Little-endian：也叫“小头位序”。低位在左，高位在右。</p><h2 id="数据存储格式"><a href="#数据存储格式" class="headerlink" title="数据存储格式"></a>数据存储格式</h2><p><strong>Little-endian格式</strong><br>FAT32、NTFS、ExFAT、Extx文件系统<br>DOS分区表</p><p><strong>Big-endian格式</strong><br>HFS文件系统（Mac OS文件系统）<br>EXT3的日志文件（Linux操作系统）</p><h2 id="数据解释器"><a href="#数据解释器" class="headerlink" title="数据解释器"></a>数据解释器</h2><p>在数据解释器中右击可得选项卡，点击选项。</p><p><img src="https://z3.ax1x.com/2021/08/19/fqJ5WR.png"></p><p>如果是Big-endian格式，则要勾选Big-endian的选项框。数据解释器Big-endian选项框默认关闭。</p><p><img src="https://z3.ax1x.com/2021/08/19/fqYSSI.png"></p><h2 id="分区表项"><a href="#分区表项" class="headerlink" title="分区表项"></a>分区表项</h2><p>00 78 CA 73 这四个字节是EXT2文件系统的起始扇区号，也就是说，这四个字节表示的意思是和EXT2分区的第一个扇区的数值是相等的，把鼠标的光标放在00的位置上可以看到</p><p><img src="https://z3.ax1x.com/2021/08/19/fqYvHU.png"></p><p>Little-endian是小头位序，它的数据存储格式是低位在左，高位在右。打开电脑自带计算器，转换成程序员模式然后选择十六进制。按照低位在左，高位在右的顺序，将四个字节按顺序排好序。它的实际存储格式应当是73 CA 78 00 。</p><p><img src="https://z3.ax1x.com/2021/08/22/hpAbnS.png"></p><p>当其转换为十六进制时，我们手工算出来的，和Winhex自己解释的，和目录显示区显示的应当是对的上的。</p><p><img src="https://z3.ax1x.com/2021/08/22/hpEF74.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4、通用的数据恢复方法</title>
      <link href="2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/4%E3%80%81%E9%80%9A%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E6%96%B9%E6%B3%95/"/>
      <url>2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/4%E3%80%81%E9%80%9A%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>#通用的数据恢复方法</p><hr><h2 id="按文件类型恢复"><a href="#按文件类型恢复" class="headerlink" title="按文件类型恢复"></a>按文件类型恢复</h2><p>方法：工具-磁盘工具-按文件类型恢复</p><p>这种方法不用管目录是否损坏</p><p>但这样恢复出来的文件没有原来的文件名和目录结构了</p><p>一般用在数据恢复不了的时候才使用这种方法，万不得已不会使用</p><p>一般情况下，先恢复原文件名和目录</p><p><img src="https://z3.ax1x.com/2021/08/18/fTbERA.png"></p><p>点击确定</p><p><img src="https://z3.ax1x.com/2021/08/18/fTbxYQ.png"></p><p>会出现一些文件夹</p><p><img src="https://z3.ax1x.com/2021/08/18/fTqLcR.png"></p><p>按文件类型选择好要恢复的文件并选择要保存的位置，其他的默认，点击确定。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbgEdA.png"></p><p>等待加载。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbfZnS.png"></p><p>加载完成。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbhFUJ.png"></p><p>通过刚才所设置保存的位置打开文件夹可以得到所恢复的文件</p><p><img src="https://z3.ax1x.com/2021/08/19/fb543R.png"></p><h3 id="按文件类型恢复不会按文件名恢复，是根据数据的类型来判断这个数据属于那种文件类型，所有恢复的文件都是按照文件的编号来指定文件名的"><a href="#按文件类型恢复不会按文件名恢复，是根据数据的类型来判断这个数据属于那种文件类型，所有恢复的文件都是按照文件的编号来指定文件名的" class="headerlink" title="按文件类型恢复不会按文件名恢复，是根据数据的类型来判断这个数据属于那种文件类型，所有恢复的文件都是按照文件的编号来指定文件名的"></a>按文件类型恢复不会按文件名恢复，是根据数据的类型来判断这个数据属于那种文件类型，所有恢复的文件都是按照文件的编号来指定文件名的</h3><hr><h2 id="如果这个盘是被格式化的，再用按文件类型来恢复看一下"><a href="#如果这个盘是被格式化的，再用按文件类型来恢复看一下" class="headerlink" title="如果这个盘是被格式化的，再用按文件类型来恢复看一下"></a>如果这个盘是被格式化的，再用按文件类型来恢复看一下</h2><p>先往里边存入文件</p><p><img src="https://z3.ax1x.com/2021/08/19/fb7NMn.png"></p><p>将存放文件的H盘格式化</p><p><img src="https://z3.ax1x.com/2021/08/19/fbHmYF.png"></p><p>默认，点击确定。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbHgfg.png"></p><p>格式化完成之后，可以看到H盘已经成为了空盘</p><p><img src="https://z3.ax1x.com/2021/08/19/fbbeBt.png"></p><p>更新一下磁盘快照，并以同样的方法，选择通过文件类型恢复</p><p><img src="https://z3.ax1x.com/2021/08/19/fbqNMd.png"></p><p>确定</p><p><img src="https://z3.ax1x.com/2021/08/19/fbqjdx.png"></p><p>选择文件类型</p><p><img src="https://z3.ax1x.com/2021/08/19/fbLr01.png"></p><p>因所删除文件不只有RAR压缩文件还有JPEG图片文件，所以也要勾选上JPEG文件，为稳妥起见，将两JPEG文件格式都勾选上。并选择输出文件夹。点击确定。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbOCNV.png"></p><p>等待加载结束跳出确认框</p><p><img src="https://z3.ax1x.com/2021/08/19/fbO0C8.png"></p><p>去所选择文件夹查看所恢复文件。</p><p><img src="https://z3.ax1x.com/2021/08/19/fbXwZR.png"></p><p>可看出，文件名以全部改变</p><p><strong>按文件类型恢复文件主要是需要文件是连续的才可以，也就是说，文件没有碎片才可以恢复，有些经常编辑的文档类的文件恢复出来就有可能是错误的，恢复出来的数据可能会损坏掉。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3、WinHex介绍</title>
      <link href="2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/3%E3%80%81WinHex%E4%BB%8B%E7%BB%8D/"/>
      <url>2021/08/18/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/3%E3%80%81WinHex%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘编辑软件WinHex介绍"><a href="#磁盘编辑软件WinHex介绍" class="headerlink" title="磁盘编辑软件WinHex介绍"></a>磁盘编辑软件WinHex介绍</h1><h3 id="WinHex：是一个十六进制磁盘编辑软件，可以直接从硬盘底层访问并直接编辑硬盘里面的内容。所以可以用它来恢复数据。"><a href="#WinHex：是一个十六进制磁盘编辑软件，可以直接从硬盘底层访问并直接编辑硬盘里面的内容。所以可以用它来恢复数据。" class="headerlink" title="WinHex：是一个十六进制磁盘编辑软件，可以直接从硬盘底层访问并直接编辑硬盘里面的内容。所以可以用它来恢复数据。"></a>WinHex：是一个十六进制磁盘编辑软件，可以直接从硬盘底层访问并直接编辑硬盘里面的内容。所以可以用它来恢复数据。</h3><h2 id="学习要点："><a href="#学习要点：" class="headerlink" title="学习要点："></a><strong>学习要点：</strong></h2><h3 id="如果处于英文状态下，可通过help-setting-Chinese修改成中文"><a href="#如果处于英文状态下，可通过help-setting-Chinese修改成中文" class="headerlink" title="如果处于英文状态下，可通过help-setting-Chinese修改成中文"></a>如果处于英文状态下，可通过help-setting-Chinese修改成中文</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://z3.ax1x.com/2021/08/18/foX1qP.png"></h3><h3 id="如何打开磁盘-（红框框选即为打开磁盘图标）"><a href="#如何打开磁盘-（红框框选即为打开磁盘图标）" class="headerlink" title="如何打开磁盘 （红框框选即为打开磁盘图标）"></a>如何打开磁盘 （红框框选即为打开磁盘图标）</h3><p><img src="https://z3.ax1x.com/2021/08/18/fojc0P.png"></p><h4 id="正常打开（点击以选择要打开的磁盘）"><a href="#正常打开（点击以选择要打开的磁盘）" class="headerlink" title="正常打开（点击以选择要打开的磁盘）"></a>正常打开（点击以选择要打开的磁盘）</h4><p><img src="https://z3.ax1x.com/2021/08/18/foOT3j.png"></p><p>逻辑驱动器：C盘D盘F盘之类的盘符</p><p>物理驱动器：物理主机里的光盘，硬盘，U盘，移动硬盘之类的</p><h4 id="快捷键F9直接打开"><a href="#快捷键F9直接打开" class="headerlink" title="快捷键F9直接打开"></a>快捷键F9直接打开</h4><h3 id="Winhex界面"><a href="#Winhex界面" class="headerlink" title="Winhex界面"></a>Winhex界面</h3><p><img src="https://z3.ax1x.com/2021/08/18/foxvLR.png"></p><p>从上到下依次为工具栏、文件显示区</p><p>下方从左到右依次为偏移字节、十六进制区、字符编码区域（文本字符区）、硬盘或者分区的信息、</p><p>左下角前方为当前扇区数，其后跟着的是总扇区数</p><p>进入之后如果没有显示文件显示区，可在查看选项卡中，找到显示，勾选上目录浏览器。就能正常显示文件显示区了</p><h3 id="磁盘克隆"><a href="#磁盘克隆" class="headerlink" title="磁盘克隆"></a>磁盘克隆</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTYT7d.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fTtaEd.png"></p><p>源盘：需要做镜像的盘（要恢复的盘）</p><p>目标：可以是物理硬盘可以是驱动器是逻辑分区，不论是哪一个都要比源盘大。可以是文件，把源盘做成文件，也可以是一个分区或硬盘。</p><p>遇到坏扇区时跳过的扇区数：数值越小速度越慢，但数据越完整。</p><p>一般来说只能是个NTFS文件系统或者是exfat文件系统，因为fat32文件系统最多只能存放4G的文件，超过4G是存不下来的</p><h3 id="查找十六进制"><a href="#查找十六进制" class="headerlink" title="查找十六进制"></a>查找十六进制</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTUckj.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fTUvjK.png"></p><p>搜索方式是全部搜索，偏移计算是每512个数值当中，从第0个数值开始比较，如果是EB5290，那么就是相等的。如果在其他位置有EB5290，因其有三个字节，所以比较的是第零个，第一个，第二个三个字节</p><p>每个扇区有512个字节，也就是说，其只比较前面三个数值，后面的数值它是不会比较的。</p><p>每行有16个字节</p><h3 id="更新快照"><a href="#更新快照" class="headerlink" title="更新快照"></a>更新快照</h3><p>点击进行磁盘快照，勾选上更新快照，点击确定</p><p><img src="https://z3.ax1x.com/2021/08/18/fTrr2d.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fTsViD.png"></p><p>更新完之后在一般会在文件显示区显示修改后的数据</p><p>修改完分区表或者磁盘参数之后，我们需要让它显示更新完的数据</p><h3 id="查找文本"><a href="#查找文本" class="headerlink" title="查找文本"></a>查找文本</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTcayd.png"></p><p>只能查找英文或者数字的字符，无法查找中文</p><p>一般找文件名会用这个</p><h3 id="转跳扇区"><a href="#转跳扇区" class="headerlink" title="转跳扇区"></a>转跳扇区</h3><p>作用：如果我们确定了分区需要查找的范围的时候，可直接转跳到所查找的扇区</p><p><img src="https://z3.ax1x.com/2021/08/18/fTyV00.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fT6Wa6.png"></p><h3 id="转到偏移量"><a href="#转到偏移量" class="headerlink" title="转到偏移量"></a>转到偏移量</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTcAoV.png"></p><p>一般是在恢复fat32文件系统的fat表的时候我们需要定位某一个fat表，会用到这个转跳到偏移量</p><h3 id="文件比较"><a href="#文件比较" class="headerlink" title="文件比较"></a>文件比较</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTgntf.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fTRkdI.png"></p><p>第一个文件是初始化后的，第二个文件是初始化前的。偏移位置从0开始。</p><p>报告的路径不能为中文。</p><p>第一次点击确定后，比较之后会自动选择全部的字节，再点击确定，开始比较</p><p><img src="https://z3.ax1x.com/2021/08/18/fTROXQ.png"></p><p>等读条结束，即可获得所比较的不同</p><h3 id="初始化不对零号扇区以外的扇区进行操作"><a href="#初始化不对零号扇区以外的扇区进行操作" class="headerlink" title="初始化不对零号扇区以外的扇区进行操作"></a>初始化不对零号扇区以外的扇区进行操作</h3><h3 id="比较的辅助功能"><a href="#比较的辅助功能" class="headerlink" title="比较的辅助功能"></a>比较的辅助功能</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTWjgO.png"></p><p>此功能会把两文件视图拉倒同一窗口，且两窗口同步</p><p><img src="https://z3.ax1x.com/2021/08/18/fTfdaR.png"></p><p>此功能会标记那些字节是不同的，不同字节会有黑色背景。</p><h3 id="按文件类型恢复"><a href="#按文件类型恢复" class="headerlink" title="按文件类型恢复"></a>按文件类型恢复</h3><h3 id="安全擦除"><a href="#安全擦除" class="headerlink" title="安全擦除"></a>安全擦除</h3><p><img src="https://z3.ax1x.com/2021/08/18/fTfOds.png"></p><p>无法恢复</p><p>有数据要彻底删除且不希望被别人恢复可以使用此功能</p>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2、数据恢复环境搭建之虚拟磁盘</title>
      <link href="2021/08/17/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/2%E3%80%81%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B9%8B%E8%99%9A%E6%8B%9F%E7%A3%81%E7%9B%98/"/>
      <url>2021/08/17/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/2%E3%80%81%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B9%8B%E8%99%9A%E6%8B%9F%E7%A3%81%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="WinHex手工恢复数据基础之数据恢复的环境搭建之虚拟磁盘"><a href="#WinHex手工恢复数据基础之数据恢复的环境搭建之虚拟磁盘" class="headerlink" title="WinHex手工恢复数据基础之数据恢复的环境搭建之虚拟磁盘"></a>WinHex手工恢复数据基础之数据恢复的环境搭建之虚拟磁盘</h1><hr><h2 id="为什么要用虚拟磁盘？"><a href="#为什么要用虚拟磁盘？" class="headerlink" title="为什么要用虚拟磁盘？"></a>为什么要用虚拟磁盘？</h2><p><strong>在学习数据恢复时是直接跟硬盘底层打交道的，如果我们直接对本机硬盘操作，不采取其他措施，那么很容易会导致数据丢失或者电脑系统损坏。</strong></p><h2 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h2><p><strong>虚拟磁盘</strong></p><hr><h2 id="虚拟磁盘工具"><a href="#虚拟磁盘工具" class="headerlink" title="虚拟磁盘工具"></a>虚拟磁盘工具</h2><p><strong>win7自带的虚拟磁盘工具</strong></p><p>打开方式：先打开一个磁盘管理</p><p>（右击计算机图标选择管理，再选择磁盘管理）</p><p><img src="https://z3.ax1x.com/2021/08/18/fIUrXF.png"></p><p><img src="https://z3.ax1x.com/2021/08/18/fIU60J.png"></p><p>打开磁盘管理之后首先需要点击箭头所指红色框内任一盘符，以激活磁盘管理</p><p><img src="https://z3.ax1x.com/2021/08/18/fIU56O.png"></p><p>再右击磁盘管理，这样可以创建 VHD（创建和附加虚拟磁盘）</p><p><img src="https://z3.ax1x.com/2021/08/18/fIUOht.png"></p><p>自己找保存路径。动态扩展的创建速度较快，但是会随着存入的数据慢慢变大。固定大小是先创建所指定盘的大小，不论以后存入多少文件，其大小固定不变。</p><p>对有些数据恢复软件来说，动态扩展是不能用的</p><p><img src="https://z3.ax1x.com/2021/08/18/fIaC7j.png"></p><p><strong>虚拟机（VMware）</strong></p><p>如果有需要可自行在网络上下载<a href="https://www.vmware.com/">虚拟机</a>，如非特殊需要，可默认安装</p><p>安装完成之后，因版本不同，所显示的页面可能也不尽相同，单功能大体相似</p><p><img src="https://z3.ax1x.com/2021/08/18/fId5ee.jpg"></p><p>点击主页中的创建新的虚拟机，可直接下一步</p><p><img src="https://z3.ax1x.com/2021/08/18/fIwCYn.png"></p><p>这里安装程序光盘镜像文件,<a href="https://msdn.itellyou.cn/">镜像文件</a>需要从网络上下载，这里推荐从MSDN（我告诉你）下载，可直接点击<a href="https://msdn.itellyou.cn/">镜像文件</a>跳转。在浏览中找到所下载镜像并选择。或直接选择稍后安装操作系统。然后点下一步。</p><p><img src="https://z3.ax1x.com/2021/08/18/fIwZmF.png"></p><p>系统选择你所下载的镜像的相对应系统,点击下一步。</p><p><img src="https://z3.ax1x.com/2021/08/18/fIw1l6.png"></p><p>名称可自定义，位置自行选择保存。点击下一步。</p><p><img src="https://z3.ax1x.com/2021/08/18/fIwUkd.png"></p><p>此处最大磁盘大小自行选择</p><p>单个文件的优点是在磁盘内容相对稳定时，其访问速度相对会快一点，但是如果虚拟磁盘增长很快，或容量变化很大，可能会产生大量碎片，性能下降会很明显。另一个缺点是如果单文件受损，相当于整个磁盘丢失，代价较大。</p><p>多个文件的处理方法的优点正是克服单文件的缺点，不过多文件的缺点在于文件链接复杂，访问效率相对单文件磁盘略为低些。</p><p>所以选择将虚拟磁盘存储为单个文件或将虚拟磁盘拆分成多个文件都可自行选择</p><p>点击下一步。</p><p><img src="https://z3.ax1x.com/2021/08/18/fIw2kj.png"></p><p>此处可直接点击完成</p><p><img src="https://z3.ax1x.com/2021/08/18/fIwIXT.png"></p><p><strong>绝对虚拟磁盘（lnsDisk）（虽然软件比较小，但是它只能虚拟小于两个G的磁盘）</strong></p><hr><p>从网上找到对应文件进行下载安装，选择语言并点击确定。</p><p><img src="https://z3.ax1x.com/2021/08/18/foK3ut.png"></p><p>软件将自动进行安装</p><p><img src="https://z3.ax1x.com/2021/08/18/foMZMn.png"></p><p>加载完成，点击下一步</p><p><img src="https://z3.ax1x.com/2021/08/18/foM0iD.png"></p><p>点击安装<img src="https://z3.ax1x.com/2021/08/18/foMRdf.png"></p><p>安装完成</p><p><img src="https://z3.ax1x.com/2021/08/18/foQFw6.png"></p><p>在开始菜单找到此文件夹</p><p><img src="https://z3.ax1x.com/2021/08/18/fo8jxg.png"></p><p>打开选择文件  launch DiskCreator.exe</p><p><img src="https://z3.ax1x.com/2021/08/18/foGqm9.png"></p><p>打开后，Browse对应查找、创建一个磁盘，Create对应创建、确认，Exit对应退出。Virtual Hard Disk Size：之后的0是创建磁盘的大小，单位是MB</p><p><img src="https://z3.ax1x.com/2021/08/18/foJB7R.png"></p><p>创建好之后可以使用InsDisk文件夹下第二个软件  Launch DiskLoader.exe ，这个是一个加载程序。选择刚刚创建的虚拟文件，选择并加载</p><p>加载完毕后打开磁盘管理，就可以看到所创建的虚拟磁盘</p><p>这个软件软件因版本原因也许并不兼容所有电脑，市面上目前也有很多的的虚拟磁盘软件，不一而足，这里就不一一介绍了。</p><p><strong>如果是xp的电脑就只能使用后两种，如果系统版本比较高，是win7或win7以上版本的可以使用第一种。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、为什么要学手工恢复数据</title>
      <link href="2021/08/16/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/1%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E6%89%8B%E5%B7%A5%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE/"/>
      <url>2021/08/16/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/1%E3%80%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E6%89%8B%E5%B7%A5%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="WinHex手工恢复数据基础之为什么要学手工恢复数据"><a href="#WinHex手工恢复数据基础之为什么要学手工恢复数据" class="headerlink" title="WinHex手工恢复数据基础之为什么要学手工恢复数据"></a>WinHex手工恢复数据基础之为什么要学手工恢复数据</h1><h2 id="学完我能做什么"><a href="#学完我能做什么" class="headerlink" title="学完我能做什么"></a>学完我能做什么</h2><ul><li>去数据恢复公司上班</li><li>在网上做兼职，远程帮人恢复数据</li><li>如果有软件编写能力的，学完可以编写数据恢复软件</li></ul><h2 id="手工恢复数据的优势"><a href="#手工恢复数据的优势" class="headerlink" title="手工恢复数据的优势"></a>手工恢复数据的优势</h2><ul><li><p>恢复效率高，速度快</p></li><li><p>恢复后的数据很完整</p></li><li><p>可以重组RAID磁盘阵列（高利润）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据恢复基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础教程 </tag>
            
            <tag> 数据恢复 </tag>
            
            <tag> Winhex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware Workstation 的 MacOS 解锁补丁</title>
      <link href="2021/08/12/VMware-Workstation-%E7%9A%84-MacOS-%E8%A7%A3%E9%94%81%E8%A1%A5%E4%B8%81/VMware-Workstation-%E7%9A%84-MacOS-%E8%A7%A3%E9%94%81%E8%A1%A5%E4%B8%81/"/>
      <url>2021/08/12/VMware-Workstation-%E7%9A%84-MacOS-%E8%A7%A3%E9%94%81%E8%A1%A5%E4%B8%81/VMware-Workstation-%E7%9A%84-MacOS-%E8%A7%A3%E9%94%81%E8%A1%A5%E4%B8%81/</url>
      
        <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>这个工具是用于VMware Workstation虚拟机中安装苹果系统的解锁补丁，也就是说要在Windows操作系统下的VMware Workstation中安装MacOS的必备工具。</p><p>该款工具转载于Github，本人修改了下载文件部分的源码，如果是下载的文件与我现在下载的文件相同，则直接使用我已经提前下载好文件（位于\tools中），免去了国外服务器下载速度慢的问题。</p><h2 id="原项目地址"><a href="#原项目地址" class="headerlink" title="原项目地址"></a>原项目地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Github项目地址: https://github.com/DrDonk/unlocker/releases</span><br></pre></td></tr></table></figure><h2 id="工具适用VMware版本范围"><a href="#工具适用VMware版本范围" class="headerlink" title="工具适用VMware版本范围"></a>工具适用VMware版本范围</h2><p>该款工具为 <strong>WorkStation 11-16 和 Player 7-16</strong> 所设计开发。</p><p>已经过测试的版本：</p><ul><li>Workstation 11/12/14/15/16 on Windows and Linux</li><li>Workstation Player 7/12/14/15/16 on Windows and Linux</li></ul><h2 id="所需系统环境"><a href="#所需系统环境" class="headerlink" title="所需系统环境"></a>所需系统环境</h2><ul><li>Python 3.8（<strong>自带Windows版本的环境</strong>，其他系统需要自行安装）</li></ul><h2 id="Windows的使用过程"><a href="#Windows的使用过程" class="headerlink" title="Windows的使用过程"></a>Windows的使用过程</h2><p>首先关闭VMware WorkStation，然后只需将文件解压出来，然后右键 <code>win-install.cmd</code> 文件，选择 <strong>以管理员身份运行</strong>，即可安装该补丁。<br><a href="https://imgtu.com/i/f0KAjf"><img src="https://z3.ax1x.com/2021/08/12/f0KAjf.md.png"></a></p><p>运行效果如下：</p><p><a href="https://imgtu.com/i/f0KVu8"><img src="https://z3.ax1x.com/2021/08/12/f0KVu8.md.png"></a></p><p>请留意是否出现错误，如果没有出现错误则会显示如上图类似的结果。然后再打开VMware Station之后，在 创建新的虚拟机 这里就可以看到客户操作系统这里可以选择 MacOS 了。</p><p><a href="https://imgtu.com/i/f0KkgP"><img src="https://z3.ax1x.com/2021/08/12/f0KkgP.md.jpg"></a></p><p>如果需要<strong>卸载该补丁</strong>，只需按照上面的方法运行<code>win-uninstall.cmd</code>文件，而<code>win-update-tools.cmd</code>则是用于更新这个补丁的。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>蓝奏云：<a href="https://wwr.lanzoui.com/iBBrQsjqo1i">https://wwr.lanzoui.com/iBBrQsjqo1i</a></p>]]></content>
      
      
      <categories>
          
          <category> VMware-Workstation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware-Workstation </tag>
            
            <tag> MacOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/29/hello-world/"/>
      <url>2021/05/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>date：5.29</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/29/hello-world/hello-world/"/>
      <url>2021/05/29/hello-world/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>date：5.29</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
